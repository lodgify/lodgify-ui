/*******************************
            Checkbox
*******************************/

.ui.checkbox {
  width: 100%;

  /* Label */
  & ~ label {
    cursor: pointer;
    user-select: none;
  }

  &.toggle.checked input[type="checkbox"] + label:before {
    background-color: @themeActionColorDefault !important;
    background-color: var(@themeActionColorIdentifier, @themeActionColorDefault) !important;
  }

  input {

    & ~ label {
      color: @black;
      top: 0;
      left: 0;

      &:before,
      &:after {
        cursor: pointer;
      }
    }
  }

  input:checked,
  &.radio input:checked {

    & ~ label {
      font-weight: bold;

      &:before {
        background-color: @themeActionColorDefault !important;
        background-color: var(@themeActionColorIdentifier, @themeActionColorDefault) !important;
      }
    }
  }

  /* Checkbox */

  /* Checkmark */
  &:not(.radio):not(.toggle) {

    input:checked,
    input:checked:focus {

      & ~ label:after {
        content: '\2713';
      }
    }
  }

  /* Label */

  /*-------------------
        States
--------------------*/

  /* Hover */

  /* Pressed */

  /* Focus */
  input[type="checkbox"]:focus {

    & + label {
      font-size: inherit;
      transform: none;
    }
  }

  /* Active */

  /* Active Focus */

  /* Indeterminate */

  /* Disabled */
  &.disabled {

    input,
    input:focus {

      & ~ label:after {
        color: @disabledCheckboxLabelTextColor;
      }
    }

    &,
    &.radio {

      input,
      input:focus {

        & ~ label:before {
          background-color: @disabledBackgroundColor;
          border-color: @disabledCheckboxBorderColor;
        }
      }
    }

    &.radio {

      input,
      input:focus {

        & ~ label:after {
          background-color: @disabledCheckboxLabelBackgroundColor;
        }
      }
    }

    &.toggle {

      input,
      input:focus {

        & ~ label:before {

          /* "important" marker required to overwrite the one declared in checkbox.less */
          background-color: @disabledBackgroundColor !important;
          border-width: @disabledToggleBorderWidth;
        }
      }
    }
  }

  /*-------------------
        Types
--------------------*/

  /* Radio */

  /* Uses px to avoid rounding issues with circles */

  /* Slider & Toggle Handle */

  /* Slider */

  /* Slider States */

  /* Toggle */

  /*-------------------
      Variations
--------------------*/

  /* Fluid */
  &.is-fluid {

    & > label {
      width: 100%;
      text-align: end;
    }

    &.is-label-left {

      & > label {
        text-align: start;
      }
    }
  }

  /* Left Labeled */
  &.is-label-left {

    & > label {
      padding: @isLeftLabelPadding;

      &:before {
        left: auto;
        right: 0;
      }

      &:after {
        left: auto;
        right: @isLeftLabelTickRightPosition;
      }
    }
  }
}

/* Label */
