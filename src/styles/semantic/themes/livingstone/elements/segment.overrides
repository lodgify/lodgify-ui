/*******************************
            Segment
*******************************/

/*-------------------
       Element
--------------------*/

.ui.segment {
  font-family: @bodyFont;
}

/*-------------------
       Group
--------------------*/

.ui.compact.segments .segment {
  padding: @groupedSegmentPadding;

  h4.ui.header {
    display: inline;
    line-height: @groupedSegmentMiniHeaderLineHeight;
  }
}

/*-------------------
       Coupling
--------------------*/

/* Page Grid Segment */

.ui.horizontal.segments > .segment {
  border-left: @border;
}

/*******************************
            States
*******************************/

/* Loading Dimmer */

/* Loading Spinner */

/*******************************
            Variations
*******************************/

/* Piled */

/* Circular */

/* Stacked */

/* Raised */

/* Padded */

/* Attached */

/* Inverted */

/* Floated */

/* Basic */

/* Colors */

/* Ordinality */

/* Horizontal Group with wrap */

.ui.horizontal.segments.horizontal-wrap {
  flex-wrap: wrap;

  > .segment {
    flex: @horizontalWrapFlex;
    margin-bottom: @horizontalWrapMarginBottom;
  }
}

/* Is Summary */

.ui.segments.is-summary {
  margin: 0;
  max-width: 100%;

  @media @smallestWidescreenScreen {

    .ui.horizontal.segments.horizontal-wrap {
      flex-wrap: nowrap;
    }
  }

  .segments.horizontal-wrap {

    .ui.segment .ui.header {
      padding: @priceTextPadding @priceTextPadding 0 @priceTextPadding;
    }

    .placeholder-wrapper,
    .inline-placeholder-wrapper {
      display: flex;
      width: @placeholderWrapperWidth;
      padding-top: @placeholderWrapperPaddingTop;
    }

    .placeholder-wrapper {
      flex-direction: column;
    }

    .inline-placeholder-wrapper {
      flex-direction: row;

      .placeholder {
        margin-right: @placeholderMarginRight;
      }
    }
  }

  .segment {
    white-space: nowrap;

    &.is-location-name,
    .ui.header {
      overflow: hidden;
      text-overflow: ellipsis;
    }

    &.is-location-name {
      max-width: @summaryLocationNameMaxWidth;
    }

    .ui.header {
      max-width: 100%;
    }
  }
}

/* Full bleed */

.ui.segment.full-bleed {
  background-position: center;
  background-size: cover;
  display: flex;
  height: ~"calc(100vh - var(@{fullBleedBottomOffsetIdentifier}, 0))";
  padding: 0;
  border-bottom: none;
  z-index: @heroZIndex;

  figure.responsive-image {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: @heroImageZIndex;
  }

  &.has-gradient {
    position: relative;

    &:before {
      background-image: @backgroundImageGradient;
      bottom: 0;
      content: "";
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
      z-index: @heroGradientZIndex;
    }
  }

  &.has-children {
    flex-direction: column;

    > *:not(.responsive-image):not(header) {
      position: relative;
      z-index: @heroContentZIndex;
    }

    > header {
      z-index: @heroHeaderZIndex;
    }
  }
}

/* Is Promotion */

.ui.segment.is-promotion {
  background-color: @promotionBackgroundColor;
  background-color: var(@themeActionColorIdentifier, @themeActionColorDefault);
  color: var(@themeActionContrastColorIdentifier, @themeActionContrastColorDefault);
  border-radius: @promotionBorderRadius;
  cursor: pointer;
  z-index: @promotionZIndex;

  .ui.grid.first-grid > .row {
    overflow: hidden;
    border-radius: @promotionBorderRadius;
    padding: 0;
  }

  .responsive-image .ui.image {
    min-height: 100%;
  }

  @media @tabletScreen {
    padding: 0;

    .ui.stackable.grid {
      margin-left: 0 !important;
      margin-right: 0 !important;
    }

    p + .button {
      float: none;
      margin-left: auto;
      margin-right: auto;
    }

    .content-section {
      min-height: @promotionMinHeight;

      h3 {
        margin-top: @promotionStackedHeadingMarginTop;
      }
    }

    .discount-section {
      height: auto;

      .ui.statistic {
        padding: @promotionStackedDiscountPadding;
      }
    }
  }

  @media @computerScreen {

    &:hover .content-section {

      p,
      p + .button,
      .header,
      > figure.responsive-image .ui.image {
        filter: @promotionHoverBlur;
        -ms-filter: @promotionHoverBlur;
        pointer-events: none;
      }

      .book-now-button-container .button {
        opacity: 1;
      }
    }
  }

  .discount-section p {
    color: inherit;
  }

  .content-section {
    min-height: @promotionMinHeight;
    position: relative;
    overflow: hidden;

    > * {
      position: inherit;
      z-index: @promotionContentLayerZIndex;
    }

    &:after {
      position: absolute;
      top: @promotionBackgroundOffset;
      left: @promotionBackgroundOffset;
      right: @promotionBackgroundOffset;
      bottom: @promotionBackgroundOffset;
      content: "";
      background-color: @black;
      opacity: @promotionOverlayOpacity;
      z-index: @promotionAfterLayerZIndex;
    }

    > figure.responsive-image {
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
      z-index: @promotionBeforeLayerZIndex;

      > img {
        width: 100%;
        height: auto;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }

      @supports (object-fit: cover) {

        > img {
          height: 100%;
          width: 100%;
          top: 0;
          left: 0;
          transform: none;
          object-fit: cover;
        }
      }
    }

    p,
    .button,
    &:after,
    > figure.responsive-image .ui.image,
    .ui.header {
      transition: filter @promotionOverlayTransitionTime, -ms-filter @promotionOverlayTransitionTime;
    }

    p,
    .ui.header {
      color: @pureWhite;
    }

    p {
      margin: 0;

      + button {
        margin-top: @5px;
      }
    }

    .book-now-button-container {
      padding-bottom: 0;

      .button {
        float: none;
        margin: 0 auto;
        opacity: 0;
        transition: opacity @promotionOverlayTransitionTime;
      }
    }
  }
}

.ui.segment.is-input-segment {

  &.is-toggle-input-segment {
    cursor: pointer;
    user-select: none;

    .ui.input,
    .ui.form .ui.input {

      .ui.toggle.checkbox input {
        position: static;
        top: auto;
        left: auto;
      }
    }
  }

  &.is-counter-input-segment {

    & > .flex-container {

      .flex-container {
        width: 100%;
      }
    }
  }

  &.is-checkbox-input-segment > .flex-container > .grid {
    width: 100%;
  }
}
