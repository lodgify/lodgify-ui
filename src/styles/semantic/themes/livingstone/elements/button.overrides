/*******************************
            Button
*******************************/

/*-------------------
       Element
--------------------*/

/* Button */
.ui.button {
  font-family: @bodyFont;
  background-color: var(@themeActionColorIdentifier, @themeActionColorDefault);
  color: var(@themeActionContrastColorIdentifier, @themeActionContrastColorDefault);
  will-change: @willChange;
  transition:
    background-color @transitionTime @transitionFunction,
    color @transitionTime @transitionFunction,
    transform @transitionTime @transitionFunction;
}

/* Button defaults to using same height as input globally */

/* Text */

/* Internal Shadow */

/* Box Shadow */

/* Icon */
.ui.button > .icon:not(.button) > svg {
  margin: @iconSvgMargin;
}

.ui.button.circular,
.ui.button {
  display: flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;

  > .icon {
    width: auto;
  }
}

/* Loader */

/*
@willChange: box-shadow, transform, opacity, color, background;
*/

/*-------------------
        Group
--------------------*/

/*-------------------
        States
--------------------*/

/* Hovered */
.ui.button:hover {
  background-color: var(@themeActionDarkerColorIdentifier, @themeActionDarkerColorDefault);
  color: var(@themeActionContrastColorIdentifier, @themeActionContrastColorDefault);
}

/* Focused */
.ui.button:focus {
  background-color: var(@themeActionDarkerColorIdentifier, @themeActionDarkerColorDefault) !important;
  color: var(@themeActionColorIdentifier, @themeActionColorDefault) !important;
}

/* Disabled */
.ui.disabled.button {
  background-color: @disabledBackgroundColor;
  color: @disabledFontColor;
}

/* Pressed Down */

/* Active */

/* Active + Hovered */

/* Loading */

/*-------------------
        Types
--------------------*/

/* Or */

/* Icon */

/* Labeled */

/* Labeled Icon */

/* Inverted */

/* Basic */
.ui.basic.button {
  padding: @basicVerticalPadding @basicHorizontalPadding @basicVerticalPadding 0;
  color: var(@themeActionColorIdentifier, @themeActionColorDefault) !important;

  a& {
    text-decoration: underline;
    -moz-appearance: none;
    -webkit-appearance: none;
  }

  &.fluid {
    margin-right: 0;
    padding: @basicVerticalPadding @basicHorizontalPadding;
  }
}

/* Basic Hover */
.ui.basic.button:hover {
  color: var(@themeActionDarkerColorIdentifier, @themeActionDarkerColorDefault) !important;
}

/* Basic Focus */
.ui.basic.button:focus {
  color: var(@themeActionDarkerColorIdentifier, @themeActionDarkerColorDefault) !important;
}

/* Basic Down */

/* Basic Active */

/* Basic Inverted */

/* Basic Group */

/*-------------------
      Variations
--------------------*/

/* Colors */

/* Colored */

/* Inverted */

/* Ordinality */

/* Compact */

/* Attached */

/* Floated */

/* Animated */

/* Primary */
.ui.button.primary {
  background-color: @themeActionColorDefault;
  background-color: var(@themeActionColorIdentifier, @themeActionColorDefault);
  color: @themeActionContrastColorDefault;
  color: var(@themeActionContrastColorIdentifier, @themeActionContrastColorDefault);
}

/* Secondary */
.ui.button.secondary {
  color: @secondaryTextColor;
  border-radius: @secondaryBorderRadius;
  background-color: @secondaryBackgroundColor;
}

/* Circular */
.ui.button.circular {
  border-radius: @circularBorderRadius;
}

/* Has Shadow */
.ui.button.has-shadow {
  box-shadow: @hasShadowBoxShadow;
}

/* Has Outline */
.ui.button.basic.has-outline {
  border-style: solid;
  border-width: @hasOutlineBorderWidth;
  border-color: @themeActionColorDefault;
  border-color: var(@themeActionColorIdentifier, @themeActionColorDefault);
  padding: @basicVerticalPadding @basicHorizontalPadding;
  color: @themeActionColorDefault !important;
  color: var(@themeActionColorIdentifier, @themeActionColorDefault) !important;

  &.circular {
    padding: 0;
    width: @hasOutlineAndCircularMinWidth;
    height: @hasOutlineAndCircularMinHeight;

    i.icon {
      margin: 0;
    }
  }
}
