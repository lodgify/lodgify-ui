/*******************************
            Input
*******************************/

/*-------------------
      Element
--------------------*/

.ui.form .ui.input,
.ui.input {
  max-width: @inputMaxWidth;
  width: @inputWidth;

  &.compact {
    width: auto;
  }

  &,
  & input {
    font-family: @bodyFont;
  }

  /*-------------------
        Types
--------------------*/

  /* Icon Input */

  /*
    Partial duplication of declarations
    for `.ui.icon.input > i.icon`
    in `node_modules/semantic-ui-less/definitions/elements/input.less`
  */
  &.left.icon {
    min-width: @iconMinWidth;

    & > i.icon {
      padding: @iconPadding;
    }

    & > i.flag:not(.icon) {
      cursor: default;
      height: 100%;
      margin: 0;
      overflow: hidden;
      position: absolute;
      width: @iconWidth;

      &:before {
        filter: @grayscaleFilter;
        left: 50%;
        margin-left: @flagIconXOffset;
        margin-top: @flagIconYOffset;
        position: absolute;
        text-align: center;
        top: 50%;
        transform: @flagIconScale;
      }
    }

    input:focus ~ i.flag:not(.icon),
    textarea:focus ~ i.flag:not(.icon),
    &.dirty > i.flag:not(.icon) {

      &:before {
        filter: none;
      }
    }
  }

  /* Circular Icon Input */
  .ui.checkbox {

    label {
      left: 0;
      top: 0;
    }
  }

  .ui.checkbox > label.privacy-consent-label {
    display: flex;
    cursor: pointer;
    flex-wrap: wrap;

    .ui.button {
      padding: @checkboxPrivacyConsentLabelButtonPadding;
      line-height: inherit;
      margin-bottom: @checkboxPrivacyConsentButtonBottomMargin;
    }

    .ui.button,
    p {
      line-height: @checkboxPrivacyConsentParagraphLineHeight;
    }
  }

  /* textarea */

  textarea {
    background: @background;
    border: @border;
    font-family: @inputFont;
    outline: none;
    width: @inputWidth;
    padding: @padding;
  }

  /* Date range picker */

  .DateRangePickerInput {
    min-width: @dateRangePickerMinWidth;

    input {
      text-overflow: ellipsis;

      &.DateInput_input__focused {
        display: flex;
      }
    }
  }

  /* Phone input */

  .react-phone-number-input {
    background: @background;
    border: @border;
    width: 100%;

    .react-phone-number-input__row {
      display: flex;

      .dropdown-container {
        cursor: pointer;
        flex-basis: @phoneInputDropdownWidth;
        flex-shrink: 0;
        min-width: 0;

        .ui.search.selection.dropdown {
          background: transparent;
          border: none;
          box-shadow: none;
          color: @greySix;
          padding: @phoneInputDropdownPadding;

          input.search {
            padding: 0;
            width: 0;
          }

          .text {
            cursor: pointer;

            .flag,
            .icon {
              margin: 0;
              transform: @phoneInputFlagPositionTransform;
            }

            .flag {
              opacity: 1;
            }

            .icon {
              margin-top: @phoneInputIconMarginTop;
            }
          }

          > .icon {
            padding-right: 0;
            right: 0;
          }

          .visible.menu {
            width: @phoneInputDropdownMenuWidth;
          }
        }
      }

      .react-phone-number-input__input.react-phone-number-input__phone {
        background: transparent;
        border: none;
        flex-grow: 1;
        outline: none;
        padding: 0;
        width: 100%;
      }
    }
  }

  /*-------------------
        States
  --------------------*/

  /* Placeholder */

  /* Down */

  /* Focus */
  textarea:focus,
  .react-phone-number-input.react-phone-number-input--focus {
    border-color: @focusBorderColor;
    background: @focusBackground;
    color: @focusColor;
  }

  .react-phone-number-input.react-phone-number-input--focus {

    .react-phone-number-input__row .dropdown-container .ui.search.selection.dropdown {
      color: @focusColor;

      .text .icon {
        color: @focusColor;
        opacity: 1;
      }
    }
  }

  /* Error */
  &.error {

    input,
    textarea,
    .ui.checkbox label:before,
    .react-phone-number-input {
      background: @focusedInputBackground;
      border-color: @errorBorder;
    }

    .ui.pointing.below.label {
      font-weight: @errorMessageFontWeight;
      padding: @errorMessagePadding;
      position: absolute;
      right: @errorMessageRightPosition;
      top: @errorMessageTopPosition;

      &:before {
        left: auto;
        right: 6px;
      }
    }
  }

  /* Loader */

  /* Hover */
  &:hover:not(.error):not(.valid):not(.dirty):not(.focus) {

    input:not(:focus),
    textarea:not(:focus),
    .react-phone-number-input:not(.react-phone-number-input--focus) {
      background: @focusedInputBackground;
      border-color: @hoveredInputBorderColor;
    }
  }

  /* Dirty */
  &.dirty {

    i.icon {
      opacity: @iconFocusOpacity;
    }
  }

  &.dirty:not(.error):not(.valid) {

    input,
    textarea,
    .react-phone-number-input {
      background: @focusedInputBackground;
      border-color: @focusedFormBorderColor;
    }

    .react-phone-number-input {

      .react-phone-number-input__row .dropdown-container .ui.search.selection.dropdown {
        color: @focusColor;

        .text .icon {
          color: @focusColor;
          opacity: 1;
        }
      }
    }
  }

  /* Valid */
  &.valid {

    input,
    textarea,
    .react-phone-number-input {
      background: @focusedInputBackground;
      border-color: @validBorderColor;
    }

    i.green.icon {
      left: inherit;
      opacity: @validIconOpacity;
      padding: @validIconPadding;
      position: absolute;
      right: @inputHorizontalPadding;
    }

    .ui.checkbox ~ i.green.icon {
      top: @validCheckBoxIconTopPosition;
    }
  }

  /*-------------------
      Variations
--------------------*/

  /* Inverted */

  /* Fluid */
  &.fluid {
    max-width: none;
  }
}

.ui.input.error {

  .ui.checkbox ~ .ui.pointing.below.label {
    left: 0;
    right: auto;

    &:before {
      left: @7px;
      right: auto;
    }
  }
}
