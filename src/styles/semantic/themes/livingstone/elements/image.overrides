/*******************************
            Image
*******************************/

/*-------------------
       Element
--------------------*/

/*-------------------
       Types
--------------------*/

/*-------------------
      Variations
--------------------*/

/* Placeholder image */

.image-with-placeholder-container {
  position: relative;
  display: inline-block;
  overflow: hidden;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: @imageWithPlaceholderContainerTransition;

  &.is-visible {
    opacity: 1;
  }

  &.has-blurred-children {

    > img,
    .placeholder-image-container {
      opacity: 1;
      filter: @imageWithPlaceholderBlur;
      -ms-filter: @imageWithPlaceholderBlur;
      transform: @imageWithPlaceholderTransformScale;
    }
  }

  .placeholder-image-container {
    opacity: 0;
  }

  .placeholder-image-container,
  .placeholder-image,
  img.ui.image {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    transition: @imageWithPlaceholderTransition;
  }
}

/* Responsive Image */

picture.responsive-image {

  &.is-fluid {
    height: 100%;
    width: 100%;
    position: relative;
    overflow: hidden;

    /* Object fit cover Fallback */
    .ui.fluid.image {
      min-width: 100%;
      width: auto;
      max-width: none;
      min-height: 100%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .image-with-placeholder-container {

      .ui.fluid.image {
        width: auto;
        max-width: none;
      }

      &.has-blurred-children {

        > .ui.fluid.image {
          transform: translate(-50%, -50%) @imageWithPlaceholderTransformScale;
        }
      }
    }

    @supports (object-fit: cover) {

      .ui.fluid.image {
        position: static;
        object-fit: cover;
        height: inherit;
        width: inherit;
        transform: none;
      }

      .image-with-placeholder-container {

        .ui.fluid.image {
          width: inherit;
          max-width: inherit;
        }

        &.has-blurred-children {

          > .ui.fluid.image {
            transform: @imageWithPlaceholderTransformScale;
          }
        }
      }
    }
  }

  &.is-circular {

    .ui.image {
      border-radius: @circularBorderRadius;
    }
  }

  &.is-rounded {

    .ui.image {
      border-radius: @thumbnailBorderRadius;
    }
  }
}
