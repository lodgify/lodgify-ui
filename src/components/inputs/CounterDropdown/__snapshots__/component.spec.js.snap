// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CounterDropdown if \`props.willOpenAbove\` is true should render the right structure 1`] = `
<CounterDropdown
  counterLabel="counterLabel"
  dropdownLabel="dropdownLabel"
  willOpenAbove={true}
>
  <Popup
    className="counter-dropdown"
    content={
      <FlexContainer
        alignContent={null}
        alignItems={null}
        className={null}
        flexDirection="row"
        flexWrap={null}
        justifyContent="space-between"
      >
        <Counter
          min={0}
          name=""
          onChange={[Function]}
          renderValue={[Function]}
          value={0}
        />
      </FlexContainer>
    }
    disabled={false}
    eventsEnabled={true}
    offset={0}
    on="click"
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    pinned={false}
    position="top left"
    text="dropdownLabel"
    trigger={
      <div
        className="dropdown-container"
        role="button"
      >
        <div
          className="ui selection dropdown counter-dropdown-trigger"
        >
          dropdownLabel
          <Icon
            className={null}
            color={null}
            hasBorder={false}
            isButton={false}
            isCircular={false}
            isColorInverted={false}
            isDisabled={false}
            isLabelLeft={false}
            labelText={null}
            labelWeight={null}
            name="caret down"
            path={null}
            size={null}
          />
        </div>
      </div>
    }
  >
    <Portal
      closeOnDocumentClick={true}
      closeOnEscape={true}
      closeOnTriggerClick={true}
      eventPool="default"
      onClose={[Function]}
      onMount={[Function]}
      onOpen={[Function]}
      onUnmount={[Function]}
      open={false}
      openOnTriggerClick={true}
      trigger={
        <div
          className="dropdown-container"
          role="button"
        >
          <div
            className="ui selection dropdown counter-dropdown-trigger"
          >
            dropdownLabel
            <Icon
              className={null}
              color={null}
              hasBorder={false}
              isButton={false}
              isCircular={false}
              isColorInverted={false}
              isDisabled={false}
              isLabelLeft={false}
              labelText={null}
              labelWeight={null}
              name="caret down"
              path={null}
              size={null}
            />
          </div>
        </div>
      }
      triggerRef={
        Object {
          "current": <div
            class="dropdown-container"
            role="button"
          >
            <div
              class="ui selection dropdown counter-dropdown-trigger"
            >
              dropdownLabel
              <i
                class="icon"
              >
                <svg
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20,8.5l-8,7-8-7Z"
                    fill="currentColor"
                  />
                </svg>
              </i>
            </div>
          </div>,
        }
      }
    >
      <Ref
        innerRef={[Function]}
      >
        <RefFindNode
          innerRef={[Function]}
        >
          <div
            className="dropdown-container"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            role="button"
          >
            <div
              className="ui selection dropdown counter-dropdown-trigger"
            >
              dropdownLabel
              <Icon
                className={null}
                color={null}
                hasBorder={false}
                isButton={false}
                isCircular={false}
                isColorInverted={false}
                isDisabled={false}
                isLabelLeft={false}
                labelText={null}
                labelWeight={null}
                name="caret down"
                path={null}
                size={null}
              >
                <i
                  className="icon"
                >
                  <svg
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20,8.5l-8,7-8-7Z"
                      fill="currentColor"
                    />
                  </svg>
                </i>
              </Icon>
            </div>
          </div>
        </RefFindNode>
      </Ref>
    </Portal>
  </Popup>
</CounterDropdown>
`;

exports[`CounterDropdown should render the right structure 1`] = `
<CounterDropdown
  counterLabel="counterLabel"
  dropdownLabel="dropdownLabel"
  willOpenAbove={false}
>
  <Popup
    className="counter-dropdown"
    content={
      <FlexContainer
        alignContent={null}
        alignItems={null}
        className={null}
        flexDirection="row"
        flexWrap={null}
        justifyContent="space-between"
      >
        <Counter
          min={0}
          name=""
          onChange={[Function]}
          renderValue={[Function]}
          value={0}
        />
      </FlexContainer>
    }
    disabled={false}
    eventsEnabled={true}
    offset={0}
    on="click"
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    pinned={false}
    position="bottom left"
    text="dropdownLabel"
    trigger={
      <div
        className="dropdown-container"
        role="button"
      >
        <div
          className="ui selection dropdown counter-dropdown-trigger"
        >
          dropdownLabel
          <Icon
            className={null}
            color={null}
            hasBorder={false}
            isButton={false}
            isCircular={false}
            isColorInverted={false}
            isDisabled={false}
            isLabelLeft={false}
            labelText={null}
            labelWeight={null}
            name="caret down"
            path={null}
            size={null}
          />
        </div>
      </div>
    }
  >
    <Portal
      closeOnDocumentClick={true}
      closeOnEscape={true}
      closeOnTriggerClick={true}
      eventPool="default"
      onClose={[Function]}
      onMount={[Function]}
      onOpen={[Function]}
      onUnmount={[Function]}
      open={false}
      openOnTriggerClick={true}
      trigger={
        <div
          className="dropdown-container"
          role="button"
        >
          <div
            className="ui selection dropdown counter-dropdown-trigger"
          >
            dropdownLabel
            <Icon
              className={null}
              color={null}
              hasBorder={false}
              isButton={false}
              isCircular={false}
              isColorInverted={false}
              isDisabled={false}
              isLabelLeft={false}
              labelText={null}
              labelWeight={null}
              name="caret down"
              path={null}
              size={null}
            />
          </div>
        </div>
      }
      triggerRef={
        Object {
          "current": <div
            class="dropdown-container"
            role="button"
          >
            <div
              class="ui selection dropdown counter-dropdown-trigger"
            >
              dropdownLabel
              <i
                class="icon"
              >
                <svg
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20,8.5l-8,7-8-7Z"
                    fill="currentColor"
                  />
                </svg>
              </i>
            </div>
          </div>,
        }
      }
    >
      <Ref
        innerRef={[Function]}
      >
        <RefFindNode
          innerRef={[Function]}
        >
          <div
            className="dropdown-container"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            role="button"
          >
            <div
              className="ui selection dropdown counter-dropdown-trigger"
            >
              dropdownLabel
              <Icon
                className={null}
                color={null}
                hasBorder={false}
                isButton={false}
                isCircular={false}
                isColorInverted={false}
                isDisabled={false}
                isLabelLeft={false}
                labelText={null}
                labelWeight={null}
                name="caret down"
                path={null}
                size={null}
              >
                <i
                  className="icon"
                >
                  <svg
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20,8.5l-8,7-8-7Z"
                      fill="currentColor"
                    />
                  </svg>
                </i>
              </Icon>
            </div>
          </div>
        </RefFindNode>
      </Ref>
    </Portal>
  </Popup>
</CounterDropdown>
`;
