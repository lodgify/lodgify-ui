// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CountrySelectComponent render should render the right structure 1`] = `
<CountrySelectComponent
  onChange={[Function]}
  onFocus={[Function]}
  options={Array []}
>
  <Dropdown
    error={false}
    getOptionsWithSearch={[Function]}
    icon={null}
    isClearable={false}
    isCompact={false}
    isDisabled={false}
    isFluid={true}
    isSearchable={false}
    isValid={false}
    label=""
    name=""
    noResultsText="No results"
    onChange={[Function]}
    onFocus={[Function]}
    options={
      Array [
        Object {
          "text": "some text",
          "value": "some value ",
        },
      ]
    }
    willOpenAbove={false}
  >
    <div
      className="dropdown-container dirty"
    >
      <Dropdown
        additionLabel="Add "
        additionPosition="top"
        clearable={false}
        closeOnBlur={true}
        closeOnEscape={true}
        compact={false}
        deburr={false}
        disabled={false}
        icon={
          <Icon
            className={null}
            color={null}
            hasBorder={false}
            isButton={false}
            isCircular={false}
            isColorInverted={false}
            isDisabled={false}
            isLabelLeft={false}
            labelText={null}
            labelWeight={null}
            name="caret down"
            path={null}
            size={null}
          />
        }
        minCharacters={1}
        noResultsMessage="No results"
        onChange={[Function]}
        onClose={[Function]}
        onOpen={[Function]}
        openOnFocus={true}
        options={
          Array [
            Object {
              "key": "0",
              "label": undefined,
              "text": "some text",
              "value": "some value ",
            },
          ]
        }
        placeholder=""
        renderLabel={[Function]}
        search={[Function]}
        searchInput="text"
        selectOnBlur={false}
        selectOnNavigation={true}
        selection={true}
        upward={false}
        wrapSelection={true}
      >
        <Ref
          innerRef={
            Object {
              "current": <div
                aria-disabled="false"
                aria-expanded="false"
                class="ui search selection dropdown"
                role="combobox"
              >
                <input
                  aria-autocomplete="list"
                  autocomplete="off"
                  class="search"
                  tabindex="0"
                  type="text"
                  value=""
                />
                <div
                  aria-atomic="true"
                  aria-live="polite"
                  class="text"
                  role="alert"
                />
                <i
                  class="icon"
                >
                  <svg
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20,8.5l-8,7-8-7Z"
                      fill="currentColor"
                    />
                  </svg>
                </i>
                <div
                  class="menu transition"
                  role="listbox"
                >
                  <div
                    aria-checked="false"
                    aria-selected="true"
                    class="selected item"
                    role="option"
                    style="pointer-events: all;"
                  >
                    <span
                      class="text"
                    >
                      some text
                    </span>
                  </div>
                </div>
              </div>,
            }
          }
        >
          <RefFindNode
            innerRef={
              Object {
                "current": <div
                  aria-disabled="false"
                  aria-expanded="false"
                  class="ui search selection dropdown"
                  role="combobox"
                >
                  <input
                    aria-autocomplete="list"
                    autocomplete="off"
                    class="search"
                    tabindex="0"
                    type="text"
                    value=""
                  />
                  <div
                    aria-atomic="true"
                    aria-live="polite"
                    class="text"
                    role="alert"
                  />
                  <i
                    class="icon"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M20,8.5l-8,7-8-7Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                  <div
                    class="menu transition"
                    role="listbox"
                  >
                    <div
                      aria-checked="false"
                      aria-selected="true"
                      class="selected item"
                      role="option"
                      style="pointer-events: all;"
                    >
                      <span
                        class="text"
                      >
                        some text
                      </span>
                    </div>
                  </div>
                </div>,
              }
            }
          >
            <div
              aria-disabled={false}
              aria-expanded={false}
              className="ui search selection dropdown"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              role="combobox"
            >
              <Ref
                innerRef={
                  Object {
                    "current": <input
                      aria-autocomplete="list"
                      autocomplete="off"
                      class="search"
                      tabindex="0"
                      type="text"
                      value=""
                    />,
                  }
                }
              >
                <RefFindNode
                  innerRef={
                    Object {
                      "current": <input
                        aria-autocomplete="list"
                        autocomplete="off"
                        class="search"
                        tabindex="0"
                        type="text"
                        value=""
                      />,
                    }
                  }
                >
                  <DropdownSearchInput
                    autoComplete="off"
                    key="text"
                    onChange={[Function]}
                    style={
                      Object {
                        "width": undefined,
                      }
                    }
                    tabIndex={0}
                    type="text"
                    value=""
                  >
                    <input
                      aria-autocomplete="list"
                      autoComplete="off"
                      className="search"
                      onChange={[Function]}
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                      tabIndex={0}
                      type="text"
                      value=""
                    />
                  </DropdownSearchInput>
                </RefFindNode>
              </Ref>
              <div
                aria-atomic={true}
                aria-live="polite"
                className="text"
                role="alert"
              />
              <Icon
                className=""
                color={null}
                hasBorder={false}
                isButton={false}
                isCircular={false}
                isColorInverted={false}
                isDisabled={false}
                isLabelLeft={false}
                labelText={null}
                labelWeight={null}
                name="caret down"
                onClick={[Function]}
                path={null}
                size={null}
              >
                <i
                  className="icon"
                  onClick={[Function]}
                >
                  <svg
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20,8.5l-8,7-8-7Z"
                      fill="currentColor"
                    />
                  </svg>
                </i>
              </Icon>
              <DropdownMenu
                role="listbox"
              >
                <div
                  className="menu transition"
                  role="listbox"
                >
                  <DropdownItem
                    active={false}
                    key="0"
                    onClick={[Function]}
                    selected={true}
                    style={
                      Object {
                        "pointerEvents": "all",
                      }
                    }
                    text="some text"
                    value="some value "
                  >
                    <div
                      aria-checked={false}
                      aria-selected={true}
                      className="selected item"
                      onClick={[Function]}
                      role="option"
                      style={
                        Object {
                          "pointerEvents": "all",
                        }
                      }
                    >
                      <span
                        className="text"
                      >
                        some text
                      </span>
                    </div>
                  </DropdownItem>
                </div>
              </DropdownMenu>
            </div>
          </RefFindNode>
        </Ref>
      </Dropdown>
    </div>
  </Dropdown>
</CountrySelectComponent>
`;
