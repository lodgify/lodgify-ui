// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Pagination /> by default should render the right structure 1`] = `
<Pagination
  isShowingPageNumbers={false}
  onPageChange={[Function]}
  startingPage={1}
  totalPages={5}
>
  <Pagination
    aria-label="Pagination Navigation"
    boundaryRange={10}
    className=""
    defaultActivePage={1}
    ellipsisItem="..."
    firstItem={null}
    lastItem={null}
    nextItem={
      <Button
        as="button"
        circular={true}
        content={null}
      >
        <Icon
          className={null}
          color={null}
          hasBorder={false}
          isButton={false}
          isCircular={false}
          isColorInverted={true}
          isDisabled={false}
          isLabelLeft={false}
          labelText={null}
          labelWeight={null}
          name="chevron right"
          path={null}
          size={null}
        />
      </Button>
    }
    onPageChange={[Function]}
    pageItem={
      <Label
        circular={true}
        content={null}
        empty={true}
        size="tiny"
      />
    }
    prevItem={
      <Button
        as="button"
        circular={true}
        content={null}
      >
        <Icon
          className={null}
          color={null}
          hasBorder={false}
          isButton={false}
          isCircular={false}
          isColorInverted={true}
          isDisabled={false}
          isLabelLeft={false}
          labelText={null}
          labelWeight={null}
          name="chevron left"
          path={null}
          size={null}
        />
      </Button>
    }
    secondary={true}
    siblingRange={1}
    totalPages={5}
  >
    <Menu
      aria-label="Pagination Navigation"
      className=""
      pagination={true}
      role="navigation"
      secondary={true}
    >
      <div
        aria-label="Pagination Navigation"
        className="ui pagination secondary menu"
        role="navigation"
      >
        <Button
          active={false}
          as="button"
          circular={true}
          content={null}
          key="prevItem-1"
          onClick={[Function]}
          type="prevItem"
          value={1}
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui circular button"
                  type="prevItem"
                  value="1"
                >
                  <i
                    class="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui circular button"
                    type="prevItem"
                    value="1"
                  >
                    <i
                      class="icon inverted"
                    >
                      <svg
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                          fill="currentColor"
                        />
                      </svg>
                    </i>
                  </button>,
                }
              }
            >
              <button
                className="ui circular button"
                onClick={[Function]}
                type="prevItem"
                value={1}
              >
                <Icon
                  className={null}
                  color={null}
                  hasBorder={false}
                  isButton={false}
                  isCircular={false}
                  isColorInverted={true}
                  isDisabled={false}
                  isLabelLeft={false}
                  labelText={null}
                  labelWeight={null}
                  name="chevron left"
                  path={null}
                  size={null}
                >
                  <i
                    className="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </Icon>
              </button>
            </RefFindNode>
          </Ref>
        </Button>
        <Label
          active={true}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-1"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={1}
        >
          <div
            className="ui tiny active circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={1}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-2"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={2}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={2}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-3"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={3}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={3}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-4"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={4}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={4}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-5"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={5}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={5}
          />
        </Label>
        <Button
          active={false}
          as="button"
          circular={true}
          content={null}
          key="nextItem-2"
          onClick={[Function]}
          type="nextItem"
          value={2}
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui circular button"
                  type="nextItem"
                  value="2"
                >
                  <i
                    class="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui circular button"
                    type="nextItem"
                    value="2"
                  >
                    <i
                      class="icon inverted"
                    >
                      <svg
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                          fill="currentColor"
                        />
                      </svg>
                    </i>
                  </button>,
                }
              }
            >
              <button
                className="ui circular button"
                onClick={[Function]}
                type="nextItem"
                value={2}
              >
                <Icon
                  className={null}
                  color={null}
                  hasBorder={false}
                  isButton={false}
                  isCircular={false}
                  isColorInverted={true}
                  isDisabled={false}
                  isLabelLeft={false}
                  labelText={null}
                  labelWeight={null}
                  name="chevron right"
                  path={null}
                  size={null}
                >
                  <i
                    className="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </Icon>
              </button>
            </RefFindNode>
          </Ref>
        </Button>
      </div>
    </Menu>
  </Pagination>
</Pagination>
`;

exports[`<Pagination /> if \`props.activePage\` is defined should render the right structure 1`] = `
<Pagination
  activePage={1}
  isShowingPageNumbers={false}
  onPageChange={[Function]}
  startingPage={1}
  totalPages={5}
>
  <Pagination
    activePage={1}
    aria-label="Pagination Navigation"
    boundaryRange={10}
    className=""
    ellipsisItem="..."
    firstItem={null}
    lastItem={null}
    nextItem={
      <Button
        as="button"
        circular={true}
        content={null}
      >
        <Icon
          className={null}
          color={null}
          hasBorder={false}
          isButton={false}
          isCircular={false}
          isColorInverted={true}
          isDisabled={false}
          isLabelLeft={false}
          labelText={null}
          labelWeight={null}
          name="chevron right"
          path={null}
          size={null}
        />
      </Button>
    }
    onPageChange={[Function]}
    pageItem={
      <Label
        circular={true}
        content={null}
        empty={true}
        size="tiny"
      />
    }
    prevItem={
      <Button
        as="button"
        circular={true}
        content={null}
      >
        <Icon
          className={null}
          color={null}
          hasBorder={false}
          isButton={false}
          isCircular={false}
          isColorInverted={true}
          isDisabled={false}
          isLabelLeft={false}
          labelText={null}
          labelWeight={null}
          name="chevron left"
          path={null}
          size={null}
        />
      </Button>
    }
    secondary={true}
    siblingRange={1}
    totalPages={5}
  >
    <Menu
      aria-label="Pagination Navigation"
      className=""
      pagination={true}
      role="navigation"
      secondary={true}
    >
      <div
        aria-label="Pagination Navigation"
        className="ui pagination secondary menu"
        role="navigation"
      >
        <Button
          active={false}
          as="button"
          circular={true}
          content={null}
          key="prevItem-1"
          onClick={[Function]}
          type="prevItem"
          value={1}
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui circular button"
                  type="prevItem"
                  value="1"
                >
                  <i
                    class="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui circular button"
                    type="prevItem"
                    value="1"
                  >
                    <i
                      class="icon inverted"
                    >
                      <svg
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                          fill="currentColor"
                        />
                      </svg>
                    </i>
                  </button>,
                }
              }
            >
              <button
                className="ui circular button"
                onClick={[Function]}
                type="prevItem"
                value={1}
              >
                <Icon
                  className={null}
                  color={null}
                  hasBorder={false}
                  isButton={false}
                  isCircular={false}
                  isColorInverted={true}
                  isDisabled={false}
                  isLabelLeft={false}
                  labelText={null}
                  labelWeight={null}
                  name="chevron left"
                  path={null}
                  size={null}
                >
                  <i
                    className="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </Icon>
              </button>
            </RefFindNode>
          </Ref>
        </Button>
        <Label
          active={true}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-1"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={1}
        >
          <div
            className="ui tiny active circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={1}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-2"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={2}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={2}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-3"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={3}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={3}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-4"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={4}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={4}
          />
        </Label>
        <Label
          active={false}
          circular={true}
          content={null}
          empty={true}
          key="pageItem-5"
          onClick={[Function]}
          size="tiny"
          type="pageItem"
          value={5}
        >
          <div
            className="ui tiny circular empty label"
            onClick={[Function]}
            type="pageItem"
            value={5}
          />
        </Label>
        <Button
          active={false}
          as="button"
          circular={true}
          content={null}
          key="nextItem-2"
          onClick={[Function]}
          type="nextItem"
          value={2}
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui circular button"
                  type="nextItem"
                  value="2"
                >
                  <i
                    class="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui circular button"
                    type="nextItem"
                    value="2"
                  >
                    <i
                      class="icon inverted"
                    >
                      <svg
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                          fill="currentColor"
                        />
                      </svg>
                    </i>
                  </button>,
                }
              }
            >
              <button
                className="ui circular button"
                onClick={[Function]}
                type="nextItem"
                value={2}
              >
                <Icon
                  className={null}
                  color={null}
                  hasBorder={false}
                  isButton={false}
                  isCircular={false}
                  isColorInverted={true}
                  isDisabled={false}
                  isLabelLeft={false}
                  labelText={null}
                  labelWeight={null}
                  name="chevron right"
                  path={null}
                  size={null}
                >
                  <i
                    className="icon inverted"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </Icon>
              </button>
            </RefFindNode>
          </Ref>
        </Button>
      </div>
    </Menu>
  </Pagination>
</Pagination>
`;

exports[`<Pagination /> if \`props.isShowingPageNumbers\` is true should render the right structure 1`] = `
<Pagination
  isShowingPageNumbers={true}
  onPageChange={[Function]}
  startingPage={1}
  totalPages={5}
>
  <Pagination
    aria-label="Pagination Navigation"
    boundaryRange={1}
    className="has-page-numbers"
    defaultActivePage={1}
    ellipsisItem="..."
    firstItem={null}
    lastItem={null}
    nextItem={
      <Button
        as="button"
        basic={true}
        circular={true}
        className="has-outline"
        content={null}
      >
        <Icon
          className={null}
          color={null}
          hasBorder={false}
          isButton={false}
          isCircular={false}
          isColorInverted={false}
          isDisabled={false}
          isLabelLeft={false}
          labelText={null}
          labelWeight={null}
          name="chevron right"
          path={null}
          size={null}
        />
      </Button>
    }
    onPageChange={[Function]}
    pageItem={Object {}}
    prevItem={
      <Button
        as="button"
        basic={true}
        circular={true}
        className="has-outline"
        content={null}
      >
        <Icon
          className={null}
          color={null}
          hasBorder={false}
          isButton={false}
          isCircular={false}
          isColorInverted={false}
          isDisabled={false}
          isLabelLeft={false}
          labelText={null}
          labelWeight={null}
          name="chevron left"
          path={null}
          size={null}
        />
      </Button>
    }
    secondary={true}
    siblingRange={0}
    totalPages={5}
  >
    <Menu
      aria-label="Pagination Navigation"
      className="has-page-numbers"
      pagination={true}
      role="navigation"
      secondary={true}
    >
      <div
        aria-label="Pagination Navigation"
        className="ui pagination secondary has-page-numbers menu"
        role="navigation"
      >
        <Button
          active={false}
          as="button"
          basic={true}
          circular={true}
          className="has-outline"
          content={null}
          key="prevItem-1"
          onClick={[Function]}
          type="prevItem"
          value={1}
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui basic circular button has-outline"
                  type="prevItem"
                  value="1"
                >
                  <i
                    class="icon"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui basic circular button has-outline"
                    type="prevItem"
                    value="1"
                  >
                    <i
                      class="icon"
                    >
                      <svg
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                          fill="currentColor"
                        />
                      </svg>
                    </i>
                  </button>,
                }
              }
            >
              <button
                className="ui basic circular button has-outline"
                onClick={[Function]}
                type="prevItem"
                value={1}
              >
                <Icon
                  className={null}
                  color={null}
                  hasBorder={false}
                  isButton={false}
                  isCircular={false}
                  isColorInverted={false}
                  isDisabled={false}
                  isLabelLeft={false}
                  labelText={null}
                  labelWeight={null}
                  name="chevron left"
                  path={null}
                  size={null}
                >
                  <i
                    className="icon"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M15.19,18a.55.55,0,0,1-.36-.13L8.44,12.42a.56.56,0,0,1,0-.84L14.83,6.1a.57.57,0,0,1,.79.06.55.55,0,0,1-.06.78L9.66,12l5.9,5.05a.57.57,0,0,1,.06.79A.56.56,0,0,1,15.19,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </Icon>
              </button>
            </RefFindNode>
          </Ref>
        </Button>
        <PaginationItem
          active={true}
          content={1}
          key="pageItem-1"
          onClick={[Function]}
          type="pageItem"
          value={1}
        >
          <MenuItem
            active={true}
            aria-current={true}
            aria-disabled={false}
            content={1}
            onClick={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
            type="pageItem"
            value={1}
          >
            <a
              aria-current={true}
              aria-disabled={false}
              className="active item"
              onClick={[Function]}
              onKeyDown={[Function]}
              tabIndex={0}
              type="pageItem"
              value={1}
            >
              1
            </a>
          </MenuItem>
        </PaginationItem>
        <PaginationItem
          active={false}
          content={2}
          key="pageItem-2"
          onClick={[Function]}
          type="pageItem"
          value={2}
        >
          <MenuItem
            active={false}
            aria-current={false}
            aria-disabled={false}
            content={2}
            onClick={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
            type="pageItem"
            value={2}
          >
            <a
              aria-current={false}
              aria-disabled={false}
              className="item"
              onClick={[Function]}
              onKeyDown={[Function]}
              tabIndex={0}
              type="pageItem"
              value={2}
            >
              2
            </a>
          </MenuItem>
        </PaginationItem>
        <PaginationItem
          active={false}
          content={3}
          key="pageItem-3"
          onClick={[Function]}
          type="pageItem"
          value={3}
        >
          <MenuItem
            active={false}
            aria-current={false}
            aria-disabled={false}
            content={3}
            onClick={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
            type="pageItem"
            value={3}
          >
            <a
              aria-current={false}
              aria-disabled={false}
              className="item"
              onClick={[Function]}
              onKeyDown={[Function]}
              tabIndex={0}
              type="pageItem"
              value={3}
            >
              3
            </a>
          </MenuItem>
        </PaginationItem>
        <PaginationItem
          active={false}
          content={4}
          key="pageItem-4"
          onClick={[Function]}
          type="pageItem"
          value={4}
        >
          <MenuItem
            active={false}
            aria-current={false}
            aria-disabled={false}
            content={4}
            onClick={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
            type="pageItem"
            value={4}
          >
            <a
              aria-current={false}
              aria-disabled={false}
              className="item"
              onClick={[Function]}
              onKeyDown={[Function]}
              tabIndex={0}
              type="pageItem"
              value={4}
            >
              4
            </a>
          </MenuItem>
        </PaginationItem>
        <PaginationItem
          active={false}
          content={5}
          key="pageItem-5"
          onClick={[Function]}
          type="pageItem"
          value={5}
        >
          <MenuItem
            active={false}
            aria-current={false}
            aria-disabled={false}
            content={5}
            onClick={[Function]}
            onKeyDown={[Function]}
            tabIndex={0}
            type="pageItem"
            value={5}
          >
            <a
              aria-current={false}
              aria-disabled={false}
              className="item"
              onClick={[Function]}
              onKeyDown={[Function]}
              tabIndex={0}
              type="pageItem"
              value={5}
            >
              5
            </a>
          </MenuItem>
        </PaginationItem>
        <Button
          active={false}
          as="button"
          basic={true}
          circular={true}
          className="has-outline"
          content={null}
          key="nextItem-2"
          onClick={[Function]}
          type="nextItem"
          value={2}
        >
          <Ref
            innerRef={
              Object {
                "current": <button
                  class="ui basic circular button has-outline"
                  type="nextItem"
                  value="2"
                >
                  <i
                    class="icon"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </button>,
              }
            }
          >
            <RefFindNode
              innerRef={
                Object {
                  "current": <button
                    class="ui basic circular button has-outline"
                    type="nextItem"
                    value="2"
                  >
                    <i
                      class="icon"
                    >
                      <svg
                        viewBox="0 0 24 24"
                      >
                        <path
                          d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                          fill="currentColor"
                        />
                      </svg>
                    </i>
                  </button>,
                }
              }
            >
              <button
                className="ui basic circular button has-outline"
                onClick={[Function]}
                type="nextItem"
                value={2}
              >
                <Icon
                  className={null}
                  color={null}
                  hasBorder={false}
                  isButton={false}
                  isCircular={false}
                  isColorInverted={false}
                  isDisabled={false}
                  isLabelLeft={false}
                  labelText={null}
                  labelWeight={null}
                  name="chevron right"
                  path={null}
                  size={null}
                >
                  <i
                    className="icon"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M8.81,18a.56.56,0,0,1-.43-.19.57.57,0,0,1,.06-.79L14.34,12,8.44,6.94a.55.55,0,0,1-.06-.78.57.57,0,0,1,.79-.06l6.39,5.48a.56.56,0,0,1,0,.84L9.17,17.9A.55.55,0,0,1,8.81,18Z"
                        fill="currentColor"
                      />
                    </svg>
                  </i>
                </Icon>
              </button>
            </RefFindNode>
          </Ref>
        </Button>
      </div>
    </Menu>
  </Pagination>
</Pagination>
`;
