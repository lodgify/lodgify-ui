// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Contact /> if \`propertyOptions\` and \`roomOptions\` are passed should have the correct structure 1`] = `
<Contact
  arrivalDateInputLabel="Arrival"
  captchaInputImage="someImage"
  captchaInputLabel="Security code"
  commentsInputLabel="Comments"
  departureDateInputLabel="Departure"
  emailInputLabel="Email"
  errorMessage=""
  guestsInputLabel="Guests"
  headingText="Contact"
  nameInputLabel="Name"
  onChangeProperty={[Function]}
  onSubmit={[Function]}
  phoneInputLabel="Phone"
  propertyInputLabel="Property"
  propertyOptions={
    Array [
      Object {
        "text": "La Casa Viva",
        "value": "casaViva",
      },
      Object {
        "text": "La Casa Muerta",
        "value": "casaMuerta",
      },
      Object {
        "text": "The White Lodge",
        "value": "whiteLodge",
      },
      Object {
        "text": "The Black Lodge",
        "value": "blackLodge",
      },
    ]
  }
  roomInputLabel="Room"
  roomOptions={
    Array [
      Object {
        "text": "Garden",
        "value": "garden",
      },
      Object {
        "text": "Sunlight",
        "value": "sunlight",
      },
      Object {
        "text": "Fireplace",
        "value": "fireplace",
      },
    ]
  }
  submitButtonText="Send"
  successMessage=""
  validation={Object {}}
>
  <Form
    actionLink={null}
    autoComplete="off"
    errorMessage=""
    headingText="Contact"
    onSubmit={[Function]}
    submitButtonText="Send"
    successMessage=""
    validation={Object {}}
  >
    <Card
      className="has-form"
      fluid={true}
    >
      <div
        className="ui fluid card has-form"
        onClick={[Function]}
      >
        <CardContent>
          <div
            className="content"
          >
            <Heading
              className={null}
              isColorInverted={false}
              size="medium"
              textAlign={null}
            >
              <Header
                as="h3"
                className={null}
                inverted={false}
                textAlign={null}
              >
                <h3
                  className="ui header"
                >
                  Contact
                </h3>
              </Header>
            </Heading>
          </div>
        </CardContent>
        <CardContent>
          <div
            className="content"
          >
            <Form
              as="form"
              autoComplete="off"
              error={false}
              onSubmit={[Function]}
              success={false}
            >
              <form
                autoComplete="off"
                className="ui form"
                onSubmit={[Function]}
              >
                <InputGroup
                  key=".0"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                    >
                      <div
                        className="field"
                      >
                        <TextInput
                          autoComplete="name"
                          error={false}
                          isValid={false}
                          label="Name"
                          name="name"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Name"
                            mapValueToProps={[Function]}
                            name="name"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="name"
                                  key=".2"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Name
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                    >
                      <div
                        className="field"
                      >
                        <PhoneInput
                          autoComplete="tel"
                          error={false}
                          isValid={false}
                          label="Phone"
                          name="phone"
                          onBlur={[Function]}
                          onChange={[Function]}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={
                              <Icon
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="phone"
                                path={null}
                                size={null}
                              />
                            }
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Phone"
                            mapValueToProps={[Function]}
                            name="phone"
                            onChange={[Function]}
                            value=""
                          >
                            <Input
                              className=""
                              iconPosition="left"
                              type="text"
                            >
                              <div
                                className="ui left icon input"
                              >
                                <input
                                  autoComplete="tel"
                                  key=".2"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="tel"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Phone
                                </label>
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  key=".4"
                                  labelText={null}
                                  labelWeight={null}
                                  name="phone"
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M17.26,20.77a10.82,10.82,0,0,1-4.91-1.31,18.17,18.17,0,0,1-4.5-3.31,18.36,18.36,0,0,1-3.31-4.5,11,11,0,0,1-1.3-4.91A3.72,3.72,0,0,1,4.58,4.39,4,4,0,0,1,6.73,3.23,2,2,0,0,1,8,3.91,11.34,11.34,0,0,1,9.16,5.26c.25.33,1.52,2,1.52,2.79s-.74,1.11-1.53,1.6a7.2,7.2,0,0,0-.84.56c-.24.19-.28.29-.29.32A11.62,11.62,0,0,0,13.47,16a.94.94,0,0,0,.32-.3,9.4,9.4,0,0,0,.56-.84c.48-.78.93-1.52,1.59-1.52s2.46,1.26,2.79,1.51a10.53,10.53,0,0,1,1.35,1.22,2,2,0,0,1,.68,1.21,4,4,0,0,1-1.15,2.16,3.78,3.78,0,0,1-2.35,1.35ZM6.73,4.11A3.25,3.25,0,0,0,5.17,5,2.86,2.86,0,0,0,4.11,6.74c0,5.9,7.25,13.15,13.15,13.15A2.84,2.84,0,0,0,19,18.83a3.35,3.35,0,0,0,.93-1.56c0-.17-.49-.82-1.75-1.79A7.23,7.23,0,0,0,16,14.19s-.12,0-.32.3-.36.52-.54.81c-.49.8-.95,1.55-1.62,1.55a.87.87,0,0,1-.32-.06A12.44,12.44,0,0,1,7.2,10.85c-.11-.28-.13-.71.42-1.21A8.34,8.34,0,0,1,8.69,8.9a9,9,0,0,0,.82-.54c.25-.2.29-.3.29-.31A6.78,6.78,0,0,0,8.51,5.86c-1-1.27-1.62-1.73-1.78-1.76Zm13.6,7a.43.43,0,0,1-.44-.44,6.58,6.58,0,0,0-6.58-6.57.44.44,0,1,1,0-.88,7.44,7.44,0,0,1,7.45,7.45A.43.43,0,0,1,20.33,11.12Zm-2.64,0a.43.43,0,0,1-.43-.44,4,4,0,0,0-4-3.94.44.44,0,1,1,0-.88,4.82,4.82,0,0,1,4.82,4.82A.43.43,0,0,1,17.69,11.12Zm-2.63,0a.43.43,0,0,1-.43-.44,1.32,1.32,0,0,0-1.32-1.31.44.44,0,0,1,0-.88,2.2,2.2,0,0,1,2.19,2.19A.43.43,0,0,1,15.06,11.12Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                              </div>
                            </Input>
                          </InputController>
                        </PhoneInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <InputGroup
                  key=".1"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                      width="eight"
                    >
                      <div
                        className="eight wide field"
                      >
                        <TextInput
                          autoComplete="email"
                          error={false}
                          isValid={false}
                          label="Email"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                          width="eight"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Email"
                            mapValueToProps={[Function]}
                            name="email"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="email"
                                  key=".2"
                                  name="email"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Email
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                      width="four"
                    >
                      <div
                        className="four wide field"
                      >
                        <NumberInput
                          autoComplete={null}
                          error={false}
                          isValid={false}
                          label="Guests"
                          min={1}
                          name="guests"
                          onBlur={[Function]}
                          onChange={[Function]}
                          width="four"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Guests"
                            mapValueToProps={[Function]}
                            name="guests"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete={null}
                                  key=".2"
                                  min={1}
                                  name="guests"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="number"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Guests
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </NumberInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <FormField
                  key=".2"
                >
                  <div
                    className="field"
                  >
                    <WithResponsive(DateRangePicker)
                      endDatePlaceholderText="Departure"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Arrival"
                    >
                      <Responsive
                        as={[Function]}
                        endDatePlaceholderText="Departure"
                        isUserOnMobile={false}
                        name="dates"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onUpdate={[Function]}
                        startDatePlaceholderText="Arrival"
                        windowInnerWidth={1024}
                      >
                        <DateRangePicker
                          displayFormat="DD/MM/YYYY"
                          endDatePlaceholderText="Departure"
                          error={false}
                          getIsDayBlocked={[Function]}
                          isUserOnMobile={false}
                          isValid={false}
                          localeCode="en"
                          name="dates"
                          onBlur={[Function]}
                          onChange={[Function]}
                          startDatePlaceholderText="Arrival"
                          willOpenAbove={false}
                          windowInnerWidth={1024}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onDatesChange"
                            isFocused={false}
                            isValid={false}
                            label={null}
                            mapValueToProps={[Function]}
                            name="dates"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <DateRangePicker
                                  customArrowIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  customInputIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="calendar"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  daySize={52}
                                  displayFormat="DD/MM/YYYY"
                                  endDate={null}
                                  endDateId="end_date_id_15"
                                  endDatePlaceholderText="Departure"
                                  focusedInput={null}
                                  hideKeyboardShortcutsPanel={true}
                                  isDayBlocked={[Function]}
                                  key=".2"
                                  navNext={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  navPrev={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow left"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  onDatesChange={[Function]}
                                  onFocusChange={[Function]}
                                  openDirection="down"
                                  startDate={null}
                                  startDateId="start_date_id_16"
                                  startDatePlaceholderText="Arrival"
                                  withPortal={true}
                                >
                                  <div />
                                </DateRangePicker>
                              </div>
                            </Input>
                          </InputController>
                        </DateRangePicker>
                      </Responsive>
                    </WithResponsive(DateRangePicker)>
                  </div>
                </FormField>
                <FormField
                  key=".3"
                >
                  <div
                    className="field"
                  >
                    <TextArea
                      autoComplete={null}
                      error={false}
                      isValid={false}
                      label="Comments"
                      name="comments"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onChange"
                        isFocused={false}
                        isValid={false}
                        label="Comments"
                        mapValueToProps={[Function]}
                        name="comments"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <textarea
                              autoComplete={null}
                              key=".2"
                              onBlur={[Function]}
                              onChange={[Function]}
                              rows="8"
                              value=""
                            />
                            <label
                              key=".3"
                              onClick={[Function]}
                            >
                              Comments
                            </label>
                          </div>
                        </Input>
                      </InputController>
                    </TextArea>
                  </div>
                </FormField>
                <InputGroup
                  key=".4"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                    >
                      <div
                        className="field"
                      >
                        <Dropdown
                          error={false}
                          icon={null}
                          isDisabled={false}
                          isSearchable={false}
                          isValid={false}
                          label="Property"
                          name="property"
                          noResultsText="No results"
                          onBlur={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "text": "La Casa Viva",
                                "value": "casaViva",
                              },
                              Object {
                                "text": "La Casa Muerta",
                                "value": "casaMuerta",
                              },
                              Object {
                                "text": "The White Lodge",
                                "value": "whiteLodge",
                              },
                              Object {
                                "text": "The Black Lodge",
                                "value": "blackLodge",
                              },
                            ]
                          }
                          willOpenAbove={false}
                        >
                          <div
                            className="dropdown-container"
                          >
                            <Dropdown
                              additionLabel="Add "
                              additionPosition="top"
                              closeOnBlur={true}
                              deburr={false}
                              defaultValue={null}
                              disabled={false}
                              icon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  path={null}
                                  size={null}
                                />
                              }
                              minCharacters={1}
                              noResultsMessage="No results"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              open={false}
                              openOnFocus={true}
                              options={
                                Array [
                                  Object {
                                    "text": "La Casa Viva",
                                    "value": "casaViva",
                                  },
                                  Object {
                                    "text": "La Casa Muerta",
                                    "value": "casaMuerta",
                                  },
                                  Object {
                                    "text": "The White Lodge",
                                    "value": "whiteLodge",
                                  },
                                  Object {
                                    "text": "The Black Lodge",
                                    "value": "blackLodge",
                                  },
                                ]
                              }
                              renderLabel={[Function]}
                              search={false}
                              searchInput="text"
                              selectOnBlur={false}
                              selectOnNavigation={true}
                              selection={true}
                              upward={false}
                              wrapSelection={true}
                            >
                              <div
                                aria-disabled={false}
                                aria-expanded={false}
                                className="ui selection dropdown"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                />
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  onClick={[Function]}
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                    onClick={[Function]}
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20,8.5l-8,7-8-7Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                                <DropdownMenu
                                  open={false}
                                >
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="casaViva"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="La Casa Viva"
                                      value="casaViva"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="La Casa Viva"
                                        >
                                          La Casa Viva
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="casaMuerta"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="La Casa Muerta"
                                      value="casaMuerta"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="La Casa Muerta"
                                        >
                                          La Casa Muerta
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="whiteLodge"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="The White Lodge"
                                      value="whiteLodge"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="The White Lodge"
                                        >
                                          The White Lodge
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="blackLodge"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="The Black Lodge"
                                      value="blackLodge"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="The Black Lodge"
                                        >
                                          The Black Lodge
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Dropdown>
                            <label
                              onClick={[Function]}
                            >
                              Property
                            </label>
                          </div>
                        </Dropdown>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                    >
                      <div
                        className="field"
                      >
                        <Dropdown
                          error={false}
                          icon={null}
                          isDisabled={false}
                          isSearchable={false}
                          isValid={false}
                          label="Room"
                          name="room"
                          noResultsText="No results"
                          onBlur={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "text": "Garden",
                                "value": "garden",
                              },
                              Object {
                                "text": "Sunlight",
                                "value": "sunlight",
                              },
                              Object {
                                "text": "Fireplace",
                                "value": "fireplace",
                              },
                            ]
                          }
                          willOpenAbove={false}
                        >
                          <div
                            className="dropdown-container"
                          >
                            <Dropdown
                              additionLabel="Add "
                              additionPosition="top"
                              closeOnBlur={true}
                              deburr={false}
                              defaultValue={null}
                              disabled={false}
                              icon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  path={null}
                                  size={null}
                                />
                              }
                              minCharacters={1}
                              noResultsMessage="No results"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              open={false}
                              openOnFocus={true}
                              options={
                                Array [
                                  Object {
                                    "text": "Garden",
                                    "value": "garden",
                                  },
                                  Object {
                                    "text": "Sunlight",
                                    "value": "sunlight",
                                  },
                                  Object {
                                    "text": "Fireplace",
                                    "value": "fireplace",
                                  },
                                ]
                              }
                              renderLabel={[Function]}
                              search={false}
                              searchInput="text"
                              selectOnBlur={false}
                              selectOnNavigation={true}
                              selection={true}
                              upward={false}
                              wrapSelection={true}
                            >
                              <div
                                aria-disabled={false}
                                aria-expanded={false}
                                className="ui selection dropdown"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                />
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  onClick={[Function]}
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                    onClick={[Function]}
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20,8.5l-8,7-8-7Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                                <DropdownMenu
                                  open={false}
                                >
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="garden"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Garden"
                                      value="garden"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="Garden"
                                        >
                                          Garden
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="sunlight"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Sunlight"
                                      value="sunlight"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="Sunlight"
                                        >
                                          Sunlight
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="fireplace"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Fireplace"
                                      value="fireplace"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="Fireplace"
                                        >
                                          Fireplace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Dropdown>
                            <label
                              onClick={[Function]}
                            >
                              Room
                            </label>
                          </div>
                        </Dropdown>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <FormField
                  key=".5"
                >
                  <div
                    className="field"
                  >
                    <CaptchaInput
                      error={false}
                      image="someImage"
                      isValid={false}
                      label="Security code"
                      name="captcha"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputGroup
                        widths="equal"
                      >
                        <div
                          className="equal width fields"
                        >
                          <FormField>
                            <div
                              className="field"
                            >
                              <Image
                                as="img"
                                src="someImage"
                                ui={true}
                              >
                                <img
                                  className="ui image"
                                  src="someImage"
                                />
                              </Image>
                            </div>
                          </FormField>
                          <FormField>
                            <div
                              className="field"
                            >
                              <TextInput
                                autoComplete="off"
                                error={false}
                                isValid={false}
                                label="Security code"
                                name="captcha"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                              >
                                <InputController
                                  adaptOnChangeEvent={[Function]}
                                  error={false}
                                  icon={null}
                                  initialValue=""
                                  inputOnChangeFunctionName="onChange"
                                  isFocused={false}
                                  isValid={false}
                                  label="Security code"
                                  mapValueToProps={[Function]}
                                  name="captcha"
                                  onChange={[Function]}
                                >
                                  <Input
                                    className=""
                                    iconPosition={null}
                                    type="text"
                                  >
                                    <div
                                      className="ui input"
                                    >
                                      <input
                                        autoComplete="off"
                                        key=".2"
                                        name="captcha"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <label
                                        key=".3"
                                        onClick={[Function]}
                                      >
                                        Security code
                                      </label>
                                    </div>
                                  </Input>
                                </InputController>
                              </TextInput>
                            </div>
                          </FormField>
                        </div>
                      </InputGroup>
                    </CaptchaInput>
                  </div>
                </FormField>
                <Button
                  hasShadow={false}
                  icon={null}
                  isCompact={false}
                  isDisabled={false}
                  isLoading={false}
                  isPositionedRight={true}
                  isRounded={false}
                  isSecondary={false}
                  onClick={[Function]}
                  size={null}
                >
                  <Button
                    as="button"
                    circular={false}
                    className=""
                    compact={false}
                    disabled={false}
                    floated="right"
                    loading={false}
                    onClick={[Function]}
                    secondary={false}
                    size={null}
                  >
                    <button
                      className="ui right floated button"
                      onClick={[Function]}
                      role="button"
                    >
                      Send
                    </button>
                  </Button>
                </Button>
              </form>
            </Form>
          </div>
        </CardContent>
      </div>
    </Card>
  </Form>
</Contact>
`;

exports[`<Contact /> if \`props.propertyOptions\` is passed should have the correct structure 1`] = `
<Contact
  arrivalDateInputLabel="Arrival"
  captchaInputImage="someImage"
  captchaInputLabel="Security code"
  commentsInputLabel="Comments"
  departureDateInputLabel="Departure"
  emailInputLabel="Email"
  errorMessage=""
  guestsInputLabel="Guests"
  headingText="Contact"
  nameInputLabel="Name"
  onChangeProperty={[Function]}
  onSubmit={[Function]}
  phoneInputLabel="Phone"
  propertyInputLabel="Property"
  propertyOptions={
    Array [
      Object {
        "text": "La Casa Viva",
        "value": "casaViva",
      },
      Object {
        "text": "La Casa Muerta",
        "value": "casaMuerta",
      },
      Object {
        "text": "The White Lodge",
        "value": "whiteLodge",
      },
      Object {
        "text": "The Black Lodge",
        "value": "blackLodge",
      },
    ]
  }
  roomInputLabel="Room"
  roomOptions={null}
  submitButtonText="Send"
  successMessage=""
  validation={Object {}}
>
  <Form
    actionLink={null}
    autoComplete="off"
    errorMessage=""
    headingText="Contact"
    onSubmit={[Function]}
    submitButtonText="Send"
    successMessage=""
    validation={Object {}}
  >
    <Card
      className="has-form"
      fluid={true}
    >
      <div
        className="ui fluid card has-form"
        onClick={[Function]}
      >
        <CardContent>
          <div
            className="content"
          >
            <Heading
              className={null}
              isColorInverted={false}
              size="medium"
              textAlign={null}
            >
              <Header
                as="h3"
                className={null}
                inverted={false}
                textAlign={null}
              >
                <h3
                  className="ui header"
                >
                  Contact
                </h3>
              </Header>
            </Heading>
          </div>
        </CardContent>
        <CardContent>
          <div
            className="content"
          >
            <Form
              as="form"
              autoComplete="off"
              error={false}
              onSubmit={[Function]}
              success={false}
            >
              <form
                autoComplete="off"
                className="ui form"
                onSubmit={[Function]}
              >
                <InputGroup
                  key=".0"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                    >
                      <div
                        className="field"
                      >
                        <TextInput
                          autoComplete="name"
                          error={false}
                          isValid={false}
                          label="Name"
                          name="name"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Name"
                            mapValueToProps={[Function]}
                            name="name"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="name"
                                  key=".2"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Name
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                    >
                      <div
                        className="field"
                      >
                        <PhoneInput
                          autoComplete="tel"
                          error={false}
                          isValid={false}
                          label="Phone"
                          name="phone"
                          onBlur={[Function]}
                          onChange={[Function]}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={
                              <Icon
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="phone"
                                path={null}
                                size={null}
                              />
                            }
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Phone"
                            mapValueToProps={[Function]}
                            name="phone"
                            onChange={[Function]}
                            value=""
                          >
                            <Input
                              className=""
                              iconPosition="left"
                              type="text"
                            >
                              <div
                                className="ui left icon input"
                              >
                                <input
                                  autoComplete="tel"
                                  key=".2"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="tel"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Phone
                                </label>
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  key=".4"
                                  labelText={null}
                                  labelWeight={null}
                                  name="phone"
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M17.26,20.77a10.82,10.82,0,0,1-4.91-1.31,18.17,18.17,0,0,1-4.5-3.31,18.36,18.36,0,0,1-3.31-4.5,11,11,0,0,1-1.3-4.91A3.72,3.72,0,0,1,4.58,4.39,4,4,0,0,1,6.73,3.23,2,2,0,0,1,8,3.91,11.34,11.34,0,0,1,9.16,5.26c.25.33,1.52,2,1.52,2.79s-.74,1.11-1.53,1.6a7.2,7.2,0,0,0-.84.56c-.24.19-.28.29-.29.32A11.62,11.62,0,0,0,13.47,16a.94.94,0,0,0,.32-.3,9.4,9.4,0,0,0,.56-.84c.48-.78.93-1.52,1.59-1.52s2.46,1.26,2.79,1.51a10.53,10.53,0,0,1,1.35,1.22,2,2,0,0,1,.68,1.21,4,4,0,0,1-1.15,2.16,3.78,3.78,0,0,1-2.35,1.35ZM6.73,4.11A3.25,3.25,0,0,0,5.17,5,2.86,2.86,0,0,0,4.11,6.74c0,5.9,7.25,13.15,13.15,13.15A2.84,2.84,0,0,0,19,18.83a3.35,3.35,0,0,0,.93-1.56c0-.17-.49-.82-1.75-1.79A7.23,7.23,0,0,0,16,14.19s-.12,0-.32.3-.36.52-.54.81c-.49.8-.95,1.55-1.62,1.55a.87.87,0,0,1-.32-.06A12.44,12.44,0,0,1,7.2,10.85c-.11-.28-.13-.71.42-1.21A8.34,8.34,0,0,1,8.69,8.9a9,9,0,0,0,.82-.54c.25-.2.29-.3.29-.31A6.78,6.78,0,0,0,8.51,5.86c-1-1.27-1.62-1.73-1.78-1.76Zm13.6,7a.43.43,0,0,1-.44-.44,6.58,6.58,0,0,0-6.58-6.57.44.44,0,1,1,0-.88,7.44,7.44,0,0,1,7.45,7.45A.43.43,0,0,1,20.33,11.12Zm-2.64,0a.43.43,0,0,1-.43-.44,4,4,0,0,0-4-3.94.44.44,0,1,1,0-.88,4.82,4.82,0,0,1,4.82,4.82A.43.43,0,0,1,17.69,11.12Zm-2.63,0a.43.43,0,0,1-.43-.44,1.32,1.32,0,0,0-1.32-1.31.44.44,0,0,1,0-.88,2.2,2.2,0,0,1,2.19,2.19A.43.43,0,0,1,15.06,11.12Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                              </div>
                            </Input>
                          </InputController>
                        </PhoneInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <InputGroup
                  key=".1"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                      width="eight"
                    >
                      <div
                        className="eight wide field"
                      >
                        <TextInput
                          autoComplete="email"
                          error={false}
                          isValid={false}
                          label="Email"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                          width="eight"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Email"
                            mapValueToProps={[Function]}
                            name="email"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="email"
                                  key=".2"
                                  name="email"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Email
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                      width="four"
                    >
                      <div
                        className="four wide field"
                      >
                        <NumberInput
                          autoComplete={null}
                          error={false}
                          isValid={false}
                          label="Guests"
                          min={1}
                          name="guests"
                          onBlur={[Function]}
                          onChange={[Function]}
                          width="four"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Guests"
                            mapValueToProps={[Function]}
                            name="guests"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete={null}
                                  key=".2"
                                  min={1}
                                  name="guests"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="number"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Guests
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </NumberInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <FormField
                  key=".2"
                >
                  <div
                    className="field"
                  >
                    <WithResponsive(DateRangePicker)
                      endDatePlaceholderText="Departure"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Arrival"
                    >
                      <Responsive
                        as={[Function]}
                        endDatePlaceholderText="Departure"
                        isUserOnMobile={false}
                        name="dates"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onUpdate={[Function]}
                        startDatePlaceholderText="Arrival"
                        windowInnerWidth={1024}
                      >
                        <DateRangePicker
                          displayFormat="DD/MM/YYYY"
                          endDatePlaceholderText="Departure"
                          error={false}
                          getIsDayBlocked={[Function]}
                          isUserOnMobile={false}
                          isValid={false}
                          localeCode="en"
                          name="dates"
                          onBlur={[Function]}
                          onChange={[Function]}
                          startDatePlaceholderText="Arrival"
                          willOpenAbove={false}
                          windowInnerWidth={1024}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onDatesChange"
                            isFocused={false}
                            isValid={false}
                            label={null}
                            mapValueToProps={[Function]}
                            name="dates"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <DateRangePicker
                                  customArrowIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  customInputIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="calendar"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  daySize={52}
                                  displayFormat="DD/MM/YYYY"
                                  endDate={null}
                                  endDateId="end_date_id_7"
                                  endDatePlaceholderText="Departure"
                                  focusedInput={null}
                                  hideKeyboardShortcutsPanel={true}
                                  isDayBlocked={[Function]}
                                  key=".2"
                                  navNext={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  navPrev={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow left"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  onDatesChange={[Function]}
                                  onFocusChange={[Function]}
                                  openDirection="down"
                                  startDate={null}
                                  startDateId="start_date_id_8"
                                  startDatePlaceholderText="Arrival"
                                  withPortal={true}
                                >
                                  <div />
                                </DateRangePicker>
                              </div>
                            </Input>
                          </InputController>
                        </DateRangePicker>
                      </Responsive>
                    </WithResponsive(DateRangePicker)>
                  </div>
                </FormField>
                <FormField
                  key=".3"
                >
                  <div
                    className="field"
                  >
                    <TextArea
                      autoComplete={null}
                      error={false}
                      isValid={false}
                      label="Comments"
                      name="comments"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onChange"
                        isFocused={false}
                        isValid={false}
                        label="Comments"
                        mapValueToProps={[Function]}
                        name="comments"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <textarea
                              autoComplete={null}
                              key=".2"
                              onBlur={[Function]}
                              onChange={[Function]}
                              rows="8"
                              value=""
                            />
                            <label
                              key=".3"
                              onClick={[Function]}
                            >
                              Comments
                            </label>
                          </div>
                        </Input>
                      </InputController>
                    </TextArea>
                  </div>
                </FormField>
                <InputGroup
                  key=".4"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                    >
                      <div
                        className="field"
                      >
                        <Dropdown
                          error={false}
                          icon={null}
                          isDisabled={false}
                          isSearchable={false}
                          isValid={false}
                          label="Property"
                          name="property"
                          noResultsText="No results"
                          onBlur={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "text": "La Casa Viva",
                                "value": "casaViva",
                              },
                              Object {
                                "text": "La Casa Muerta",
                                "value": "casaMuerta",
                              },
                              Object {
                                "text": "The White Lodge",
                                "value": "whiteLodge",
                              },
                              Object {
                                "text": "The Black Lodge",
                                "value": "blackLodge",
                              },
                            ]
                          }
                          willOpenAbove={false}
                        >
                          <div
                            className="dropdown-container"
                          >
                            <Dropdown
                              additionLabel="Add "
                              additionPosition="top"
                              closeOnBlur={true}
                              deburr={false}
                              defaultValue={null}
                              disabled={false}
                              icon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  path={null}
                                  size={null}
                                />
                              }
                              minCharacters={1}
                              noResultsMessage="No results"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              open={false}
                              openOnFocus={true}
                              options={
                                Array [
                                  Object {
                                    "text": "La Casa Viva",
                                    "value": "casaViva",
                                  },
                                  Object {
                                    "text": "La Casa Muerta",
                                    "value": "casaMuerta",
                                  },
                                  Object {
                                    "text": "The White Lodge",
                                    "value": "whiteLodge",
                                  },
                                  Object {
                                    "text": "The Black Lodge",
                                    "value": "blackLodge",
                                  },
                                ]
                              }
                              renderLabel={[Function]}
                              search={false}
                              searchInput="text"
                              selectOnBlur={false}
                              selectOnNavigation={true}
                              selection={true}
                              upward={false}
                              wrapSelection={true}
                            >
                              <div
                                aria-disabled={false}
                                aria-expanded={false}
                                className="ui selection dropdown"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                />
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  onClick={[Function]}
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                    onClick={[Function]}
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20,8.5l-8,7-8-7Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                                <DropdownMenu
                                  open={false}
                                >
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="casaViva"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="La Casa Viva"
                                      value="casaViva"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="La Casa Viva"
                                        >
                                          La Casa Viva
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="casaMuerta"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="La Casa Muerta"
                                      value="casaMuerta"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="La Casa Muerta"
                                        >
                                          La Casa Muerta
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="whiteLodge"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="The White Lodge"
                                      value="whiteLodge"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="The White Lodge"
                                        >
                                          The White Lodge
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="blackLodge"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="The Black Lodge"
                                      value="blackLodge"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="The Black Lodge"
                                        >
                                          The Black Lodge
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Dropdown>
                            <label
                              onClick={[Function]}
                            >
                              Property
                            </label>
                          </div>
                        </Dropdown>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <FormField
                  key=".5"
                >
                  <div
                    className="field"
                  >
                    <CaptchaInput
                      error={false}
                      image="someImage"
                      isValid={false}
                      label="Security code"
                      name="captcha"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputGroup
                        widths="equal"
                      >
                        <div
                          className="equal width fields"
                        >
                          <FormField>
                            <div
                              className="field"
                            >
                              <Image
                                as="img"
                                src="someImage"
                                ui={true}
                              >
                                <img
                                  className="ui image"
                                  src="someImage"
                                />
                              </Image>
                            </div>
                          </FormField>
                          <FormField>
                            <div
                              className="field"
                            >
                              <TextInput
                                autoComplete="off"
                                error={false}
                                isValid={false}
                                label="Security code"
                                name="captcha"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                              >
                                <InputController
                                  adaptOnChangeEvent={[Function]}
                                  error={false}
                                  icon={null}
                                  initialValue=""
                                  inputOnChangeFunctionName="onChange"
                                  isFocused={false}
                                  isValid={false}
                                  label="Security code"
                                  mapValueToProps={[Function]}
                                  name="captcha"
                                  onChange={[Function]}
                                >
                                  <Input
                                    className=""
                                    iconPosition={null}
                                    type="text"
                                  >
                                    <div
                                      className="ui input"
                                    >
                                      <input
                                        autoComplete="off"
                                        key=".2"
                                        name="captcha"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <label
                                        key=".3"
                                        onClick={[Function]}
                                      >
                                        Security code
                                      </label>
                                    </div>
                                  </Input>
                                </InputController>
                              </TextInput>
                            </div>
                          </FormField>
                        </div>
                      </InputGroup>
                    </CaptchaInput>
                  </div>
                </FormField>
                <Button
                  hasShadow={false}
                  icon={null}
                  isCompact={false}
                  isDisabled={false}
                  isLoading={false}
                  isPositionedRight={true}
                  isRounded={false}
                  isSecondary={false}
                  onClick={[Function]}
                  size={null}
                >
                  <Button
                    as="button"
                    circular={false}
                    className=""
                    compact={false}
                    disabled={false}
                    floated="right"
                    loading={false}
                    onClick={[Function]}
                    secondary={false}
                    size={null}
                  >
                    <button
                      className="ui right floated button"
                      onClick={[Function]}
                      role="button"
                    >
                      Send
                    </button>
                  </Button>
                </Button>
              </form>
            </Form>
          </div>
        </CardContent>
      </div>
    </Card>
  </Form>
</Contact>
`;

exports[`<Contact /> if \`props.roomOptions\` is passed should have the correct structure 1`] = `
<Contact
  arrivalDateInputLabel="Arrival"
  captchaInputImage="someImage"
  captchaInputLabel="Security code"
  commentsInputLabel="Comments"
  departureDateInputLabel="Departure"
  emailInputLabel="Email"
  errorMessage=""
  guestsInputLabel="Guests"
  headingText="Contact"
  nameInputLabel="Name"
  onChangeProperty={[Function]}
  onSubmit={[Function]}
  phoneInputLabel="Phone"
  propertyInputLabel="Property"
  propertyOptions={null}
  roomInputLabel="Room"
  roomOptions={
    Array [
      Object {
        "text": "Garden",
        "value": "garden",
      },
      Object {
        "text": "Sunlight",
        "value": "sunlight",
      },
      Object {
        "text": "Fireplace",
        "value": "fireplace",
      },
    ]
  }
  submitButtonText="Send"
  successMessage=""
  validation={Object {}}
>
  <Form
    actionLink={null}
    autoComplete="off"
    errorMessage=""
    headingText="Contact"
    onSubmit={[Function]}
    submitButtonText="Send"
    successMessage=""
    validation={Object {}}
  >
    <Card
      className="has-form"
      fluid={true}
    >
      <div
        className="ui fluid card has-form"
        onClick={[Function]}
      >
        <CardContent>
          <div
            className="content"
          >
            <Heading
              className={null}
              isColorInverted={false}
              size="medium"
              textAlign={null}
            >
              <Header
                as="h3"
                className={null}
                inverted={false}
                textAlign={null}
              >
                <h3
                  className="ui header"
                >
                  Contact
                </h3>
              </Header>
            </Heading>
          </div>
        </CardContent>
        <CardContent>
          <div
            className="content"
          >
            <Form
              as="form"
              autoComplete="off"
              error={false}
              onSubmit={[Function]}
              success={false}
            >
              <form
                autoComplete="off"
                className="ui form"
                onSubmit={[Function]}
              >
                <InputGroup
                  key=".0"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                    >
                      <div
                        className="field"
                      >
                        <TextInput
                          autoComplete="name"
                          error={false}
                          isValid={false}
                          label="Name"
                          name="name"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Name"
                            mapValueToProps={[Function]}
                            name="name"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="name"
                                  key=".2"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Name
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                    >
                      <div
                        className="field"
                      >
                        <PhoneInput
                          autoComplete="tel"
                          error={false}
                          isValid={false}
                          label="Phone"
                          name="phone"
                          onBlur={[Function]}
                          onChange={[Function]}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={
                              <Icon
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="phone"
                                path={null}
                                size={null}
                              />
                            }
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Phone"
                            mapValueToProps={[Function]}
                            name="phone"
                            onChange={[Function]}
                            value=""
                          >
                            <Input
                              className=""
                              iconPosition="left"
                              type="text"
                            >
                              <div
                                className="ui left icon input"
                              >
                                <input
                                  autoComplete="tel"
                                  key=".2"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="tel"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Phone
                                </label>
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  key=".4"
                                  labelText={null}
                                  labelWeight={null}
                                  name="phone"
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M17.26,20.77a10.82,10.82,0,0,1-4.91-1.31,18.17,18.17,0,0,1-4.5-3.31,18.36,18.36,0,0,1-3.31-4.5,11,11,0,0,1-1.3-4.91A3.72,3.72,0,0,1,4.58,4.39,4,4,0,0,1,6.73,3.23,2,2,0,0,1,8,3.91,11.34,11.34,0,0,1,9.16,5.26c.25.33,1.52,2,1.52,2.79s-.74,1.11-1.53,1.6a7.2,7.2,0,0,0-.84.56c-.24.19-.28.29-.29.32A11.62,11.62,0,0,0,13.47,16a.94.94,0,0,0,.32-.3,9.4,9.4,0,0,0,.56-.84c.48-.78.93-1.52,1.59-1.52s2.46,1.26,2.79,1.51a10.53,10.53,0,0,1,1.35,1.22,2,2,0,0,1,.68,1.21,4,4,0,0,1-1.15,2.16,3.78,3.78,0,0,1-2.35,1.35ZM6.73,4.11A3.25,3.25,0,0,0,5.17,5,2.86,2.86,0,0,0,4.11,6.74c0,5.9,7.25,13.15,13.15,13.15A2.84,2.84,0,0,0,19,18.83a3.35,3.35,0,0,0,.93-1.56c0-.17-.49-.82-1.75-1.79A7.23,7.23,0,0,0,16,14.19s-.12,0-.32.3-.36.52-.54.81c-.49.8-.95,1.55-1.62,1.55a.87.87,0,0,1-.32-.06A12.44,12.44,0,0,1,7.2,10.85c-.11-.28-.13-.71.42-1.21A8.34,8.34,0,0,1,8.69,8.9a9,9,0,0,0,.82-.54c.25-.2.29-.3.29-.31A6.78,6.78,0,0,0,8.51,5.86c-1-1.27-1.62-1.73-1.78-1.76Zm13.6,7a.43.43,0,0,1-.44-.44,6.58,6.58,0,0,0-6.58-6.57.44.44,0,1,1,0-.88,7.44,7.44,0,0,1,7.45,7.45A.43.43,0,0,1,20.33,11.12Zm-2.64,0a.43.43,0,0,1-.43-.44,4,4,0,0,0-4-3.94.44.44,0,1,1,0-.88,4.82,4.82,0,0,1,4.82,4.82A.43.43,0,0,1,17.69,11.12Zm-2.63,0a.43.43,0,0,1-.43-.44,1.32,1.32,0,0,0-1.32-1.31.44.44,0,0,1,0-.88,2.2,2.2,0,0,1,2.19,2.19A.43.43,0,0,1,15.06,11.12Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                              </div>
                            </Input>
                          </InputController>
                        </PhoneInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <InputGroup
                  key=".1"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                      width="eight"
                    >
                      <div
                        className="eight wide field"
                      >
                        <TextInput
                          autoComplete="email"
                          error={false}
                          isValid={false}
                          label="Email"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                          width="eight"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Email"
                            mapValueToProps={[Function]}
                            name="email"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="email"
                                  key=".2"
                                  name="email"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Email
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                      width="four"
                    >
                      <div
                        className="four wide field"
                      >
                        <NumberInput
                          autoComplete={null}
                          error={false}
                          isValid={false}
                          label="Guests"
                          min={1}
                          name="guests"
                          onBlur={[Function]}
                          onChange={[Function]}
                          width="four"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Guests"
                            mapValueToProps={[Function]}
                            name="guests"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete={null}
                                  key=".2"
                                  min={1}
                                  name="guests"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="number"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Guests
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </NumberInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <FormField
                  key=".2"
                >
                  <div
                    className="field"
                  >
                    <WithResponsive(DateRangePicker)
                      endDatePlaceholderText="Departure"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Arrival"
                    >
                      <Responsive
                        as={[Function]}
                        endDatePlaceholderText="Departure"
                        isUserOnMobile={false}
                        name="dates"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onUpdate={[Function]}
                        startDatePlaceholderText="Arrival"
                        windowInnerWidth={1024}
                      >
                        <DateRangePicker
                          displayFormat="DD/MM/YYYY"
                          endDatePlaceholderText="Departure"
                          error={false}
                          getIsDayBlocked={[Function]}
                          isUserOnMobile={false}
                          isValid={false}
                          localeCode="en"
                          name="dates"
                          onBlur={[Function]}
                          onChange={[Function]}
                          startDatePlaceholderText="Arrival"
                          willOpenAbove={false}
                          windowInnerWidth={1024}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onDatesChange"
                            isFocused={false}
                            isValid={false}
                            label={null}
                            mapValueToProps={[Function]}
                            name="dates"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <DateRangePicker
                                  customArrowIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  customInputIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="calendar"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  daySize={52}
                                  displayFormat="DD/MM/YYYY"
                                  endDate={null}
                                  endDateId="end_date_id_11"
                                  endDatePlaceholderText="Departure"
                                  focusedInput={null}
                                  hideKeyboardShortcutsPanel={true}
                                  isDayBlocked={[Function]}
                                  key=".2"
                                  navNext={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  navPrev={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow left"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  onDatesChange={[Function]}
                                  onFocusChange={[Function]}
                                  openDirection="down"
                                  startDate={null}
                                  startDateId="start_date_id_12"
                                  startDatePlaceholderText="Arrival"
                                  withPortal={true}
                                >
                                  <div />
                                </DateRangePicker>
                              </div>
                            </Input>
                          </InputController>
                        </DateRangePicker>
                      </Responsive>
                    </WithResponsive(DateRangePicker)>
                  </div>
                </FormField>
                <FormField
                  key=".3"
                >
                  <div
                    className="field"
                  >
                    <TextArea
                      autoComplete={null}
                      error={false}
                      isValid={false}
                      label="Comments"
                      name="comments"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onChange"
                        isFocused={false}
                        isValid={false}
                        label="Comments"
                        mapValueToProps={[Function]}
                        name="comments"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <textarea
                              autoComplete={null}
                              key=".2"
                              onBlur={[Function]}
                              onChange={[Function]}
                              rows="8"
                              value=""
                            />
                            <label
                              key=".3"
                              onClick={[Function]}
                            >
                              Comments
                            </label>
                          </div>
                        </Input>
                      </InputController>
                    </TextArea>
                  </div>
                </FormField>
                <InputGroup
                  key=".4"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".1"
                    >
                      <div
                        className="field"
                      >
                        <Dropdown
                          error={false}
                          icon={null}
                          isDisabled={false}
                          isSearchable={false}
                          isValid={false}
                          label="Room"
                          name="room"
                          noResultsText="No results"
                          onBlur={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "text": "Garden",
                                "value": "garden",
                              },
                              Object {
                                "text": "Sunlight",
                                "value": "sunlight",
                              },
                              Object {
                                "text": "Fireplace",
                                "value": "fireplace",
                              },
                            ]
                          }
                          willOpenAbove={false}
                        >
                          <div
                            className="dropdown-container"
                          >
                            <Dropdown
                              additionLabel="Add "
                              additionPosition="top"
                              closeOnBlur={true}
                              deburr={false}
                              defaultValue={null}
                              disabled={false}
                              icon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  path={null}
                                  size={null}
                                />
                              }
                              minCharacters={1}
                              noResultsMessage="No results"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              open={false}
                              openOnFocus={true}
                              options={
                                Array [
                                  Object {
                                    "text": "Garden",
                                    "value": "garden",
                                  },
                                  Object {
                                    "text": "Sunlight",
                                    "value": "sunlight",
                                  },
                                  Object {
                                    "text": "Fireplace",
                                    "value": "fireplace",
                                  },
                                ]
                              }
                              renderLabel={[Function]}
                              search={false}
                              searchInput="text"
                              selectOnBlur={false}
                              selectOnNavigation={true}
                              selection={true}
                              upward={false}
                              wrapSelection={true}
                            >
                              <div
                                aria-disabled={false}
                                aria-expanded={false}
                                className="ui selection dropdown"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                role="listbox"
                                tabIndex={0}
                              >
                                <div
                                  aria-live="polite"
                                  className="text"
                                  role="alert"
                                />
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="caret down"
                                  onClick={[Function]}
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                    onClick={[Function]}
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20,8.5l-8,7-8-7Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                                <DropdownMenu
                                  open={false}
                                >
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="garden"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Garden"
                                      value="garden"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="Garden"
                                        >
                                          Garden
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="sunlight"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Sunlight"
                                      value="sunlight"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="Sunlight"
                                        >
                                          Sunlight
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="fireplace"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="Fireplace"
                                      value="fireplace"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="Fireplace"
                                        >
                                          Fireplace
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Dropdown>
                            <label
                              onClick={[Function]}
                            >
                              Room
                            </label>
                          </div>
                        </Dropdown>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <FormField
                  key=".5"
                >
                  <div
                    className="field"
                  >
                    <CaptchaInput
                      error={false}
                      image="someImage"
                      isValid={false}
                      label="Security code"
                      name="captcha"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputGroup
                        widths="equal"
                      >
                        <div
                          className="equal width fields"
                        >
                          <FormField>
                            <div
                              className="field"
                            >
                              <Image
                                as="img"
                                src="someImage"
                                ui={true}
                              >
                                <img
                                  className="ui image"
                                  src="someImage"
                                />
                              </Image>
                            </div>
                          </FormField>
                          <FormField>
                            <div
                              className="field"
                            >
                              <TextInput
                                autoComplete="off"
                                error={false}
                                isValid={false}
                                label="Security code"
                                name="captcha"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                              >
                                <InputController
                                  adaptOnChangeEvent={[Function]}
                                  error={false}
                                  icon={null}
                                  initialValue=""
                                  inputOnChangeFunctionName="onChange"
                                  isFocused={false}
                                  isValid={false}
                                  label="Security code"
                                  mapValueToProps={[Function]}
                                  name="captcha"
                                  onChange={[Function]}
                                >
                                  <Input
                                    className=""
                                    iconPosition={null}
                                    type="text"
                                  >
                                    <div
                                      className="ui input"
                                    >
                                      <input
                                        autoComplete="off"
                                        key=".2"
                                        name="captcha"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <label
                                        key=".3"
                                        onClick={[Function]}
                                      >
                                        Security code
                                      </label>
                                    </div>
                                  </Input>
                                </InputController>
                              </TextInput>
                            </div>
                          </FormField>
                        </div>
                      </InputGroup>
                    </CaptchaInput>
                  </div>
                </FormField>
                <Button
                  hasShadow={false}
                  icon={null}
                  isCompact={false}
                  isDisabled={false}
                  isLoading={false}
                  isPositionedRight={true}
                  isRounded={false}
                  isSecondary={false}
                  onClick={[Function]}
                  size={null}
                >
                  <Button
                    as="button"
                    circular={false}
                    className=""
                    compact={false}
                    disabled={false}
                    floated="right"
                    loading={false}
                    onClick={[Function]}
                    secondary={false}
                    size={null}
                  >
                    <button
                      className="ui right floated button"
                      onClick={[Function]}
                      role="button"
                    >
                      Send
                    </button>
                  </Button>
                </Button>
              </form>
            </Form>
          </div>
        </CardContent>
      </div>
    </Card>
  </Form>
</Contact>
`;

exports[`<Contact /> should have the correct structure 1`] = `
<Contact
  arrivalDateInputLabel="Arrival"
  captchaInputImage="someImage"
  captchaInputLabel="Security code"
  commentsInputLabel="Comments"
  departureDateInputLabel="Departure"
  emailInputLabel="Email"
  errorMessage=""
  guestsInputLabel="Guests"
  headingText="Contact"
  nameInputLabel="Name"
  onChangeProperty={[Function]}
  onSubmit={[Function]}
  phoneInputLabel="Phone"
  propertyInputLabel="Property"
  propertyOptions={null}
  roomInputLabel="Room"
  roomOptions={null}
  submitButtonText="Send"
  successMessage=""
  validation={Object {}}
>
  <Form
    actionLink={null}
    autoComplete="off"
    errorMessage=""
    headingText="Contact"
    onSubmit={[Function]}
    submitButtonText="Send"
    successMessage=""
    validation={Object {}}
  >
    <Card
      className="has-form"
      fluid={true}
    >
      <div
        className="ui fluid card has-form"
        onClick={[Function]}
      >
        <CardContent>
          <div
            className="content"
          >
            <Heading
              className={null}
              isColorInverted={false}
              size="medium"
              textAlign={null}
            >
              <Header
                as="h3"
                className={null}
                inverted={false}
                textAlign={null}
              >
                <h3
                  className="ui header"
                >
                  Contact
                </h3>
              </Header>
            </Heading>
          </div>
        </CardContent>
        <CardContent>
          <div
            className="content"
          >
            <Form
              as="form"
              autoComplete="off"
              error={false}
              onSubmit={[Function]}
              success={false}
            >
              <form
                autoComplete="off"
                className="ui form"
                onSubmit={[Function]}
              >
                <InputGroup
                  key=".0"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                    >
                      <div
                        className="field"
                      >
                        <TextInput
                          autoComplete="name"
                          error={false}
                          isValid={false}
                          label="Name"
                          name="name"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Name"
                            mapValueToProps={[Function]}
                            name="name"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="name"
                                  key=".2"
                                  name="name"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Name
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                    >
                      <div
                        className="field"
                      >
                        <PhoneInput
                          autoComplete="tel"
                          error={false}
                          isValid={false}
                          label="Phone"
                          name="phone"
                          onBlur={[Function]}
                          onChange={[Function]}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={
                              <Icon
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="phone"
                                path={null}
                                size={null}
                              />
                            }
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Phone"
                            mapValueToProps={[Function]}
                            name="phone"
                            onChange={[Function]}
                            value=""
                          >
                            <Input
                              className=""
                              iconPosition="left"
                              type="text"
                            >
                              <div
                                className="ui left icon input"
                              >
                                <input
                                  autoComplete="tel"
                                  key=".2"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="tel"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Phone
                                </label>
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  key=".4"
                                  labelText={null}
                                  labelWeight={null}
                                  name="phone"
                                  path={null}
                                  size={null}
                                >
                                  <i
                                    className="icon"
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M17.26,20.77a10.82,10.82,0,0,1-4.91-1.31,18.17,18.17,0,0,1-4.5-3.31,18.36,18.36,0,0,1-3.31-4.5,11,11,0,0,1-1.3-4.91A3.72,3.72,0,0,1,4.58,4.39,4,4,0,0,1,6.73,3.23,2,2,0,0,1,8,3.91,11.34,11.34,0,0,1,9.16,5.26c.25.33,1.52,2,1.52,2.79s-.74,1.11-1.53,1.6a7.2,7.2,0,0,0-.84.56c-.24.19-.28.29-.29.32A11.62,11.62,0,0,0,13.47,16a.94.94,0,0,0,.32-.3,9.4,9.4,0,0,0,.56-.84c.48-.78.93-1.52,1.59-1.52s2.46,1.26,2.79,1.51a10.53,10.53,0,0,1,1.35,1.22,2,2,0,0,1,.68,1.21,4,4,0,0,1-1.15,2.16,3.78,3.78,0,0,1-2.35,1.35ZM6.73,4.11A3.25,3.25,0,0,0,5.17,5,2.86,2.86,0,0,0,4.11,6.74c0,5.9,7.25,13.15,13.15,13.15A2.84,2.84,0,0,0,19,18.83a3.35,3.35,0,0,0,.93-1.56c0-.17-.49-.82-1.75-1.79A7.23,7.23,0,0,0,16,14.19s-.12,0-.32.3-.36.52-.54.81c-.49.8-.95,1.55-1.62,1.55a.87.87,0,0,1-.32-.06A12.44,12.44,0,0,1,7.2,10.85c-.11-.28-.13-.71.42-1.21A8.34,8.34,0,0,1,8.69,8.9a9,9,0,0,0,.82-.54c.25-.2.29-.3.29-.31A6.78,6.78,0,0,0,8.51,5.86c-1-1.27-1.62-1.73-1.78-1.76Zm13.6,7a.43.43,0,0,1-.44-.44,6.58,6.58,0,0,0-6.58-6.57.44.44,0,1,1,0-.88,7.44,7.44,0,0,1,7.45,7.45A.43.43,0,0,1,20.33,11.12Zm-2.64,0a.43.43,0,0,1-.43-.44,4,4,0,0,0-4-3.94.44.44,0,1,1,0-.88,4.82,4.82,0,0,1,4.82,4.82A.43.43,0,0,1,17.69,11.12Zm-2.63,0a.43.43,0,0,1-.43-.44,1.32,1.32,0,0,0-1.32-1.31.44.44,0,0,1,0-.88,2.2,2.2,0,0,1,2.19,2.19A.43.43,0,0,1,15.06,11.12Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                              </div>
                            </Input>
                          </InputController>
                        </PhoneInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <InputGroup
                  key=".1"
                  widths="equal"
                >
                  <div
                    className="equal width fields"
                  >
                    <FormField
                      key=".0"
                      width="eight"
                    >
                      <div
                        className="eight wide field"
                      >
                        <TextInput
                          autoComplete="email"
                          error={false}
                          isValid={false}
                          label="Email"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="text"
                          width="eight"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Email"
                            mapValueToProps={[Function]}
                            name="email"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete="email"
                                  key=".2"
                                  name="email"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Email
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </TextInput>
                      </div>
                    </FormField>
                    <FormField
                      key=".1"
                      width="four"
                    >
                      <div
                        className="four wide field"
                      >
                        <NumberInput
                          autoComplete={null}
                          error={false}
                          isValid={false}
                          label="Guests"
                          min={1}
                          name="guests"
                          onBlur={[Function]}
                          onChange={[Function]}
                          width="four"
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onChange"
                            isFocused={false}
                            isValid={false}
                            label="Guests"
                            mapValueToProps={[Function]}
                            name="guests"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  autoComplete={null}
                                  key=".2"
                                  min={1}
                                  name="guests"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="number"
                                  value=""
                                />
                                <label
                                  key=".3"
                                  onClick={[Function]}
                                >
                                  Guests
                                </label>
                              </div>
                            </Input>
                          </InputController>
                        </NumberInput>
                      </div>
                    </FormField>
                  </div>
                </InputGroup>
                <FormField
                  key=".2"
                >
                  <div
                    className="field"
                  >
                    <WithResponsive(DateRangePicker)
                      endDatePlaceholderText="Departure"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Arrival"
                    >
                      <Responsive
                        as={[Function]}
                        endDatePlaceholderText="Departure"
                        isUserOnMobile={false}
                        name="dates"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onUpdate={[Function]}
                        startDatePlaceholderText="Arrival"
                        windowInnerWidth={1024}
                      >
                        <DateRangePicker
                          displayFormat="DD/MM/YYYY"
                          endDatePlaceholderText="Departure"
                          error={false}
                          getIsDayBlocked={[Function]}
                          isUserOnMobile={false}
                          isValid={false}
                          localeCode="en"
                          name="dates"
                          onBlur={[Function]}
                          onChange={[Function]}
                          startDatePlaceholderText="Arrival"
                          willOpenAbove={false}
                          windowInnerWidth={1024}
                        >
                          <InputController
                            adaptOnChangeEvent={[Function]}
                            error={false}
                            icon={null}
                            initialValue=""
                            inputOnChangeFunctionName="onDatesChange"
                            isFocused={false}
                            isValid={false}
                            label={null}
                            mapValueToProps={[Function]}
                            name="dates"
                            onChange={[Function]}
                          >
                            <Input
                              className=""
                              iconPosition={null}
                              type="text"
                            >
                              <div
                                className="ui input"
                              >
                                <DateRangePicker
                                  customArrowIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  customInputIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="calendar"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  daySize={52}
                                  displayFormat="DD/MM/YYYY"
                                  endDate={null}
                                  endDateId="end_date_id_3"
                                  endDatePlaceholderText="Departure"
                                  focusedInput={null}
                                  hideKeyboardShortcutsPanel={true}
                                  isDayBlocked={[Function]}
                                  key=".2"
                                  navNext={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow right"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  navPrev={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="arrow left"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  onDatesChange={[Function]}
                                  onFocusChange={[Function]}
                                  openDirection="down"
                                  startDate={null}
                                  startDateId="start_date_id_4"
                                  startDatePlaceholderText="Arrival"
                                  withPortal={true}
                                >
                                  <div />
                                </DateRangePicker>
                              </div>
                            </Input>
                          </InputController>
                        </DateRangePicker>
                      </Responsive>
                    </WithResponsive(DateRangePicker)>
                  </div>
                </FormField>
                <FormField
                  key=".3"
                >
                  <div
                    className="field"
                  >
                    <TextArea
                      autoComplete={null}
                      error={false}
                      isValid={false}
                      label="Comments"
                      name="comments"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onChange"
                        isFocused={false}
                        isValid={false}
                        label="Comments"
                        mapValueToProps={[Function]}
                        name="comments"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <textarea
                              autoComplete={null}
                              key=".2"
                              onBlur={[Function]}
                              onChange={[Function]}
                              rows="8"
                              value=""
                            />
                            <label
                              key=".3"
                              onClick={[Function]}
                            >
                              Comments
                            </label>
                          </div>
                        </Input>
                      </InputController>
                    </TextArea>
                  </div>
                </FormField>
                <FormField
                  key=".5"
                >
                  <div
                    className="field"
                  >
                    <CaptchaInput
                      error={false}
                      image="someImage"
                      isValid={false}
                      label="Security code"
                      name="captcha"
                      onBlur={[Function]}
                      onChange={[Function]}
                    >
                      <InputGroup
                        widths="equal"
                      >
                        <div
                          className="equal width fields"
                        >
                          <FormField>
                            <div
                              className="field"
                            >
                              <Image
                                as="img"
                                src="someImage"
                                ui={true}
                              >
                                <img
                                  className="ui image"
                                  src="someImage"
                                />
                              </Image>
                            </div>
                          </FormField>
                          <FormField>
                            <div
                              className="field"
                            >
                              <TextInput
                                autoComplete="off"
                                error={false}
                                isValid={false}
                                label="Security code"
                                name="captcha"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                              >
                                <InputController
                                  adaptOnChangeEvent={[Function]}
                                  error={false}
                                  icon={null}
                                  initialValue=""
                                  inputOnChangeFunctionName="onChange"
                                  isFocused={false}
                                  isValid={false}
                                  label="Security code"
                                  mapValueToProps={[Function]}
                                  name="captcha"
                                  onChange={[Function]}
                                >
                                  <Input
                                    className=""
                                    iconPosition={null}
                                    type="text"
                                  >
                                    <div
                                      className="ui input"
                                    >
                                      <input
                                        autoComplete="off"
                                        key=".2"
                                        name="captcha"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      />
                                      <label
                                        key=".3"
                                        onClick={[Function]}
                                      >
                                        Security code
                                      </label>
                                    </div>
                                  </Input>
                                </InputController>
                              </TextInput>
                            </div>
                          </FormField>
                        </div>
                      </InputGroup>
                    </CaptchaInput>
                  </div>
                </FormField>
                <Button
                  hasShadow={false}
                  icon={null}
                  isCompact={false}
                  isDisabled={false}
                  isLoading={false}
                  isPositionedRight={true}
                  isRounded={false}
                  isSecondary={false}
                  onClick={[Function]}
                  size={null}
                >
                  <Button
                    as="button"
                    circular={false}
                    className=""
                    compact={false}
                    disabled={false}
                    floated="right"
                    loading={false}
                    onClick={[Function]}
                    secondary={false}
                    size={null}
                  >
                    <button
                      className="ui right floated button"
                      onClick={[Function]}
                      role="button"
                    >
                      Send
                    </button>
                  </Button>
                </Button>
              </form>
            </Form>
          </div>
        </CardContent>
      </div>
    </Card>
  </Form>
</Contact>
`;
