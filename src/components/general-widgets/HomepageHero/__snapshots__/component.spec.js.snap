// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomepageHero should render the right structure 1`] = `
<HomepageHero
  activeNavigationItemIndex={1}
  backgroundImageSizes="url"
  backgroundImageSrcSet="a load of sizes"
  backgroundImageUrl="bare sources"
  headerLogoSizes="a load of logo sizes"
  headerLogoSrc="src"
  headerLogoSrcSet="a load of logo src sets"
  headerLogoText="text"
  headerNavigationItems={
    Array [
      Object {
        "href": "/",
        "text": "Home",
      },
    ]
  }
  headerPrimaryCTA={
    Object {
      "onClick": [Function],
      "text": "Book now",
    }
  }
  headingText="heading text"
  placeholderBackgroundImageUrl={null}
  searchBarDatesInputOnFocusChange={[Function]}
  searchBarGetIsDayBlocked={[Function]}
  searchBarLocationOptions={
    Array [
      Object {
        "text": "1",
        "value": "1",
      },
    ]
  }
  searchBarModalHeadingText="Check our availability"
  searchBarOnChangeInput={[Function]}
  searchBarOnSubmit={[Function]}
  searchBarSearchButton={
    <button>
      search button
    </button>
  }
>
  <Hero
    activeNavigationItemIndex={1}
    backgroundImageSizes="url"
    backgroundImageSrcSet="a load of sizes"
    backgroundImageUrl="bare sources"
    bottomOffset="0px"
    headerLogoSizes="a load of logo sizes"
    headerLogoSrc="src"
    headerLogoSrcSet="a load of logo src sets"
    headerLogoText="text"
    headerNavigationItems={
      Array [
        Object {
          "href": "/",
          "text": "Home",
        },
      ]
    }
    headerPrimaryCTA={
      Object {
        "onClick": [Function],
        "text": "Book now",
      }
    }
    placeholderBackgroundImageUrl={null}
  >
    <FullBleed
      bottomOffset="0px"
      hasGradient={true}
      imageUrl="bare sources"
      placeholderImageUrl={null}
      sizes="url"
      srcSet="a load of sizes"
    >
      <Segment
        className="full-bleed has-gradient has-children"
        style={
          Object {
            "--full-bleed-bottom-offset": "0px",
          }
        }
        vertical={true}
      >
        <div
          className="ui vertical segment full-bleed has-gradient has-children"
          style={
            Object {
              "--full-bleed-bottom-offset": "0px",
            }
          }
        >
          <withLazyLoad(ResponsiveImage)
            imageUrl="bare sources"
            isFluid={true}
            isLazyLoaded={true}
            placeholderImageUrl={null}
            sizes="url"
            srcSet="a load of sizes"
          >
            <LazyLoader
              componentProps={
                Object {
                  "imageHeight": undefined,
                  "imageWidth": undefined,
                  "isFluid": true,
                  "isLazyLoaded": true,
                  "placeholderImageUrl": null,
                  "sizes": "url",
                }
              }
              lazyProps={
                Object {
                  "imageUrl": "bare sources",
                  "srcSet": "a load of sizes",
                }
              }
            >
              <div />
              <ResponsiveImage
                hasRoundedCorners={false}
                imageHeight={null}
                imageTitle="Image Title"
                imageUrl=""
                imageWidth={null}
                isAvatar={false}
                isCircular={false}
                isFluid={true}
                isLazyLoaded={true}
                label={null}
                placeholderImageUrl={null}
                sizes="url"
                srcSet={null}
              >
                <figure
                  className="responsive-image is-fluid"
                />
              </ResponsiveImage>
              <div />
            </LazyLoader>
          </withLazyLoad(ResponsiveImage)>
          <Header
            activeNavigationItemIndex={1}
            isBackgroundFilled={false}
            logoHref="/"
            logoSize="medium"
            logoSizes="a load of logo sizes"
            logoSrc="src"
            logoSrcSet="a load of logo src sets"
            logoSubText={null}
            logoText="text"
            navigationItems={
              Array [
                Object {
                  "href": "/",
                  "text": "Home",
                },
              ]
            }
            primaryCTA={
              Object {
                "onClick": [Function],
                "text": "Book now",
              }
            }
          >
            <header
              className="is-opaque"
            >
              <HorizontalGutters
                as={[Function]}
                borderless={true}
                text={true}
              >
                <Container
                  as={[Function]}
                  borderless={true}
                  text={true}
                >
                  <Menu
                    borderless={true}
                    className="ui text container"
                  >
                    <div
                      className="ui borderless ui text container menu"
                    >
                      <HeaderLogo
                        logoHref="/"
                        logoSize="medium"
                        logoSizes="a load of logo sizes"
                        logoSrc="src"
                        logoSrcSet="a load of logo src sets"
                        logoSubText={null}
                        logoText="text"
                      >
                        <MenuItem
                          className=""
                          href="/"
                          link={true}
                        >
                          <a
                            className="link item"
                            href="/"
                            onClick={[Function]}
                          >
                            <FlexContainer
                              alignContent={null}
                              alignItems={null}
                              className={null}
                              flexDirection="column"
                              flexWrap={null}
                              justifyContent="center"
                            >
                              <div
                                className="flex-container"
                                style={
                                  Object {
                                    "alignContent": null,
                                    "alignItems": null,
                                    "display": "flex",
                                    "flexDirection": "column",
                                    "flexGrow": "1",
                                    "flexWrap": null,
                                    "height": "100%",
                                    "justifyContent": "center",
                                  }
                                }
                              >
                                <Image
                                  alt="text"
                                  as="img"
                                  className="medium-logo"
                                  sizes="a load of logo sizes"
                                  src="src"
                                  srcSet="a load of logo src sets"
                                  ui={true}
                                >
                                  <img
                                    alt="text"
                                    className="ui image medium-logo"
                                    sizes="a load of logo sizes"
                                    src="src"
                                    srcSet="a load of logo src sets"
                                  />
                                </Image>
                              </div>
                            </FlexContainer>
                          </a>
                        </MenuItem>
                      </HeaderLogo>
                      <MenuMenu
                        position="right"
                      >
                        <div
                          className="right menu"
                        >
                          <MenuItem
                            active={false}
                            href="/"
                            key="Home0"
                            link={true}
                          >
                            <a
                              className="link item"
                              href="/"
                              onClick={[Function]}
                            >
                              Home
                            </a>
                          </MenuItem>
                          <MenuItem
                            className="no-underline"
                            link={true}
                          >
                            <div
                              className="link item no-underline"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={false}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                <Button
                                  as="button"
                                  basic={false}
                                  circular={true}
                                  className=""
                                  compact={false}
                                  disabled={false}
                                  floated="left"
                                  fluid={false}
                                  loading={false}
                                  onClick={[Function]}
                                  secondary={false}
                                  size={null}
                                  type="button"
                                >
                                  <Ref
                                    innerRef={
                                      Object {
                                        "current": <button
                                          class="ui circular left floated button"
                                          type="button"
                                        >
                                          Book now
                                        </button>,
                                      }
                                    }
                                  >
                                    <RefFindNode
                                      innerRef={
                                        Object {
                                          "current": <button
                                            class="ui circular left floated button"
                                            type="button"
                                          >
                                            Book now
                                          </button>,
                                        }
                                      }
                                    >
                                      <button
                                        className="ui circular left floated button"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Book now
                                      </button>
                                    </RefFindNode>
                                  </Ref>
                                </Button>
                              </Button>
                            </div>
                          </MenuItem>
                        </div>
                      </MenuMenu>
                    </div>
                  </Menu>
                </Container>
              </HorizontalGutters>
            </header>
          </Header>
          <FlexContainer
            alignContent={null}
            alignItems="center"
            className={null}
            flexDirection="column"
            flexWrap={null}
            justifyContent="space-evenly"
          >
            <div
              className="flex-container"
              style={
                Object {
                  "alignContent": null,
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "column",
                  "flexGrow": "1",
                  "flexWrap": null,
                  "height": "100%",
                  "justifyContent": "space-evenly",
                }
              }
            >
              <HorizontalGutters>
                <Container>
                  <div
                    className="ui container"
                  >
                    <ShowOn
                      computer={true}
                      mobile={false}
                      parent={[Function]}
                      parentProps={
                        Object {
                          "isColorInverted": true,
                          "size": "huge",
                          "textAlign": "center",
                        }
                      }
                      tablet={true}
                      widescreen={true}
                    >
                      <Heading
                        className="show-on-tablet show-on-computer show-on-widescreen"
                        hasMargin={true}
                        isColorInverted={true}
                        size="huge"
                        textAlign="center"
                      >
                        <Header
                          as="h1"
                          className="show-on-tablet show-on-computer show-on-widescreen"
                          inverted={true}
                          textAlign="center"
                        >
                          <h1
                            className="ui inverted center aligned header show-on-tablet show-on-computer show-on-widescreen"
                          >
                            heading text
                          </h1>
                        </Header>
                      </Heading>
                    </ShowOn>
                    <ShowOn
                      computer={false}
                      mobile={true}
                      parent={[Function]}
                      parentProps={
                        Object {
                          "isColorInverted": true,
                          "size": "large",
                          "textAlign": "center",
                        }
                      }
                      tablet={false}
                      widescreen={false}
                    >
                      <Heading
                        className="show-on-mobile"
                        hasMargin={true}
                        isColorInverted={true}
                        size="large"
                        textAlign="center"
                      >
                        <Header
                          as="h2"
                          className="show-on-mobile"
                          inverted={true}
                          textAlign="center"
                        >
                          <h2
                            className="ui inverted center aligned header show-on-mobile"
                          >
                            heading text
                          </h2>
                        </Header>
                      </Heading>
                    </ShowOn>
                  </div>
                </Container>
              </HorizontalGutters>
              <HorizontalGutters>
                <Container>
                  <div
                    className="ui container"
                  >
                    <Grid
                      areColumnsCentered={true}
                      isStackable={false}
                    >
                      <Grid
                        centered={true}
                        stackable={false}
                      >
                        <div
                          className="ui centered grid"
                        >
                          <GridRow
                            horizontalAlignContent="center"
                          >
                            <GridRow
                              textAlign="center"
                            >
                              <div
                                className="center aligned row"
                              >
                                <ShowOn
                                  computer={true}
                                  mobile={false}
                                  parent={[Function]}
                                  parentProps={
                                    Object {
                                      "dateRangePickerLocaleCode": undefined,
                                      "datesCheckInLabel": undefined,
                                      "datesCheckOutLabel": undefined,
                                      "datesInputFocusedInput": undefined,
                                      "datesInputOnFocusChange": [Function],
                                      "datesInputValue": undefined,
                                      "getIsDayBlocked": [Function],
                                      "guestsInputLabel": undefined,
                                      "guestsInputValue": undefined,
                                      "isDateRangePickerLoading": undefined,
                                      "locationInputLabel": undefined,
                                      "locationInputValue": undefined,
                                      "locationOptions": Array [
                                        Object {
                                          "text": "1",
                                          "value": "1",
                                        },
                                      ],
                                      "maximumGuestsInputValue": undefined,
                                      "onChangeInput": [Function],
                                      "onSubmit": [Function],
                                      "searchButton": <button>
                                        search button
                                      </button>,
                                      "willLocationDropdownOpenAbove": true,
                                    }
                                  }
                                  tablet={true}
                                  widescreen={true}
                                >
                                  <SearchBar
                                    className="show-on-tablet show-on-computer show-on-widescreen"
                                    datesCheckInLabel="Check in"
                                    datesCheckOutLabel="Check out"
                                    datesInputOnFocusChange={[Function]}
                                    getIsDayBlocked={[Function]}
                                    guestsInputLabel="Guests"
                                    isDisplayedAsModal={false}
                                    isFixed={false}
                                    isStackable={false}
                                    locationInputLabel="Location"
                                    locationOptions={
                                      Array [
                                        Object {
                                          "text": "1",
                                          "value": "1",
                                        },
                                      ]
                                    }
                                    modalHeadingText="Check our availability"
                                    modalSummaryElement={null}
                                    onChangeInput={[Function]}
                                    onSubmit={[Function]}
                                    searchButton={
                                      <button>
                                        search button
                                      </button>
                                    }
                                    summaryElement={null}
                                    willLocationDropdownOpenAbove={true}
                                  >
                                    <div
                                      className="show-on-tablet show-on-computer show-on-widescreen search-bar"
                                    >
                                      <Form
                                        as="form"
                                        onSubmit={[Function]}
                                      >
                                        <form
                                          className="ui form"
                                          onSubmit={[Function]}
                                        >
                                          <SearchFields
                                            className="show-on-tablet show-on-computer show-on-widescreen"
                                            datesCheckInLabel="Check in"
                                            datesCheckOutLabel="Check out"
                                            datesInputOnFocusChange={[Function]}
                                            getIsDayBlocked={[Function]}
                                            guestsInputLabel="Guests"
                                            isDisplayedAsModal={false}
                                            isFixed={false}
                                            isStackable={false}
                                            locationInputLabel="Location"
                                            locationOptions={
                                              Array [
                                                Object {
                                                  "text": "1",
                                                  "value": "1",
                                                },
                                              ]
                                            }
                                            modalHeadingText="Check our availability"
                                            modalSummaryElement={null}
                                            onChangeInput={[Function]}
                                            onInputChange={[Function]}
                                            onSubmit={[Function]}
                                            searchButton={
                                              <button>
                                                search button
                                              </button>
                                            }
                                            summaryElement={null}
                                            willLocationDropdownOpenAbove={true}
                                          >
                                            <div
                                              className="inputs-container"
                                            >
                                              <div
                                                className="input-container location-input-container"
                                              >
                                                <Dropdown
                                                  error={false}
                                                  getOptionsWithSearch={null}
                                                  icon="map pin"
                                                  initialValue={null}
                                                  isClearable={true}
                                                  isCompact={false}
                                                  isDisabled={false}
                                                  isSearchable={false}
                                                  isValid={false}
                                                  label="Location"
                                                  name="location"
                                                  noResultsText="No results"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "text": "1",
                                                        "value": "1",
                                                      },
                                                    ]
                                                  }
                                                  willOpenAbove={true}
                                                >
                                                  <div
                                                    className="dropdown-container"
                                                  >
                                                    <Icon
                                                      className={null}
                                                      color={null}
                                                      hasBorder={false}
                                                      isButton={false}
                                                      isCircular={false}
                                                      isColorInverted={false}
                                                      isDisabled={false}
                                                      isLabelLeft={false}
                                                      labelText={null}
                                                      labelWeight={null}
                                                      name="map pin"
                                                      path={null}
                                                      size={null}
                                                    >
                                                      <i
                                                        className="icon"
                                                      >
                                                        <svg
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </i>
                                                    </Icon>
                                                    <Dropdown
                                                      additionLabel="Add "
                                                      additionPosition="top"
                                                      clearable={true}
                                                      closeOnBlur={true}
                                                      closeOnEscape={true}
                                                      compact={false}
                                                      deburr={false}
                                                      disabled={false}
                                                      icon={
                                                        <Icon
                                                          className={null}
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="caret down"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      minCharacters={1}
                                                      noResultsMessage="No results"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      open={false}
                                                      openOnFocus={true}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "key": "0",
                                                            "label": undefined,
                                                            "text": "1",
                                                            "value": "1",
                                                          },
                                                        ]
                                                      }
                                                      placeholder="Location"
                                                      renderLabel={[Function]}
                                                      search={false}
                                                      searchInput="text"
                                                      selectOnBlur={false}
                                                      selectOnNavigation={true}
                                                      selection={true}
                                                      upward={true}
                                                      wrapSelection={true}
                                                    >
                                                      <Ref
                                                        innerRef={
                                                          Object {
                                                            "current": <div
                                                              aria-disabled="false"
                                                              aria-expanded="false"
                                                              class="ui selection upward dropdown"
                                                              role="listbox"
                                                              tabindex="0"
                                                            >
                                                              <div
                                                                aria-atomic="true"
                                                                aria-live="polite"
                                                                class="default text"
                                                                role="alert"
                                                              >
                                                                Location
                                                              </div>
                                                              <i
                                                                class="icon"
                                                              >
                                                                <svg
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M20,8.5l-8,7-8-7Z"
                                                                    fill="currentColor"
                                                                  />
                                                                </svg>
                                                              </i>
                                                              <div
                                                                class="menu transition"
                                                              >
                                                                <div
                                                                  aria-checked="false"
                                                                  aria-selected="true"
                                                                  class="selected item"
                                                                  role="option"
                                                                  style="pointer-events: all;"
                                                                >
                                                                  <span
                                                                    class="text"
                                                                  >
                                                                    1
                                                                  </span>
                                                                </div>
                                                              </div>
                                                            </div>,
                                                          }
                                                        }
                                                      >
                                                        <RefFindNode
                                                          innerRef={
                                                            Object {
                                                              "current": <div
                                                                aria-disabled="false"
                                                                aria-expanded="false"
                                                                class="ui selection upward dropdown"
                                                                role="listbox"
                                                                tabindex="0"
                                                              >
                                                                <div
                                                                  aria-atomic="true"
                                                                  aria-live="polite"
                                                                  class="default text"
                                                                  role="alert"
                                                                >
                                                                  Location
                                                                </div>
                                                                <i
                                                                  class="icon"
                                                                >
                                                                  <svg
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M20,8.5l-8,7-8-7Z"
                                                                      fill="currentColor"
                                                                    />
                                                                  </svg>
                                                                </i>
                                                                <div
                                                                  class="menu transition"
                                                                >
                                                                  <div
                                                                    aria-checked="false"
                                                                    aria-selected="true"
                                                                    class="selected item"
                                                                    role="option"
                                                                    style="pointer-events: all;"
                                                                  >
                                                                    <span
                                                                      class="text"
                                                                    >
                                                                      1
                                                                    </span>
                                                                  </div>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-expanded={false}
                                                            className="ui selection upward dropdown"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseDown={[Function]}
                                                            role="listbox"
                                                            tabIndex={0}
                                                          >
                                                            <div
                                                              aria-atomic={true}
                                                              aria-live="polite"
                                                              className="default text"
                                                              role="alert"
                                                            >
                                                              Location
                                                            </div>
                                                            <Icon
                                                              className=""
                                                              color={null}
                                                              hasBorder={false}
                                                              isButton={false}
                                                              isCircular={false}
                                                              isColorInverted={false}
                                                              isDisabled={false}
                                                              isLabelLeft={false}
                                                              labelText={null}
                                                              labelWeight={null}
                                                              name="caret down"
                                                              onClick={[Function]}
                                                              path={null}
                                                              size={null}
                                                            >
                                                              <i
                                                                className="icon"
                                                                onClick={[Function]}
                                                              >
                                                                <svg
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M20,8.5l-8,7-8-7Z"
                                                                    fill="currentColor"
                                                                  />
                                                                </svg>
                                                              </i>
                                                            </Icon>
                                                            <DropdownMenu
                                                              open={false}
                                                            >
                                                              <div
                                                                className="menu transition"
                                                              >
                                                                <DropdownItem
                                                                  active={false}
                                                                  key="0"
                                                                  onClick={[Function]}
                                                                  selected={true}
                                                                  style={
                                                                    Object {
                                                                      "pointerEvents": "all",
                                                                    }
                                                                  }
                                                                  text="1"
                                                                  value="1"
                                                                >
                                                                  <div
                                                                    aria-checked={false}
                                                                    aria-selected={true}
                                                                    className="selected item"
                                                                    onClick={[Function]}
                                                                    role="option"
                                                                    style={
                                                                      Object {
                                                                        "pointerEvents": "all",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="text"
                                                                    >
                                                                      1
                                                                    </span>
                                                                  </div>
                                                                </DropdownItem>
                                                              </div>
                                                            </DropdownMenu>
                                                          </div>
                                                        </RefFindNode>
                                                      </Ref>
                                                    </Dropdown>
                                                  </div>
                                                </Dropdown>
                                              </div>
                                              <div
                                                className="input-container dates-input-container"
                                              >
                                                <WithResponsive(DateRangePicker)
                                                  endDatePlaceholderText="Check out"
                                                  getIsDayBlocked={[Function]}
                                                  name="dates"
                                                  onChange={[Function]}
                                                  onFocusChange={[Function]}
                                                  startDatePlaceholderText="Check in"
                                                  willOpenAbove={true}
                                                >
                                                  <Responsive
                                                    as={[Function]}
                                                    endDatePlaceholderText="Check out"
                                                    getIsDayBlocked={[Function]}
                                                    getWidth={[Function]}
                                                    isUserOnMobile={false}
                                                    name="dates"
                                                    onChange={[Function]}
                                                    onFocusChange={[Function]}
                                                    onUpdate={[Function]}
                                                    startDatePlaceholderText="Check in"
                                                    willOpenAbove={true}
                                                    windowInnerWidth={1024}
                                                  >
                                                    <DateRangePicker
                                                      displayFormat="DD/MM/YYYY"
                                                      endDatePlaceholderText="Check out"
                                                      error={false}
                                                      getIsDayBlocked={[Function]}
                                                      isLoading={false}
                                                      isUserOnMobile={false}
                                                      isValid={false}
                                                      localeCode="en"
                                                      name="dates"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocusChange={[Function]}
                                                      startDatePlaceholderText="Check in"
                                                      willOpenAbove={true}
                                                      windowInnerWidth={1024}
                                                    >
                                                      <InputController
                                                        adaptOnChangeEvent={[Function]}
                                                        error={false}
                                                        icon={null}
                                                        inputOnChangeFunctionName="onDatesChange"
                                                        isCompact={false}
                                                        isFluid={false}
                                                        isFocused={false}
                                                        isValid={false}
                                                        mapValueToProps={[Function]}
                                                        name="dates"
                                                        onChange={[Function]}
                                                        value={null}
                                                      >
                                                        <Input
                                                          className=""
                                                          fluid={false}
                                                          iconPosition={null}
                                                          name="dates"
                                                          type="text"
                                                          value={null}
                                                        >
                                                          <div
                                                            className="ui input"
                                                          >
                                                            <DateRangePicker
                                                              customArrowIcon={
                                                                <Icon
                                                                  className={null}
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow right"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              customInputIcon={
                                                                <Icon
                                                                  className={null}
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="calendar"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              daySize={52}
                                                              disabled={false}
                                                              displayFormat="DD/MM/YYYY"
                                                              endDate={null}
                                                              endDatePlaceholderText="Check out"
                                                              focusedInput={null}
                                                              hideKeyboardShortcutsPanel={true}
                                                              isDayBlocked={[Function]}
                                                              key=".0"
                                                              navNext={
                                                                <Icon
                                                                  className={null}
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow right"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              navPrev={
                                                                <Icon
                                                                  className={null}
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow left"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              onDatesChange={[Function]}
                                                              onFocusChange={[Function]}
                                                              openDirection="up"
                                                              showClearDates={true}
                                                              startDate={null}
                                                              startDatePlaceholderText="Check in"
                                                              withPortal={false}
                                                            >
                                                              <div />
                                                            </DateRangePicker>
                                                          </div>
                                                        </Input>
                                                      </InputController>
                                                      <div />
                                                    </DateRangePicker>
                                                  </Responsive>
                                                </WithResponsive(DateRangePicker)>
                                              </div>
                                              <div
                                                className="input-container guests-input-container"
                                              >
                                                <CounterDropdown
                                                  counterName="guests"
                                                  dropdownLabel="Guests"
                                                  onChange={[Function]}
                                                  willOpenAbove={false}
                                                >
                                                  <Popup
                                                    className="counter-dropdown"
                                                    content={
                                                      <FlexContainer
                                                        alignContent={null}
                                                        alignItems={null}
                                                        className={null}
                                                        flexDirection="row"
                                                        flexWrap={null}
                                                        justifyContent="space-between"
                                                      >
                                                        <Counter
                                                          min={0}
                                                          name="guests"
                                                          onChange={[Function]}
                                                          renderValue={[Function]}
                                                          value={0}
                                                        />
                                                      </FlexContainer>
                                                    }
                                                    disabled={false}
                                                    eventsEnabled={true}
                                                    offset={0}
                                                    on="click"
                                                    onClose={[Function]}
                                                    onOpen={[Function]}
                                                    open={false}
                                                    pinned={false}
                                                    position="bottom left"
                                                    text="Guests"
                                                    trigger={
                                                      <div
                                                        className="dropdown-container"
                                                        role="button"
                                                      >
                                                        <div
                                                          className="ui selection dropdown counter-dropdown-trigger"
                                                        >
                                                          Guests
                                                          <Icon
                                                            className={null}
                                                            color={null}
                                                            hasBorder={false}
                                                            isButton={false}
                                                            isCircular={false}
                                                            isColorInverted={false}
                                                            isDisabled={false}
                                                            isLabelLeft={false}
                                                            labelText={null}
                                                            labelWeight={null}
                                                            name="caret down"
                                                            path={null}
                                                            size={null}
                                                          />
                                                        </div>
                                                      </div>
                                                    }
                                                  >
                                                    <Portal
                                                      closeOnDocumentClick={true}
                                                      closeOnEscape={true}
                                                      closeOnTriggerClick={true}
                                                      eventPool="default"
                                                      onClose={[Function]}
                                                      onMount={[Function]}
                                                      onOpen={[Function]}
                                                      onUnmount={[Function]}
                                                      open={false}
                                                      openOnTriggerClick={true}
                                                      trigger={
                                                        <div
                                                          className="dropdown-container"
                                                          role="button"
                                                        >
                                                          <div
                                                            className="ui selection dropdown counter-dropdown-trigger"
                                                          >
                                                            Guests
                                                            <Icon
                                                              className={null}
                                                              color={null}
                                                              hasBorder={false}
                                                              isButton={false}
                                                              isCircular={false}
                                                              isColorInverted={false}
                                                              isDisabled={false}
                                                              isLabelLeft={false}
                                                              labelText={null}
                                                              labelWeight={null}
                                                              name="caret down"
                                                              path={null}
                                                              size={null}
                                                            />
                                                          </div>
                                                        </div>
                                                      }
                                                      triggerRef={
                                                        Object {
                                                          "current": <div
                                                            class="dropdown-container"
                                                            role="button"
                                                          >
                                                            <div
                                                              class="ui selection dropdown counter-dropdown-trigger"
                                                            >
                                                              Guests
                                                              <i
                                                                class="icon"
                                                              >
                                                                <svg
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M20,8.5l-8,7-8-7Z"
                                                                    fill="currentColor"
                                                                  />
                                                                </svg>
                                                              </i>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                    >
                                                      <Ref
                                                        innerRef={[Function]}
                                                      >
                                                        <RefFindNode
                                                          innerRef={[Function]}
                                                        >
                                                          <div
                                                            className="dropdown-container"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                            role="button"
                                                          >
                                                            <div
                                                              className="ui selection dropdown counter-dropdown-trigger"
                                                            >
                                                              Guests
                                                              <Icon
                                                                className={null}
                                                                color={null}
                                                                hasBorder={false}
                                                                isButton={false}
                                                                isCircular={false}
                                                                isColorInverted={false}
                                                                isDisabled={false}
                                                                isLabelLeft={false}
                                                                labelText={null}
                                                                labelWeight={null}
                                                                name="caret down"
                                                                path={null}
                                                                size={null}
                                                              >
                                                                <i
                                                                  className="icon"
                                                                >
                                                                  <svg
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M20,8.5l-8,7-8-7Z"
                                                                      fill="currentColor"
                                                                    />
                                                                  </svg>
                                                                </i>
                                                              </Icon>
                                                            </div>
                                                          </div>
                                                        </RefFindNode>
                                                      </Ref>
                                                    </Portal>
                                                  </Popup>
                                                </CounterDropdown>
                                              </div>
                                              <div
                                                className="button-container"
                                              >
                                                <button>
                                                  search button
                                                </button>
                                              </div>
                                            </div>
                                          </SearchFields>
                                        </form>
                                      </Form>
                                    </div>
                                  </SearchBar>
                                </ShowOn>
                                <ShowOn
                                  computer={false}
                                  mobile={true}
                                  parent="div"
                                  parentProps={Object {}}
                                  tablet={false}
                                  widescreen={false}
                                >
                                  <div
                                    className="show-on-mobile"
                                  >
                                    <SearchBar
                                      className={null}
                                      datesCheckInLabel="Check in"
                                      datesCheckOutLabel="Check out"
                                      datesInputOnFocusChange={[Function]}
                                      getIsDayBlocked={[Function]}
                                      guestsInputLabel="Guests"
                                      isDisplayedAsModal={true}
                                      isFixed={false}
                                      isStackable={false}
                                      locationInputLabel="Location"
                                      locationOptions={
                                        Array [
                                          Object {
                                            "text": "1",
                                            "value": "1",
                                          },
                                        ]
                                      }
                                      modalHeadingText="Check our availability"
                                      modalSummaryElement={null}
                                      onChangeInput={[Function]}
                                      onSubmit={[Function]}
                                      searchButton={
                                        <button>
                                          search button
                                        </button>
                                      }
                                      summaryElement={null}
                                      willLocationDropdownOpenAbove={false}
                                    >
                                      <SearchModal
                                        className={null}
                                        datesCheckInLabel="Check in"
                                        datesCheckOutLabel="Check out"
                                        datesInputOnFocusChange={[Function]}
                                        getIsDayBlocked={[Function]}
                                        guestsInputLabel="Guests"
                                        isDisplayedAsModal={true}
                                        isFixed={false}
                                        isModalOpen={false}
                                        isStackable={false}
                                        locationInputLabel="Location"
                                        locationOptions={
                                          Array [
                                            Object {
                                              "text": "1",
                                              "value": "1",
                                            },
                                          ]
                                        }
                                        modalHeadingText="Check our availability"
                                        modalSummaryElement={null}
                                        onChangeInput={[Function]}
                                        onInputChange={[Function]}
                                        onSubmit={[Function]}
                                        searchButton={
                                          <button>
                                            search button
                                          </button>
                                        }
                                        summaryElement={null}
                                        willLocationDropdownOpenAbove={false}
                                      >
                                        <Modal
                                          hasCloseIcon={true}
                                          hasPadding={true}
                                          hasRoundedCorners={false}
                                          header={
                                            <Heading
                                              className={null}
                                              hasMargin={true}
                                              isColorInverted={false}
                                              size="small"
                                              textAlign={null}
                                            >
                                              Check our availability
                                            </Heading>
                                          }
                                          isDark={false}
                                          isFullscreen={true}
                                          isOpen={false}
                                          onClose={[Function]}
                                          size="tiny"
                                          trigger={
                                            <div
                                              data-test-id="search-bar-search-modal-trigger"
                                              onClick={[Function]}
                                            >
                                              <button>
                                                search button
                                              </button>
                                            </div>
                                          }
                                        >
                                          <Modal
                                            centered={true}
                                            className="has-padding"
                                            closeIcon={
                                              <Icon
                                                className={null}
                                                color={null}
                                                hasBorder={false}
                                                isButton={false}
                                                isCircular={false}
                                                isColorInverted={false}
                                                isDisabled={false}
                                                isLabelLeft={false}
                                                labelText={null}
                                                labelWeight={null}
                                                name="close"
                                                path={null}
                                                size={null}
                                              />
                                            }
                                            closeOnDimmerClick={true}
                                            closeOnDocumentClick={false}
                                            dimmer="inverted"
                                            eventPool="Modal"
                                            onClose={[Function]}
                                            open={false}
                                            size="fullscreen"
                                            trigger={
                                              <div
                                                data-test-id="search-bar-search-modal-trigger"
                                                onClick={[Function]}
                                              >
                                                <button>
                                                  search button
                                                </button>
                                              </div>
                                            }
                                          >
                                            <Portal
                                              closeOnDocumentClick={false}
                                              closeOnEscape={true}
                                              eventPool="Modal"
                                              mountNode={<body />}
                                              onClose={[Function]}
                                              onMount={[Function]}
                                              onOpen={[Function]}
                                              onUnmount={[Function]}
                                              open={false}
                                              openOnTriggerClick={true}
                                              trigger={
                                                <div
                                                  data-test-id="search-bar-search-modal-trigger"
                                                  onClick={[Function]}
                                                >
                                                  <button>
                                                    search button
                                                  </button>
                                                </div>
                                              }
                                            >
                                              <Ref
                                                innerRef={[Function]}
                                              >
                                                <RefFindNode
                                                  innerRef={[Function]}
                                                >
                                                  <div
                                                    data-test-id="search-bar-search-modal-trigger"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <button>
                                                      search button
                                                    </button>
                                                  </div>
                                                </RefFindNode>
                                              </Ref>
                                            </Portal>
                                          </Modal>
                                        </Modal>
                                      </SearchModal>
                                    </SearchBar>
                                  </div>
                                </ShowOn>
                              </div>
                            </GridRow>
                          </GridRow>
                        </div>
                      </Grid>
                    </Grid>
                  </div>
                </Container>
              </HorizontalGutters>
            </div>
          </FlexContainer>
        </div>
      </Segment>
    </FullBleed>
  </Hero>
</HomepageHero>
`;
