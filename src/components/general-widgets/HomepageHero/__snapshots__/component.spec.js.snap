// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomepageHero should render the right structure 1`] = `
<HomepageHero
  activeNavigationItemIndex={1}
  backgroundImageSizes="url"
  backgroundImageSrcSet="a load of sizes"
  backgroundImageUrl="bare sources"
  className=""
  headerLogoSizes="a load of logo sizes"
  headerLogoSrc="src"
  headerLogoSrcSet="a load of logo src sets"
  headerLogoText="text"
  headerNavigationItems={
    Array [
      Object {
        "href": "/",
        "text": "Home",
      },
    ]
  }
  headerPrimaryCTA={
    Object {
      "onClick": [Function],
      "text": "Book now",
    }
  }
  headingText="heading text"
  isHeaderBackgroundFilled={false}
  placeholderBackgroundImageUrl={null}
  searchBarDatesInputOnFocusChange={[Function]}
  searchBarGetIsDayBlocked={[Function]}
  searchBarLocationOptions={
    Array [
      Object {
        "text": "1",
        "value": "1",
      },
    ]
  }
  searchBarOnChangeInput={[Function]}
  searchBarOnSubmit={[Function]}
  searchBarSearchButton={
    <button>
      search button
    </button>
  }
>
  <Hero
    activeNavigationItemIndex={1}
    backgroundImageSizes="url"
    backgroundImageSrcSet="a load of sizes"
    backgroundImageUrl="bare sources"
    bottomOffset="0px"
    className=""
    headerLogoSizes="a load of logo sizes"
    headerLogoSrc="src"
    headerLogoSrcSet="a load of logo src sets"
    headerLogoText="text"
    headerNavigationItems={
      Array [
        Object {
          "href": "/",
          "text": "Home",
        },
      ]
    }
    headerPrimaryCTA={
      Object {
        "onClick": [Function],
        "text": "Book now",
      }
    }
    isHeaderBackgroundFilled={false}
    placeholderBackgroundImageUrl={null}
  >
    <FullBleed
      bottomOffset="0px"
      className=""
      hasGradient={true}
      imageUrl="bare sources"
      placeholderImageUrl={null}
      sizes="url"
      srcSet="a load of sizes"
    >
      <Segment
        className="full-bleed has-gradient has-children"
        style={
          Object {
            "--full-bleed-bottom-offset": "0px",
          }
        }
        vertical={true}
      >
        <div
          className="ui vertical segment full-bleed has-gradient has-children"
          style={
            Object {
              "--full-bleed-bottom-offset": "0px",
            }
          }
        >
          <withLazyLoad(ResponsiveImage)
            imageUrl="bare sources"
            isFluid={true}
            isLazyLoaded={true}
            placeholderImageUrl={null}
            sizes="url"
            srcSet="a load of sizes"
            willFill={true}
          >
            <LazyLoader
              componentProps={
                Object {
                  "isFluid": true,
                  "isLazyLoaded": true,
                  "placeholderImageUrl": null,
                  "sizes": "url",
                  "willFill": true,
                }
              }
              lazyProps={
                Object {
                  "imageUrl": "bare sources",
                  "srcSet": "a load of sizes",
                }
              }
            >
              <div />
              <ResponsiveImage
                hasRoundedCorners={false}
                imageTitle="Image Title"
                imageUrl=""
                isAvatar={false}
                isCircular={false}
                isFluid={true}
                isLazyLoaded={true}
                label={null}
                placeholderImageUrl={null}
                sizes="url"
                srcSet={null}
                willFill={true}
              >
                <figure
                  alt="Image Title"
                  className="responsive-image willFill"
                  data-testid="responsive-image"
                  style={
                    Object {
                      "backgroundImage": "url(null)",
                    }
                  }
                >
                  <Image
                    as="img"
                    avatar={false}
                    circular={false}
                    data-testid="responsive-image-img"
                    fluid={true}
                    onError={[Function]}
                    onLoad={[Function]}
                    rounded={false}
                    sizes="url"
                    src=""
                    srcSet={null}
                    title="Image Title"
                    ui={true}
                  >
                    <img
                      className="ui fluid image"
                      data-testid="responsive-image-img"
                      onError={[Function]}
                      onLoad={[Function]}
                      sizes="url"
                      src=""
                      srcSet={null}
                      title="Image Title"
                    />
                  </Image>
                </figure>
              </ResponsiveImage>
              <div />
            </LazyLoader>
          </withLazyLoad(ResponsiveImage)>
          <Header
            activeNavigationItemIndex={1}
            className=""
            isBackgroundFilled={false}
            logoHref="/"
            logoSize="medium"
            logoSizes="a load of logo sizes"
            logoSrc="src"
            logoSrcSet="a load of logo src sets"
            logoSubText={null}
            logoText="text"
            navigationItems={
              Array [
                Object {
                  "href": "/",
                  "text": "Home",
                },
              ]
            }
            primaryCTA={
              Object {
                "onClick": [Function],
                "text": "Book now",
              }
            }
          >
            <header
              className="is-opaque"
            >
              <HorizontalGutters
                as={[Function]}
                borderless={true}
                text={true}
              >
                <Container
                  as={[Function]}
                  borderless={true}
                  text={true}
                >
                  <Menu
                    borderless={true}
                    className="ui text container"
                  >
                    <div
                      className="ui borderless ui text container menu"
                    >
                      <Logo
                        logoHref="/"
                        logoSize="medium"
                        logoSizes="a load of logo sizes"
                        logoSrc="src"
                        logoSrcSet="a load of logo src sets"
                        logoSubText={null}
                        logoSubTextAlignment="left"
                        logoText="text"
                      >
                        <MenuItem
                          className=""
                          data-testid="logo"
                          href="/"
                          link={true}
                        >
                          <a
                            className="link item"
                            data-testid="logo"
                            href="/"
                            onClick={[Function]}
                          >
                            <FlexContainer
                              alignContent={null}
                              alignItems={null}
                              className={null}
                              flexDirection="column"
                              flexWrap={null}
                              justifyContent="center"
                            >
                              <div
                                className="flex-container"
                                style={
                                  Object {
                                    "alignContent": null,
                                    "alignItems": null,
                                    "display": "flex",
                                    "flexDirection": "column",
                                    "flexGrow": "1",
                                    "flexWrap": null,
                                    "height": "100%",
                                    "justifyContent": "center",
                                  }
                                }
                              >
                                <Image
                                  alt="text"
                                  as="img"
                                  className="medium-logo"
                                  data-testid="logo-image"
                                  sizes="a load of logo sizes"
                                  src="src"
                                  srcSet="a load of logo src sets"
                                  ui={true}
                                >
                                  <img
                                    alt="text"
                                    className="ui image medium-logo"
                                    data-testid="logo-image"
                                    sizes="a load of logo sizes"
                                    src="src"
                                    srcSet="a load of logo src sets"
                                  />
                                </Image>
                              </div>
                            </FlexContainer>
                          </a>
                        </MenuItem>
                      </Logo>
                      <MenuMenu
                        position="right"
                      >
                        <div
                          className="right menu"
                        >
                          <MenuItem
                            active={false}
                            href="/"
                            key="Home0"
                            link={true}
                          >
                            <a
                              className="link item"
                              href="/"
                              onClick={[Function]}
                            >
                              Home
                            </a>
                          </MenuItem>
                          <MenuItem
                            className="no-underline"
                            link={true}
                          >
                            <div
                              className="link item no-underline"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={false}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                <Button
                                  as="button"
                                  basic={false}
                                  circular={true}
                                  className=""
                                  compact={false}
                                  disabled={false}
                                  floated="left"
                                  fluid={false}
                                  loading={false}
                                  onClick={[Function]}
                                  secondary={false}
                                  size={null}
                                  type="button"
                                >
                                  <Ref
                                    innerRef={
                                      Object {
                                        "current": <button
                                          class="ui circular left floated button"
                                          type="button"
                                        >
                                          Book now
                                        </button>,
                                      }
                                    }
                                  >
                                    <RefFindNode
                                      innerRef={
                                        Object {
                                          "current": <button
                                            class="ui circular left floated button"
                                            type="button"
                                          >
                                            Book now
                                          </button>,
                                        }
                                      }
                                    >
                                      <button
                                        className="ui circular left floated button"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Book now
                                      </button>
                                    </RefFindNode>
                                  </Ref>
                                </Button>
                              </Button>
                            </div>
                          </MenuItem>
                        </div>
                      </MenuMenu>
                    </div>
                  </Menu>
                </Container>
              </HorizontalGutters>
            </header>
          </Header>
          <InnerContent
            headingText="heading text"
            searchBarDatesInputOnFocusChange={[Function]}
            searchBarGetIsDayBlocked={[Function]}
            searchBarLocationOptions={
              Array [
                Object {
                  "text": "1",
                  "value": "1",
                },
              ]
            }
            searchBarOnChangeInput={[Function]}
            searchBarOnSubmit={[Function]}
            searchBarSearchButton={
              <button>
                search button
              </button>
            }
          >
            <div />
          </InnerContent>
        </div>
      </Segment>
    </FullBleed>
  </Hero>
</HomepageHero>
`;
