// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getForgotPasswordFormMarkup if \`forgotPasswordErrorMessage\` is passed should render the error message above the reset button 1`] = `
<Modal
  isFullscreen={false}
  size="tiny"
  trigger={
    <span>
      D
    </span>
  }
>
  <Modal
    closeIcon={
      <Icon
        color={null}
        hasBorder={false}
        isButton={false}
        isCircular={false}
        isColorInverted={false}
        isDisabled={false}
        isLabelLeft={false}
        labelText={null}
        labelWeight={null}
        name="close"
        path={null}
        size={null}
      />
    }
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    content={
      <Form
        actionLink={null}
        autoComplete={null}
        errorMessage="This is an error message"
        headingText="C"
        onSubmit={[Function]}
        submitButtonText="A"
        successMessage=""
        validation={Object {}}
      >
        <TextInput
          autoComplete="email"
          error={false}
          isValid={false}
          label="B"
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          type="text"
        />
      </Form>
    }
    dimmer="inverted"
    eventPool="Modal"
    size="tiny"
    trigger={
      <span>
        D
      </span>
    }
  >
    <Portal
      className="ui inverted page modals dimmer transition visible active"
      closeOnDocumentClick={false}
      closeOnEscape={true}
      closeOnRootNodeClick={true}
      eventPool="Modal"
      mountNode={<body />}
      onClose={[Function]}
      onMount={[Function]}
      onOpen={[Function]}
      onUnmount={[Function]}
      openOnTriggerClick={true}
      trigger={
        <span>
          D
        </span>
      }
    >
      <Ref
        innerRef={[Function]}
      >
        <span
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          D
        </span>
      </Ref>
    </Portal>
  </Modal>
</Modal>
`;

exports[`getForgotPasswordFormMarkup if \`forgotPasswordSuccessMessage\` is passed should render the success message above the reset button 1`] = `
<Modal
  isFullscreen={false}
  size="tiny"
  trigger={
    <span>
      D
    </span>
  }
>
  <Modal
    closeIcon={
      <Icon
        color={null}
        hasBorder={false}
        isButton={false}
        isCircular={false}
        isColorInverted={false}
        isDisabled={false}
        isLabelLeft={false}
        labelText={null}
        labelWeight={null}
        name="close"
        path={null}
        size={null}
      />
    }
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    content={
      <Form
        actionLink={null}
        autoComplete={null}
        errorMessage=""
        headingText="C"
        onSubmit={[Function]}
        submitButtonText="A"
        successMessage="This is a successful message"
        validation={Object {}}
      >
        <TextInput
          autoComplete="email"
          error={false}
          isValid={false}
          label="B"
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          type="text"
        />
      </Form>
    }
    dimmer="inverted"
    eventPool="Modal"
    size="tiny"
    trigger={
      <span>
        D
      </span>
    }
  >
    <Portal
      className="ui inverted page modals dimmer transition visible active"
      closeOnDocumentClick={false}
      closeOnEscape={true}
      closeOnRootNodeClick={true}
      eventPool="Modal"
      mountNode={<body />}
      onClose={[Function]}
      onMount={[Function]}
      onOpen={[Function]}
      onUnmount={[Function]}
      openOnTriggerClick={true}
      trigger={
        <span>
          D
        </span>
      }
    >
      <Ref
        innerRef={[Function]}
      >
        <span
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          D
        </span>
      </Ref>
    </Portal>
  </Modal>
</Modal>
`;

exports[`getForgotPasswordFormMarkup should return the right structure  1`] = `
<Modal
  isFullscreen={false}
  size="tiny"
  trigger={
    <span>
      D
    </span>
  }
>
  <Modal
    closeIcon={
      <Icon
        color={null}
        hasBorder={false}
        isButton={false}
        isCircular={false}
        isColorInverted={false}
        isDisabled={false}
        isLabelLeft={false}
        labelText={null}
        labelWeight={null}
        name="close"
        path={null}
        size={null}
      />
    }
    closeOnDimmerClick={true}
    closeOnDocumentClick={false}
    content={
      <Form
        actionLink={null}
        autoComplete={null}
        errorMessage=""
        headingText="C"
        onSubmit={[Function]}
        submitButtonText="A"
        successMessage=""
        validation={Object {}}
      >
        <TextInput
          autoComplete="email"
          error={false}
          isValid={false}
          label="B"
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          type="text"
        />
      </Form>
    }
    dimmer="inverted"
    eventPool="Modal"
    size="tiny"
    trigger={
      <span>
        D
      </span>
    }
  >
    <Portal
      className="ui inverted page modals dimmer transition visible active"
      closeOnDocumentClick={false}
      closeOnEscape={true}
      closeOnRootNodeClick={true}
      eventPool="Modal"
      mountNode={<body />}
      onClose={[Function]}
      onMount={[Function]}
      onOpen={[Function]}
      onUnmount={[Function]}
      openOnTriggerClick={true}
      trigger={
        <span>
          D
        </span>
      }
    >
      <Ref
        innerRef={[Function]}
      >
        <span
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          D
        </span>
      </Ref>
    </Portal>
  </Modal>
</Modal>
`;
