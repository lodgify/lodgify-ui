// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SearchBar /> by default should render the right structure 1`] = `
<SearchBar
  className={null}
  dateRangePickerLocaleCode="ko"
  getIsDayBlocked={[Function]}
  guestsOptions={
    Array [
      Object {
        "text": "1",
        "value": "1",
      },
      Object {
        "text": "2",
        "value": "2",
      },
      Object {
        "text": "3",
        "value": "3",
      },
      Object {
        "text": "4",
        "value": "4",
      },
    ]
  }
  isDisplayedAsModal={false}
  isFixed={false}
  isShowingSummary={false}
  locationOptions={
    Array [
      Object {
        "text": "Barcelona",
        "value": "barcelona",
      },
      Object {
        "text": "Valencia",
        "value": "valencia",
      },
      Object {
        "text": "Madrid",
        "value": "madrid",
      },
      Object {
        "text": "Bilbao",
        "value": "bilbao",
      },
    ]
  }
  modalHeadingText="Check our availability"
  modalSummaryElement={null}
  onChangeInput={[Function]}
  onCloseModal={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon="search"
      isCompact={false}
      isDisabled={false}
      isLoading={false}
      isPositionedRight={false}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Search
    </Button>
  }
  summaryElement={null}
  willDropdownsOpenAbove={false}
>
  <div
    className="search-bar"
  >
    <Form
      as="form"
      onSubmit={[Function]}
    >
      <form
        className="ui form"
        onSubmit={[Function]}
      >
        <FormGroup>
          <div
            className="fields"
          >
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Dropdown
                  error={false}
                  icon="map pin"
                  isDisabled={false}
                  isSearchable={false}
                  isValid={false}
                  label="Location"
                  name="location"
                  noResultsText="No results"
                  onBlur={[Function]}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "text": "Barcelona",
                        "value": "barcelona",
                      },
                      Object {
                        "text": "Valencia",
                        "value": "valencia",
                      },
                      Object {
                        "text": "Madrid",
                        "value": "madrid",
                      },
                      Object {
                        "text": "Bilbao",
                        "value": "bilbao",
                      },
                    ]
                  }
                  willOpenAbove={false}
                >
                  <div
                    className="dropdown-container"
                  >
                    <Icon
                      color={null}
                      hasBorder={false}
                      isButton={false}
                      isCircular={false}
                      isColorInverted={false}
                      isDisabled={false}
                      isLabelLeft={false}
                      labelText={null}
                      labelWeight={null}
                      name="map pin"
                      path={null}
                      size={null}
                    >
                      <i
                        className="icon"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                            fill="currentColor"
                          />
                        </svg>
                      </i>
                    </Icon>
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      closeOnBlur={true}
                      deburr={false}
                      defaultValue={null}
                      disabled={false}
                      icon={
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          path={null}
                          size={null}
                        />
                      }
                      minCharacters={1}
                      noResultsMessage="No results"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      open={false}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "text": "Barcelona",
                            "value": "barcelona",
                          },
                          Object {
                            "text": "Valencia",
                            "value": "valencia",
                          },
                          Object {
                            "text": "Madrid",
                            "value": "madrid",
                          },
                          Object {
                            "text": "Bilbao",
                            "value": "bilbao",
                          },
                        ]
                      }
                      renderLabel={[Function]}
                      search={false}
                      searchInput="text"
                      selectOnBlur={false}
                      selectOnNavigation={true}
                      selection={true}
                      upward={false}
                      wrapSelection={true}
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="ui selection dropdown"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        />
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          onClick={[Function]}
                          path={null}
                          size={null}
                        >
                          <i
                            className="icon"
                            onClick={[Function]}
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M20,8.5l-8,7-8-7Z"
                                fill="currentColor"
                              />
                            </svg>
                          </i>
                        </Icon>
                        <DropdownMenu
                          open={false}
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={false}
                              key="barcelona"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Barcelona"
                              value="barcelona"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={true}
                                className="selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Barcelona"
                                >
                                  Barcelona
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="valencia"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Valencia"
                              value="valencia"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Valencia"
                                >
                                  Valencia
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="madrid"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Madrid"
                              value="madrid"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Madrid"
                                >
                                  Madrid
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="bilbao"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Bilbao"
                              value="bilbao"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Bilbao"
                                >
                                  Bilbao
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                    <label
                      onClick={[Function]}
                    >
                      Location
                    </label>
                  </div>
                </Dropdown>
              </div>
            </FormField>
            <FormField
              width="seven"
            >
              <div
                className="seven wide field"
              >
                <WithResponsive(DateRangePicker)
                  endDatePlaceholderText="Check-out"
                  getIsDayBlocked={[Function]}
                  localeCode="ko"
                  name="dates"
                  onChange={[Function]}
                  startDatePlaceholderText="Check-in"
                  willOpenAbove={false}
                >
                  <Responsive
                    as={[Function]}
                    endDatePlaceholderText="Check-out"
                    getIsDayBlocked={[Function]}
                    isUserOnMobile={false}
                    localeCode="ko"
                    name="dates"
                    onChange={[Function]}
                    onUpdate={[Function]}
                    startDatePlaceholderText="Check-in"
                    willOpenAbove={false}
                    windowInnerWidth={1024}
                  >
                    <DateRangePicker
                      displayFormat="DD/MM/YYYY"
                      endDatePlaceholderText="Check-out"
                      error={false}
                      getIsDayBlocked={[Function]}
                      isUserOnMobile={false}
                      isValid={false}
                      localeCode="ko"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Check-in"
                      willOpenAbove={false}
                      windowInnerWidth={1024}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onDatesChange"
                        isFocused={false}
                        isValid={false}
                        label={null}
                        mapValueToProps={[Function]}
                        name="dates"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <DateRangePicker
                              customArrowIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              customInputIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="calendar"
                                  path={null}
                                  size={null}
                                />
                              }
                              daySize={52}
                              displayFormat="DD/MM/YYYY"
                              endDate={null}
                              endDateId="end_date_id_3"
                              endDatePlaceholderText="Check-out"
                              focusedInput={null}
                              hideKeyboardShortcutsPanel={true}
                              isDayBlocked={[Function]}
                              key=".2"
                              navNext={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              navPrev={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow left"
                                  path={null}
                                  size={null}
                                />
                              }
                              onDatesChange={[Function]}
                              onFocusChange={[Function]}
                              openDirection="down"
                              startDate={null}
                              startDateId="start_date_id_4"
                              startDatePlaceholderText="Check-in"
                              withPortal={true}
                            >
                              <div />
                            </DateRangePicker>
                          </div>
                        </Input>
                      </InputController>
                    </DateRangePicker>
                  </Responsive>
                </WithResponsive(DateRangePicker)>
              </div>
            </FormField>
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Dropdown
                  error={false}
                  icon="users"
                  isDisabled={false}
                  isSearchable={false}
                  isValid={false}
                  label="Guests"
                  name="guests"
                  noResultsText="No results"
                  onBlur={[Function]}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "text": "1",
                        "value": "1",
                      },
                      Object {
                        "text": "2",
                        "value": "2",
                      },
                      Object {
                        "text": "3",
                        "value": "3",
                      },
                      Object {
                        "text": "4",
                        "value": "4",
                      },
                    ]
                  }
                  willOpenAbove={false}
                >
                  <div
                    className="dropdown-container"
                  >
                    <Icon
                      color={null}
                      hasBorder={false}
                      isButton={false}
                      isCircular={false}
                      isColorInverted={false}
                      isDisabled={false}
                      isLabelLeft={false}
                      labelText={null}
                      labelWeight={null}
                      name="users"
                      path={null}
                      size={null}
                    >
                      <i
                        className="icon"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M18.63,8.88h-.08a4,4,0,1,0-4.18,0h-.08a2.2,2.2,0,0,0-2.2,2.2v9.35a2.1,2.1,0,0,0,2.1,2.1h4.54a2.11,2.11,0,0,0,2.11-2.1V11.08A2.21,2.21,0,0,0,18.63,8.88Zm-5.18-3.4a3,3,0,1,1,3,3A3,3,0,0,1,13.45,5.48Zm6.39,15a1.11,1.11,0,0,1-1.11,1.1H14.19a1.1,1.1,0,0,1-1.1-1.1V11.08a1.2,1.2,0,0,1,1.2-1.2h4.34a1.21,1.21,0,0,1,1.21,1.2ZM9,11.89a3.27,3.27,0,1,0-3.77,0,2.21,2.21,0,0,0-2.09,2.19v6.24a2.12,2.12,0,0,0,2.11,2.11H9a2.11,2.11,0,0,0,2.1-2.11V14.08A2.21,2.21,0,0,0,9,11.89ZM7.13,7A2.27,2.27,0,1,1,4.87,9.24,2.27,2.27,0,0,1,7.13,7Zm3,13.35A1.11,1.11,0,0,1,9,21.43H5.27a1.11,1.11,0,0,1-1.11-1.11V14.08a1.21,1.21,0,0,1,1.21-1.2H8.9a1.2,1.2,0,0,1,1.2,1.2Z"
                            fill="currentColor"
                          />
                        </svg>
                      </i>
                    </Icon>
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      closeOnBlur={true}
                      deburr={false}
                      defaultValue={null}
                      disabled={false}
                      icon={
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          path={null}
                          size={null}
                        />
                      }
                      minCharacters={1}
                      noResultsMessage="No results"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      open={false}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "text": "1",
                            "value": "1",
                          },
                          Object {
                            "text": "2",
                            "value": "2",
                          },
                          Object {
                            "text": "3",
                            "value": "3",
                          },
                          Object {
                            "text": "4",
                            "value": "4",
                          },
                        ]
                      }
                      renderLabel={[Function]}
                      search={false}
                      searchInput="text"
                      selectOnBlur={false}
                      selectOnNavigation={true}
                      selection={true}
                      upward={false}
                      wrapSelection={true}
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="ui selection dropdown"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        />
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          onClick={[Function]}
                          path={null}
                          size={null}
                        >
                          <i
                            className="icon"
                            onClick={[Function]}
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M20,8.5l-8,7-8-7Z"
                                fill="currentColor"
                              />
                            </svg>
                          </i>
                        </Icon>
                        <DropdownMenu
                          open={false}
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={false}
                              key="1"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="1"
                              value="1"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={true}
                                className="selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="1"
                                >
                                  1
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="2"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="2"
                              value="2"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="2"
                                >
                                  2
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="3"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="3"
                              value="3"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="3"
                                >
                                  3
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="4"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="4"
                              value="4"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="4"
                                >
                                  4
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                    <label
                      onClick={[Function]}
                    >
                      Guests
                    </label>
                  </div>
                </Dropdown>
              </div>
            </FormField>
            <FormField
              width="four"
            >
              <div
                className="four wide field"
              >
                <Button
                  hasShadow={false}
                  icon="search"
                  isCompact={false}
                  isDisabled={false}
                  isLoading={false}
                  isPositionedRight={false}
                  isRounded={true}
                  isSecondary={false}
                  onClick={[Function]}
                  size={null}
                >
                  <Button
                    as="button"
                    circular={true}
                    className=""
                    compact={false}
                    disabled={false}
                    floated="left"
                    loading={false}
                    onClick={[Function]}
                    secondary={false}
                    size={null}
                  >
                    <button
                      className="ui circular left floated button"
                      onClick={[Function]}
                      role="button"
                    >
                      <Icon
                        color={null}
                        hasBorder={false}
                        isButton={false}
                        isCircular={false}
                        isColorInverted={false}
                        isDisabled={false}
                        isLabelLeft={false}
                        labelText={null}
                        labelWeight={null}
                        name="search"
                        path={null}
                        size={null}
                      >
                        <i
                          className="icon"
                        >
                          <svg
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                              fill="currentColor"
                            />
                          </svg>
                        </i>
                      </Icon>
                      Search
                    </button>
                  </Button>
                </Button>
              </div>
            </FormField>
          </div>
        </FormGroup>
      </form>
    </Form>
  </div>
</SearchBar>
`;

exports[`<SearchBar /> if \`isDisplayedAsModal\` is true should render the right structure 1`] = `null`;

exports[`<SearchBar /> if \`props.isFixed\` is true should render the right structure 1`] = `
<SearchBar
  className={null}
  dateRangePickerLocaleCode="ko"
  getIsDayBlocked={[Function]}
  guestsOptions={
    Array [
      Object {
        "text": "1",
        "value": "1",
      },
      Object {
        "text": "2",
        "value": "2",
      },
      Object {
        "text": "3",
        "value": "3",
      },
      Object {
        "text": "4",
        "value": "4",
      },
    ]
  }
  isDisplayedAsModal={false}
  isFixed={true}
  isShowingSummary={false}
  locationOptions={
    Array [
      Object {
        "text": "Barcelona",
        "value": "barcelona",
      },
      Object {
        "text": "Valencia",
        "value": "valencia",
      },
      Object {
        "text": "Madrid",
        "value": "madrid",
      },
      Object {
        "text": "Bilbao",
        "value": "bilbao",
      },
    ]
  }
  modalHeadingText="Check our availability"
  modalSummaryElement={null}
  onChangeInput={[Function]}
  onCloseModal={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon="search"
      isCompact={false}
      isDisabled={false}
      isLoading={false}
      isPositionedRight={false}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Search
    </Button>
  }
  summaryElement={null}
  willDropdownsOpenAbove={false}
>
  <div
    className="search-bar is-fixed"
  >
    <HorizontalGutters>
      <Container>
        <div
          className="ui container"
        >
          <Grid
            areColumnsCentered={false}
            isStackable={false}
          >
            <Grid
              centered={false}
              stackable={false}
            >
              <div
                className="ui grid"
              >
                <GridRow
                  horizontalAlignContent="left"
                  verticalAlign="middle"
                >
                  <GridRow
                    textAlign="left"
                    verticalAlign="middle"
                  >
                    <div
                      className="left aligned middle aligned row"
                    >
                      <GridColumn
                        verticalAlignContent="top"
                        width={5}
                      >
                        <GridColumn
                          verticalAlign="top"
                          width={5}
                        >
                          <div
                            className="top aligned five wide column"
                          />
                        </GridColumn>
                      </GridColumn>
                      <GridColumn
                        floated="right"
                        verticalAlignContent="top"
                        width={7}
                      >
                        <GridColumn
                          floated="right"
                          verticalAlign="top"
                          width={7}
                        >
                          <div
                            className="right floated top aligned seven wide column"
                          >
                            <Form
                              as="form"
                              onSubmit={[Function]}
                            >
                              <form
                                className="ui form"
                                onSubmit={[Function]}
                              >
                                <FormGroup>
                                  <div
                                    className="fields"
                                  >
                                    <FormField
                                      width="three"
                                    >
                                      <div
                                        className="three wide field"
                                      >
                                        <Dropdown
                                          error={false}
                                          icon="map pin"
                                          isDisabled={false}
                                          isSearchable={false}
                                          isValid={false}
                                          label="Location"
                                          name="location"
                                          noResultsText="No results"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "text": "Barcelona",
                                                "value": "barcelona",
                                              },
                                              Object {
                                                "text": "Valencia",
                                                "value": "valencia",
                                              },
                                              Object {
                                                "text": "Madrid",
                                                "value": "madrid",
                                              },
                                              Object {
                                                "text": "Bilbao",
                                                "value": "bilbao",
                                              },
                                            ]
                                          }
                                          willOpenAbove={true}
                                        >
                                          <div
                                            className="dropdown-container"
                                          >
                                            <Icon
                                              color={null}
                                              hasBorder={false}
                                              isButton={false}
                                              isCircular={false}
                                              isColorInverted={false}
                                              isDisabled={false}
                                              isLabelLeft={false}
                                              labelText={null}
                                              labelWeight={null}
                                              name="map pin"
                                              path={null}
                                              size={null}
                                            >
                                              <i
                                                className="icon"
                                              >
                                                <svg
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              </i>
                                            </Icon>
                                            <Dropdown
                                              additionLabel="Add "
                                              additionPosition="top"
                                              closeOnBlur={true}
                                              deburr={false}
                                              defaultValue={null}
                                              disabled={false}
                                              icon={
                                                <Icon
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="caret down"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              minCharacters={1}
                                              noResultsMessage="No results"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              open={false}
                                              openOnFocus={true}
                                              options={
                                                Array [
                                                  Object {
                                                    "text": "Barcelona",
                                                    "value": "barcelona",
                                                  },
                                                  Object {
                                                    "text": "Valencia",
                                                    "value": "valencia",
                                                  },
                                                  Object {
                                                    "text": "Madrid",
                                                    "value": "madrid",
                                                  },
                                                  Object {
                                                    "text": "Bilbao",
                                                    "value": "bilbao",
                                                  },
                                                ]
                                              }
                                              renderLabel={[Function]}
                                              search={false}
                                              searchInput="text"
                                              selectOnBlur={false}
                                              selectOnNavigation={true}
                                              selection={true}
                                              upward={true}
                                              wrapSelection={true}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={false}
                                                className="ui selection upward dropdown"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                role="listbox"
                                                tabIndex={0}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="text"
                                                  role="alert"
                                                />
                                                <Icon
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="caret down"
                                                  onClick={[Function]}
                                                  path={null}
                                                  size={null}
                                                >
                                                  <i
                                                    className="icon"
                                                    onClick={[Function]}
                                                  >
                                                    <svg
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M20,8.5l-8,7-8-7Z"
                                                        fill="currentColor"
                                                      />
                                                    </svg>
                                                  </i>
                                                </Icon>
                                                <DropdownMenu
                                                  open={false}
                                                >
                                                  <div
                                                    className="menu transition"
                                                  >
                                                    <DropdownItem
                                                      active={false}
                                                      key="barcelona"
                                                      onClick={[Function]}
                                                      selected={true}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="Barcelona"
                                                      value="barcelona"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={true}
                                                        className="selected item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="Barcelona"
                                                        >
                                                          Barcelona
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                    <DropdownItem
                                                      active={false}
                                                      key="valencia"
                                                      onClick={[Function]}
                                                      selected={false}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="Valencia"
                                                      value="valencia"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={false}
                                                        className="item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="Valencia"
                                                        >
                                                          Valencia
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                    <DropdownItem
                                                      active={false}
                                                      key="madrid"
                                                      onClick={[Function]}
                                                      selected={false}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="Madrid"
                                                      value="madrid"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={false}
                                                        className="item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="Madrid"
                                                        >
                                                          Madrid
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                    <DropdownItem
                                                      active={false}
                                                      key="bilbao"
                                                      onClick={[Function]}
                                                      selected={false}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="Bilbao"
                                                      value="bilbao"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={false}
                                                        className="item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="Bilbao"
                                                        >
                                                          Bilbao
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                  </div>
                                                </DropdownMenu>
                                              </div>
                                            </Dropdown>
                                            <label
                                              onClick={[Function]}
                                            >
                                              Location
                                            </label>
                                          </div>
                                        </Dropdown>
                                      </div>
                                    </FormField>
                                    <FormField
                                      width="seven"
                                    >
                                      <div
                                        className="seven wide field"
                                      >
                                        <WithResponsive(DateRangePicker)
                                          endDatePlaceholderText="Check-out"
                                          getIsDayBlocked={[Function]}
                                          localeCode="ko"
                                          name="dates"
                                          onChange={[Function]}
                                          startDatePlaceholderText="Check-in"
                                          willOpenAbove={true}
                                        >
                                          <Responsive
                                            as={[Function]}
                                            endDatePlaceholderText="Check-out"
                                            getIsDayBlocked={[Function]}
                                            isUserOnMobile={false}
                                            localeCode="ko"
                                            name="dates"
                                            onChange={[Function]}
                                            onUpdate={[Function]}
                                            startDatePlaceholderText="Check-in"
                                            willOpenAbove={true}
                                            windowInnerWidth={1024}
                                          >
                                            <DateRangePicker
                                              displayFormat="DD/MM/YYYY"
                                              endDatePlaceholderText="Check-out"
                                              error={false}
                                              getIsDayBlocked={[Function]}
                                              isUserOnMobile={false}
                                              isValid={false}
                                              localeCode="ko"
                                              name="dates"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              startDatePlaceholderText="Check-in"
                                              willOpenAbove={true}
                                              windowInnerWidth={1024}
                                            >
                                              <InputController
                                                adaptOnChangeEvent={[Function]}
                                                error={false}
                                                icon={null}
                                                initialValue=""
                                                inputOnChangeFunctionName="onDatesChange"
                                                isFocused={false}
                                                isValid={false}
                                                label={null}
                                                mapValueToProps={[Function]}
                                                name="dates"
                                                onChange={[Function]}
                                              >
                                                <Input
                                                  className=""
                                                  iconPosition={null}
                                                  type="text"
                                                >
                                                  <div
                                                    className="ui input"
                                                  >
                                                    <DateRangePicker
                                                      customArrowIcon={
                                                        <Icon
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="arrow right"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      customInputIcon={
                                                        <Icon
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="calendar"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      daySize={52}
                                                      displayFormat="DD/MM/YYYY"
                                                      endDate={null}
                                                      endDateId="end_date_id_7"
                                                      endDatePlaceholderText="Check-out"
                                                      focusedInput={null}
                                                      hideKeyboardShortcutsPanel={true}
                                                      isDayBlocked={[Function]}
                                                      key=".2"
                                                      navNext={
                                                        <Icon
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="arrow right"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      navPrev={
                                                        <Icon
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="arrow left"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      onDatesChange={[Function]}
                                                      onFocusChange={[Function]}
                                                      openDirection="up"
                                                      startDate={null}
                                                      startDateId="start_date_id_8"
                                                      startDatePlaceholderText="Check-in"
                                                      withPortal={true}
                                                    >
                                                      <div />
                                                    </DateRangePicker>
                                                  </div>
                                                </Input>
                                              </InputController>
                                            </DateRangePicker>
                                          </Responsive>
                                        </WithResponsive(DateRangePicker)>
                                      </div>
                                    </FormField>
                                    <FormField
                                      width="three"
                                    >
                                      <div
                                        className="three wide field"
                                      >
                                        <Dropdown
                                          error={false}
                                          icon="users"
                                          isDisabled={false}
                                          isSearchable={false}
                                          isValid={false}
                                          label="Guests"
                                          name="guests"
                                          noResultsText="No results"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "text": "1",
                                                "value": "1",
                                              },
                                              Object {
                                                "text": "2",
                                                "value": "2",
                                              },
                                              Object {
                                                "text": "3",
                                                "value": "3",
                                              },
                                              Object {
                                                "text": "4",
                                                "value": "4",
                                              },
                                            ]
                                          }
                                          willOpenAbove={true}
                                        >
                                          <div
                                            className="dropdown-container"
                                          >
                                            <Icon
                                              color={null}
                                              hasBorder={false}
                                              isButton={false}
                                              isCircular={false}
                                              isColorInverted={false}
                                              isDisabled={false}
                                              isLabelLeft={false}
                                              labelText={null}
                                              labelWeight={null}
                                              name="users"
                                              path={null}
                                              size={null}
                                            >
                                              <i
                                                className="icon"
                                              >
                                                <svg
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M18.63,8.88h-.08a4,4,0,1,0-4.18,0h-.08a2.2,2.2,0,0,0-2.2,2.2v9.35a2.1,2.1,0,0,0,2.1,2.1h4.54a2.11,2.11,0,0,0,2.11-2.1V11.08A2.21,2.21,0,0,0,18.63,8.88Zm-5.18-3.4a3,3,0,1,1,3,3A3,3,0,0,1,13.45,5.48Zm6.39,15a1.11,1.11,0,0,1-1.11,1.1H14.19a1.1,1.1,0,0,1-1.1-1.1V11.08a1.2,1.2,0,0,1,1.2-1.2h4.34a1.21,1.21,0,0,1,1.21,1.2ZM9,11.89a3.27,3.27,0,1,0-3.77,0,2.21,2.21,0,0,0-2.09,2.19v6.24a2.12,2.12,0,0,0,2.11,2.11H9a2.11,2.11,0,0,0,2.1-2.11V14.08A2.21,2.21,0,0,0,9,11.89ZM7.13,7A2.27,2.27,0,1,1,4.87,9.24,2.27,2.27,0,0,1,7.13,7Zm3,13.35A1.11,1.11,0,0,1,9,21.43H5.27a1.11,1.11,0,0,1-1.11-1.11V14.08a1.21,1.21,0,0,1,1.21-1.2H8.9a1.2,1.2,0,0,1,1.2,1.2Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              </i>
                                            </Icon>
                                            <Dropdown
                                              additionLabel="Add "
                                              additionPosition="top"
                                              closeOnBlur={true}
                                              deburr={false}
                                              defaultValue={null}
                                              disabled={false}
                                              icon={
                                                <Icon
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="caret down"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              minCharacters={1}
                                              noResultsMessage="No results"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              open={false}
                                              openOnFocus={true}
                                              options={
                                                Array [
                                                  Object {
                                                    "text": "1",
                                                    "value": "1",
                                                  },
                                                  Object {
                                                    "text": "2",
                                                    "value": "2",
                                                  },
                                                  Object {
                                                    "text": "3",
                                                    "value": "3",
                                                  },
                                                  Object {
                                                    "text": "4",
                                                    "value": "4",
                                                  },
                                                ]
                                              }
                                              renderLabel={[Function]}
                                              search={false}
                                              searchInput="text"
                                              selectOnBlur={false}
                                              selectOnNavigation={true}
                                              selection={true}
                                              upward={true}
                                              wrapSelection={true}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-expanded={false}
                                                className="ui selection upward dropdown"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                role="listbox"
                                                tabIndex={0}
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="text"
                                                  role="alert"
                                                />
                                                <Icon
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="caret down"
                                                  onClick={[Function]}
                                                  path={null}
                                                  size={null}
                                                >
                                                  <i
                                                    className="icon"
                                                    onClick={[Function]}
                                                  >
                                                    <svg
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M20,8.5l-8,7-8-7Z"
                                                        fill="currentColor"
                                                      />
                                                    </svg>
                                                  </i>
                                                </Icon>
                                                <DropdownMenu
                                                  open={false}
                                                >
                                                  <div
                                                    className="menu transition"
                                                  >
                                                    <DropdownItem
                                                      active={false}
                                                      key="1"
                                                      onClick={[Function]}
                                                      selected={true}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="1"
                                                      value="1"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={true}
                                                        className="selected item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="1"
                                                        >
                                                          1
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                    <DropdownItem
                                                      active={false}
                                                      key="2"
                                                      onClick={[Function]}
                                                      selected={false}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="2"
                                                      value="2"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={false}
                                                        className="item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="2"
                                                        >
                                                          2
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                    <DropdownItem
                                                      active={false}
                                                      key="3"
                                                      onClick={[Function]}
                                                      selected={false}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="3"
                                                      value="3"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={false}
                                                        className="item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="3"
                                                        >
                                                          3
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                    <DropdownItem
                                                      active={false}
                                                      key="4"
                                                      onClick={[Function]}
                                                      selected={false}
                                                      style={
                                                        Object {
                                                          "pointerEvents": "all",
                                                        }
                                                      }
                                                      text="4"
                                                      value="4"
                                                    >
                                                      <div
                                                        aria-checked={false}
                                                        aria-selected={false}
                                                        className="item"
                                                        onClick={[Function]}
                                                        role="option"
                                                        style={
                                                          Object {
                                                            "pointerEvents": "all",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="text"
                                                          key="4"
                                                        >
                                                          4
                                                        </span>
                                                      </div>
                                                    </DropdownItem>
                                                  </div>
                                                </DropdownMenu>
                                              </div>
                                            </Dropdown>
                                            <label
                                              onClick={[Function]}
                                            >
                                              Guests
                                            </label>
                                          </div>
                                        </Dropdown>
                                      </div>
                                    </FormField>
                                    <FormField
                                      width="four"
                                    >
                                      <div
                                        className="four wide field"
                                      >
                                        <Button
                                          hasShadow={false}
                                          icon="search"
                                          isCompact={false}
                                          isDisabled={false}
                                          isLoading={false}
                                          isPositionedRight={false}
                                          isRounded={true}
                                          isSecondary={false}
                                          onClick={[Function]}
                                          size={null}
                                        >
                                          <Button
                                            as="button"
                                            circular={true}
                                            className=""
                                            compact={false}
                                            disabled={false}
                                            floated="left"
                                            loading={false}
                                            onClick={[Function]}
                                            secondary={false}
                                            size={null}
                                          >
                                            <button
                                              className="ui circular left floated button"
                                              onClick={[Function]}
                                              role="button"
                                            >
                                              <Icon
                                                color={null}
                                                hasBorder={false}
                                                isButton={false}
                                                isCircular={false}
                                                isColorInverted={false}
                                                isDisabled={false}
                                                isLabelLeft={false}
                                                labelText={null}
                                                labelWeight={null}
                                                name="search"
                                                path={null}
                                                size={null}
                                              >
                                                <i
                                                  className="icon"
                                                >
                                                  <svg
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </i>
                                              </Icon>
                                              Search
                                            </button>
                                          </Button>
                                        </Button>
                                      </div>
                                    </FormField>
                                  </div>
                                </FormGroup>
                              </form>
                            </Form>
                          </div>
                        </GridColumn>
                      </GridColumn>
                    </div>
                  </GridRow>
                </GridRow>
              </div>
            </Grid>
          </Grid>
        </div>
      </Container>
    </HorizontalGutters>
  </div>
</SearchBar>
`;

exports[`<SearchBar /> if \`props.isShowingSummary\` is true should render the right structure 1`] = `
<SearchBar
  className={null}
  dateRangePickerLocaleCode="ko"
  getIsDayBlocked={[Function]}
  guestsOptions={
    Array [
      Object {
        "text": "1",
        "value": "1",
      },
      Object {
        "text": "2",
        "value": "2",
      },
      Object {
        "text": "3",
        "value": "3",
      },
      Object {
        "text": "4",
        "value": "4",
      },
    ]
  }
  isDisplayedAsModal={false}
  isFixed={false}
  isShowingSummary={true}
  locationOptions={
    Array [
      Object {
        "text": "Barcelona",
        "value": "barcelona",
      },
      Object {
        "text": "Valencia",
        "value": "valencia",
      },
      Object {
        "text": "Madrid",
        "value": "madrid",
      },
      Object {
        "text": "Bilbao",
        "value": "bilbao",
      },
    ]
  }
  modalHeadingText="Check our availability"
  modalSummaryElement={null}
  onChangeInput={[Function]}
  onCloseModal={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon="search"
      isCompact={false}
      isDisabled={false}
      isLoading={false}
      isPositionedRight={false}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Search
    </Button>
  }
  summaryElement={null}
  willDropdownsOpenAbove={false}
>
  <div
    className="search-bar"
  >
    <Form
      as="form"
      onSubmit={[Function]}
    >
      <form
        className="ui form"
        onSubmit={[Function]}
      >
        <FormGroup>
          <div
            className="fields"
          >
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Icon
                  color={null}
                  hasBorder={false}
                  isButton={false}
                  isCircular={false}
                  isColorInverted={false}
                  isDisabled={true}
                  isLabelLeft={false}
                  labelText="Property Summary"
                  labelWeight={null}
                  name="home"
                  path={null}
                  size={null}
                >
                  <i
                    className="icon inverted grey has-label"
                  >
                    <svg
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M22.28,10.9,12.35,1a.52.52,0,0,0-.7,0L1.72,10.9a1.51,1.51,0,0,0,0,2.14,1.48,1.48,0,0,0,1.07.45,1.5,1.5,0,0,0,.8-.27v9.46a.5.5,0,0,0,.5.5H20a.51.51,0,0,0,.5-.5V13.29A1.55,1.55,0,0,0,22.28,13,1.48,1.48,0,0,0,22.72,12,1.5,1.5,0,0,0,22.28,10.9Zm-12,11.27V16.9h3.51v5.27Zm4.51,0V16.4a.5.5,0,0,0-.5-.5H9.8a.5.5,0,0,0-.5.5v5.78H4.59V12.32L12,4.9l7.51,7.52v9.76Zm6.76-9.85a.5.5,0,0,1-.73,0L12.36,3.84a.5.5,0,0,0-.71,0L3.16,12.33a.5.5,0,0,1-.73,0,.51.51,0,0,1,0-.72L12,2l9.57,9.59A.51.51,0,0,1,21.57,12.33Z"
                        fill="currentColor"
                      />
                    </svg>
                    <Paragraph
                      size="medium"
                      weight={null}
                    >
                      <p
                        className=""
                      >
                        Property Summary
                      </p>
                    </Paragraph>
                  </i>
                </Icon>
              </div>
            </FormField>
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Dropdown
                  error={false}
                  icon="map pin"
                  isDisabled={false}
                  isSearchable={false}
                  isValid={false}
                  label="Location"
                  name="location"
                  noResultsText="No results"
                  onBlur={[Function]}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "text": "Barcelona",
                        "value": "barcelona",
                      },
                      Object {
                        "text": "Valencia",
                        "value": "valencia",
                      },
                      Object {
                        "text": "Madrid",
                        "value": "madrid",
                      },
                      Object {
                        "text": "Bilbao",
                        "value": "bilbao",
                      },
                    ]
                  }
                  willOpenAbove={false}
                >
                  <div
                    className="dropdown-container"
                  >
                    <Icon
                      color={null}
                      hasBorder={false}
                      isButton={false}
                      isCircular={false}
                      isColorInverted={false}
                      isDisabled={false}
                      isLabelLeft={false}
                      labelText={null}
                      labelWeight={null}
                      name="map pin"
                      path={null}
                      size={null}
                    >
                      <i
                        className="icon"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                            fill="currentColor"
                          />
                        </svg>
                      </i>
                    </Icon>
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      closeOnBlur={true}
                      deburr={false}
                      defaultValue={null}
                      disabled={false}
                      icon={
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          path={null}
                          size={null}
                        />
                      }
                      minCharacters={1}
                      noResultsMessage="No results"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      open={false}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "text": "Barcelona",
                            "value": "barcelona",
                          },
                          Object {
                            "text": "Valencia",
                            "value": "valencia",
                          },
                          Object {
                            "text": "Madrid",
                            "value": "madrid",
                          },
                          Object {
                            "text": "Bilbao",
                            "value": "bilbao",
                          },
                        ]
                      }
                      renderLabel={[Function]}
                      search={false}
                      searchInput="text"
                      selectOnBlur={false}
                      selectOnNavigation={true}
                      selection={true}
                      upward={false}
                      wrapSelection={true}
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="ui selection dropdown"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        />
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          onClick={[Function]}
                          path={null}
                          size={null}
                        >
                          <i
                            className="icon"
                            onClick={[Function]}
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M20,8.5l-8,7-8-7Z"
                                fill="currentColor"
                              />
                            </svg>
                          </i>
                        </Icon>
                        <DropdownMenu
                          open={false}
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={false}
                              key="barcelona"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Barcelona"
                              value="barcelona"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={true}
                                className="selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Barcelona"
                                >
                                  Barcelona
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="valencia"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Valencia"
                              value="valencia"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Valencia"
                                >
                                  Valencia
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="madrid"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Madrid"
                              value="madrid"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Madrid"
                                >
                                  Madrid
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="bilbao"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Bilbao"
                              value="bilbao"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Bilbao"
                                >
                                  Bilbao
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                    <label
                      onClick={[Function]}
                    >
                      Location
                    </label>
                  </div>
                </Dropdown>
              </div>
            </FormField>
            <FormField
              width="seven"
            >
              <div
                className="seven wide field"
              >
                <WithResponsive(DateRangePicker)
                  endDatePlaceholderText="Check-out"
                  getIsDayBlocked={[Function]}
                  localeCode="ko"
                  name="dates"
                  onChange={[Function]}
                  startDatePlaceholderText="Check-in"
                  willOpenAbove={false}
                >
                  <Responsive
                    as={[Function]}
                    endDatePlaceholderText="Check-out"
                    getIsDayBlocked={[Function]}
                    isUserOnMobile={false}
                    localeCode="ko"
                    name="dates"
                    onChange={[Function]}
                    onUpdate={[Function]}
                    startDatePlaceholderText="Check-in"
                    willOpenAbove={false}
                    windowInnerWidth={1024}
                  >
                    <DateRangePicker
                      displayFormat="DD/MM/YYYY"
                      endDatePlaceholderText="Check-out"
                      error={false}
                      getIsDayBlocked={[Function]}
                      isUserOnMobile={false}
                      isValid={false}
                      localeCode="ko"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Check-in"
                      willOpenAbove={false}
                      windowInnerWidth={1024}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onDatesChange"
                        isFocused={false}
                        isValid={false}
                        label={null}
                        mapValueToProps={[Function]}
                        name="dates"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <DateRangePicker
                              customArrowIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              customInputIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="calendar"
                                  path={null}
                                  size={null}
                                />
                              }
                              daySize={52}
                              displayFormat="DD/MM/YYYY"
                              endDate={null}
                              endDateId="end_date_id_11"
                              endDatePlaceholderText="Check-out"
                              focusedInput={null}
                              hideKeyboardShortcutsPanel={true}
                              isDayBlocked={[Function]}
                              key=".2"
                              navNext={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              navPrev={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow left"
                                  path={null}
                                  size={null}
                                />
                              }
                              onDatesChange={[Function]}
                              onFocusChange={[Function]}
                              openDirection="down"
                              startDate={null}
                              startDateId="start_date_id_12"
                              startDatePlaceholderText="Check-in"
                              withPortal={true}
                            >
                              <div />
                            </DateRangePicker>
                          </div>
                        </Input>
                      </InputController>
                    </DateRangePicker>
                  </Responsive>
                </WithResponsive(DateRangePicker)>
              </div>
            </FormField>
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Dropdown
                  error={false}
                  icon="users"
                  isDisabled={false}
                  isSearchable={false}
                  isValid={false}
                  label="Guests"
                  name="guests"
                  noResultsText="No results"
                  onBlur={[Function]}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "text": "1",
                        "value": "1",
                      },
                      Object {
                        "text": "2",
                        "value": "2",
                      },
                      Object {
                        "text": "3",
                        "value": "3",
                      },
                      Object {
                        "text": "4",
                        "value": "4",
                      },
                    ]
                  }
                  willOpenAbove={false}
                >
                  <div
                    className="dropdown-container"
                  >
                    <Icon
                      color={null}
                      hasBorder={false}
                      isButton={false}
                      isCircular={false}
                      isColorInverted={false}
                      isDisabled={false}
                      isLabelLeft={false}
                      labelText={null}
                      labelWeight={null}
                      name="users"
                      path={null}
                      size={null}
                    >
                      <i
                        className="icon"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M18.63,8.88h-.08a4,4,0,1,0-4.18,0h-.08a2.2,2.2,0,0,0-2.2,2.2v9.35a2.1,2.1,0,0,0,2.1,2.1h4.54a2.11,2.11,0,0,0,2.11-2.1V11.08A2.21,2.21,0,0,0,18.63,8.88Zm-5.18-3.4a3,3,0,1,1,3,3A3,3,0,0,1,13.45,5.48Zm6.39,15a1.11,1.11,0,0,1-1.11,1.1H14.19a1.1,1.1,0,0,1-1.1-1.1V11.08a1.2,1.2,0,0,1,1.2-1.2h4.34a1.21,1.21,0,0,1,1.21,1.2ZM9,11.89a3.27,3.27,0,1,0-3.77,0,2.21,2.21,0,0,0-2.09,2.19v6.24a2.12,2.12,0,0,0,2.11,2.11H9a2.11,2.11,0,0,0,2.1-2.11V14.08A2.21,2.21,0,0,0,9,11.89ZM7.13,7A2.27,2.27,0,1,1,4.87,9.24,2.27,2.27,0,0,1,7.13,7Zm3,13.35A1.11,1.11,0,0,1,9,21.43H5.27a1.11,1.11,0,0,1-1.11-1.11V14.08a1.21,1.21,0,0,1,1.21-1.2H8.9a1.2,1.2,0,0,1,1.2,1.2Z"
                            fill="currentColor"
                          />
                        </svg>
                      </i>
                    </Icon>
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      closeOnBlur={true}
                      deburr={false}
                      defaultValue={null}
                      disabled={false}
                      icon={
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          path={null}
                          size={null}
                        />
                      }
                      minCharacters={1}
                      noResultsMessage="No results"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      open={false}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "text": "1",
                            "value": "1",
                          },
                          Object {
                            "text": "2",
                            "value": "2",
                          },
                          Object {
                            "text": "3",
                            "value": "3",
                          },
                          Object {
                            "text": "4",
                            "value": "4",
                          },
                        ]
                      }
                      renderLabel={[Function]}
                      search={false}
                      searchInput="text"
                      selectOnBlur={false}
                      selectOnNavigation={true}
                      selection={true}
                      upward={false}
                      wrapSelection={true}
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="ui selection dropdown"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        />
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          onClick={[Function]}
                          path={null}
                          size={null}
                        >
                          <i
                            className="icon"
                            onClick={[Function]}
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M20,8.5l-8,7-8-7Z"
                                fill="currentColor"
                              />
                            </svg>
                          </i>
                        </Icon>
                        <DropdownMenu
                          open={false}
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={false}
                              key="1"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="1"
                              value="1"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={true}
                                className="selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="1"
                                >
                                  1
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="2"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="2"
                              value="2"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="2"
                                >
                                  2
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="3"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="3"
                              value="3"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="3"
                                >
                                  3
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="4"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="4"
                              value="4"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="4"
                                >
                                  4
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                    <label
                      onClick={[Function]}
                    >
                      Guests
                    </label>
                  </div>
                </Dropdown>
              </div>
            </FormField>
            <FormField
              width="four"
            >
              <div
                className="four wide field"
              >
                <Button
                  hasShadow={false}
                  icon="search"
                  isCompact={false}
                  isDisabled={false}
                  isLoading={false}
                  isPositionedRight={false}
                  isRounded={true}
                  isSecondary={false}
                  onClick={[Function]}
                  size={null}
                >
                  <Button
                    as="button"
                    circular={true}
                    className=""
                    compact={false}
                    disabled={false}
                    floated="left"
                    loading={false}
                    onClick={[Function]}
                    secondary={false}
                    size={null}
                  >
                    <button
                      className="ui circular left floated button"
                      onClick={[Function]}
                      role="button"
                    >
                      <Icon
                        color={null}
                        hasBorder={false}
                        isButton={false}
                        isCircular={false}
                        isColorInverted={false}
                        isDisabled={false}
                        isLabelLeft={false}
                        labelText={null}
                        labelWeight={null}
                        name="search"
                        path={null}
                        size={null}
                      >
                        <i
                          className="icon"
                        >
                          <svg
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                              fill="currentColor"
                            />
                          </svg>
                        </i>
                      </Icon>
                      Search
                    </button>
                  </Button>
                </Button>
              </div>
            </FormField>
          </div>
        </FormGroup>
      </form>
    </Form>
  </div>
</SearchBar>
`;

exports[`<SearchBar /> if \`props.locationOptions\` is not passed should render the right structure 1`] = `
<SearchBar
  className={null}
  dateRangePickerLocaleCode="ko"
  getIsDayBlocked={[Function]}
  guestsOptions={
    Array [
      Object {
        "text": "1",
        "value": "1",
      },
      Object {
        "text": "2",
        "value": "2",
      },
      Object {
        "text": "3",
        "value": "3",
      },
      Object {
        "text": "4",
        "value": "4",
      },
    ]
  }
  isDisplayedAsModal={false}
  isFixed={false}
  isShowingSummary={false}
  locationOptions={null}
  modalHeadingText="Check our availability"
  modalSummaryElement={null}
  onChangeInput={[Function]}
  onCloseModal={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon="search"
      isCompact={false}
      isDisabled={false}
      isLoading={false}
      isPositionedRight={false}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Search
    </Button>
  }
  summaryElement={null}
  willDropdownsOpenAbove={false}
>
  <div
    className="search-bar"
  >
    <Form
      as="form"
      onSubmit={[Function]}
    >
      <form
        className="ui form"
        onSubmit={[Function]}
      >
        <FormGroup>
          <div
            className="fields"
          >
            <FormField
              width="seven"
            >
              <div
                className="seven wide field"
              >
                <WithResponsive(DateRangePicker)
                  endDatePlaceholderText="Check-out"
                  getIsDayBlocked={[Function]}
                  localeCode="ko"
                  name="dates"
                  onChange={[Function]}
                  startDatePlaceholderText="Check-in"
                  willOpenAbove={false}
                >
                  <Responsive
                    as={[Function]}
                    endDatePlaceholderText="Check-out"
                    getIsDayBlocked={[Function]}
                    isUserOnMobile={false}
                    localeCode="ko"
                    name="dates"
                    onChange={[Function]}
                    onUpdate={[Function]}
                    startDatePlaceholderText="Check-in"
                    willOpenAbove={false}
                    windowInnerWidth={1024}
                  >
                    <DateRangePicker
                      displayFormat="DD/MM/YYYY"
                      endDatePlaceholderText="Check-out"
                      error={false}
                      getIsDayBlocked={[Function]}
                      isUserOnMobile={false}
                      isValid={false}
                      localeCode="ko"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Check-in"
                      willOpenAbove={false}
                      windowInnerWidth={1024}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onDatesChange"
                        isFocused={false}
                        isValid={false}
                        label={null}
                        mapValueToProps={[Function]}
                        name="dates"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <DateRangePicker
                              customArrowIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              customInputIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="calendar"
                                  path={null}
                                  size={null}
                                />
                              }
                              daySize={52}
                              displayFormat="DD/MM/YYYY"
                              endDate={null}
                              endDateId="end_date_id_15"
                              endDatePlaceholderText="Check-out"
                              focusedInput={null}
                              hideKeyboardShortcutsPanel={true}
                              isDayBlocked={[Function]}
                              key=".2"
                              navNext={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              navPrev={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow left"
                                  path={null}
                                  size={null}
                                />
                              }
                              onDatesChange={[Function]}
                              onFocusChange={[Function]}
                              openDirection="down"
                              startDate={null}
                              startDateId="start_date_id_16"
                              startDatePlaceholderText="Check-in"
                              withPortal={true}
                            >
                              <div />
                            </DateRangePicker>
                          </div>
                        </Input>
                      </InputController>
                    </DateRangePicker>
                  </Responsive>
                </WithResponsive(DateRangePicker)>
              </div>
            </FormField>
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Dropdown
                  error={false}
                  icon="users"
                  isDisabled={false}
                  isSearchable={false}
                  isValid={false}
                  label="Guests"
                  name="guests"
                  noResultsText="No results"
                  onBlur={[Function]}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "text": "1",
                        "value": "1",
                      },
                      Object {
                        "text": "2",
                        "value": "2",
                      },
                      Object {
                        "text": "3",
                        "value": "3",
                      },
                      Object {
                        "text": "4",
                        "value": "4",
                      },
                    ]
                  }
                  willOpenAbove={false}
                >
                  <div
                    className="dropdown-container"
                  >
                    <Icon
                      color={null}
                      hasBorder={false}
                      isButton={false}
                      isCircular={false}
                      isColorInverted={false}
                      isDisabled={false}
                      isLabelLeft={false}
                      labelText={null}
                      labelWeight={null}
                      name="users"
                      path={null}
                      size={null}
                    >
                      <i
                        className="icon"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M18.63,8.88h-.08a4,4,0,1,0-4.18,0h-.08a2.2,2.2,0,0,0-2.2,2.2v9.35a2.1,2.1,0,0,0,2.1,2.1h4.54a2.11,2.11,0,0,0,2.11-2.1V11.08A2.21,2.21,0,0,0,18.63,8.88Zm-5.18-3.4a3,3,0,1,1,3,3A3,3,0,0,1,13.45,5.48Zm6.39,15a1.11,1.11,0,0,1-1.11,1.1H14.19a1.1,1.1,0,0,1-1.1-1.1V11.08a1.2,1.2,0,0,1,1.2-1.2h4.34a1.21,1.21,0,0,1,1.21,1.2ZM9,11.89a3.27,3.27,0,1,0-3.77,0,2.21,2.21,0,0,0-2.09,2.19v6.24a2.12,2.12,0,0,0,2.11,2.11H9a2.11,2.11,0,0,0,2.1-2.11V14.08A2.21,2.21,0,0,0,9,11.89ZM7.13,7A2.27,2.27,0,1,1,4.87,9.24,2.27,2.27,0,0,1,7.13,7Zm3,13.35A1.11,1.11,0,0,1,9,21.43H5.27a1.11,1.11,0,0,1-1.11-1.11V14.08a1.21,1.21,0,0,1,1.21-1.2H8.9a1.2,1.2,0,0,1,1.2,1.2Z"
                            fill="currentColor"
                          />
                        </svg>
                      </i>
                    </Icon>
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      closeOnBlur={true}
                      deburr={false}
                      defaultValue={null}
                      disabled={false}
                      icon={
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          path={null}
                          size={null}
                        />
                      }
                      minCharacters={1}
                      noResultsMessage="No results"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      open={false}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "text": "1",
                            "value": "1",
                          },
                          Object {
                            "text": "2",
                            "value": "2",
                          },
                          Object {
                            "text": "3",
                            "value": "3",
                          },
                          Object {
                            "text": "4",
                            "value": "4",
                          },
                        ]
                      }
                      renderLabel={[Function]}
                      search={false}
                      searchInput="text"
                      selectOnBlur={false}
                      selectOnNavigation={true}
                      selection={true}
                      upward={false}
                      wrapSelection={true}
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="ui selection dropdown"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        />
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          onClick={[Function]}
                          path={null}
                          size={null}
                        >
                          <i
                            className="icon"
                            onClick={[Function]}
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M20,8.5l-8,7-8-7Z"
                                fill="currentColor"
                              />
                            </svg>
                          </i>
                        </Icon>
                        <DropdownMenu
                          open={false}
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={false}
                              key="1"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="1"
                              value="1"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={true}
                                className="selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="1"
                                >
                                  1
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="2"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="2"
                              value="2"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="2"
                                >
                                  2
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="3"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="3"
                              value="3"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="3"
                                >
                                  3
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="4"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="4"
                              value="4"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="4"
                                >
                                  4
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                    <label
                      onClick={[Function]}
                    >
                      Guests
                    </label>
                  </div>
                </Dropdown>
              </div>
            </FormField>
            <FormField
              width="four"
            >
              <div
                className="four wide field"
              >
                <Button
                  hasShadow={false}
                  icon="search"
                  isCompact={false}
                  isDisabled={false}
                  isLoading={false}
                  isPositionedRight={false}
                  isRounded={true}
                  isSecondary={false}
                  onClick={[Function]}
                  size={null}
                >
                  <Button
                    as="button"
                    circular={true}
                    className=""
                    compact={false}
                    disabled={false}
                    floated="left"
                    loading={false}
                    onClick={[Function]}
                    secondary={false}
                    size={null}
                  >
                    <button
                      className="ui circular left floated button"
                      onClick={[Function]}
                      role="button"
                    >
                      <Icon
                        color={null}
                        hasBorder={false}
                        isButton={false}
                        isCircular={false}
                        isColorInverted={false}
                        isDisabled={false}
                        isLabelLeft={false}
                        labelText={null}
                        labelWeight={null}
                        name="search"
                        path={null}
                        size={null}
                      >
                        <i
                          className="icon"
                        >
                          <svg
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                              fill="currentColor"
                            />
                          </svg>
                        </i>
                      </Icon>
                      Search
                    </button>
                  </Button>
                </Button>
              </div>
            </FormField>
          </div>
        </FormGroup>
      </form>
    </Form>
  </div>
</SearchBar>
`;

exports[`<SearchBar /> if \`props.searchButton\` is passed should render the right children 1`] = `
<SearchBar
  className={null}
  dateRangePickerLocaleCode="ko"
  getIsDayBlocked={[Function]}
  guestsOptions={
    Array [
      Object {
        "text": "1",
        "value": "1",
      },
      Object {
        "text": "2",
        "value": "2",
      },
      Object {
        "text": "3",
        "value": "3",
      },
      Object {
        "text": "4",
        "value": "4",
      },
    ]
  }
  isDisplayedAsModal={false}
  isFixed={false}
  isShowingSummary={false}
  locationOptions={
    Array [
      Object {
        "text": "Barcelona",
        "value": "barcelona",
      },
      Object {
        "text": "Valencia",
        "value": "valencia",
      },
      Object {
        "text": "Madrid",
        "value": "madrid",
      },
      Object {
        "text": "Bilbao",
        "value": "bilbao",
      },
    ]
  }
  modalHeadingText="Check our availability"
  modalSummaryElement={null}
  onChangeInput={[Function]}
  onCloseModal={[Function]}
  onSubmit={[Function]}
  searchButton={<div />}
  summaryElement={null}
  willDropdownsOpenAbove={false}
>
  <div
    className="search-bar"
  >
    <Form
      as="form"
      onSubmit={[Function]}
    >
      <form
        className="ui form"
        onSubmit={[Function]}
      >
        <FormGroup>
          <div
            className="fields"
          >
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Dropdown
                  error={false}
                  icon="map pin"
                  isDisabled={false}
                  isSearchable={false}
                  isValid={false}
                  label="Location"
                  name="location"
                  noResultsText="No results"
                  onBlur={[Function]}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "text": "Barcelona",
                        "value": "barcelona",
                      },
                      Object {
                        "text": "Valencia",
                        "value": "valencia",
                      },
                      Object {
                        "text": "Madrid",
                        "value": "madrid",
                      },
                      Object {
                        "text": "Bilbao",
                        "value": "bilbao",
                      },
                    ]
                  }
                  willOpenAbove={false}
                >
                  <div
                    className="dropdown-container"
                  >
                    <Icon
                      color={null}
                      hasBorder={false}
                      isButton={false}
                      isCircular={false}
                      isColorInverted={false}
                      isDisabled={false}
                      isLabelLeft={false}
                      labelText={null}
                      labelWeight={null}
                      name="map pin"
                      path={null}
                      size={null}
                    >
                      <i
                        className="icon"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                            fill="currentColor"
                          />
                        </svg>
                      </i>
                    </Icon>
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      closeOnBlur={true}
                      deburr={false}
                      defaultValue={null}
                      disabled={false}
                      icon={
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          path={null}
                          size={null}
                        />
                      }
                      minCharacters={1}
                      noResultsMessage="No results"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      open={false}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "text": "Barcelona",
                            "value": "barcelona",
                          },
                          Object {
                            "text": "Valencia",
                            "value": "valencia",
                          },
                          Object {
                            "text": "Madrid",
                            "value": "madrid",
                          },
                          Object {
                            "text": "Bilbao",
                            "value": "bilbao",
                          },
                        ]
                      }
                      renderLabel={[Function]}
                      search={false}
                      searchInput="text"
                      selectOnBlur={false}
                      selectOnNavigation={true}
                      selection={true}
                      upward={false}
                      wrapSelection={true}
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="ui selection dropdown"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        />
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          onClick={[Function]}
                          path={null}
                          size={null}
                        >
                          <i
                            className="icon"
                            onClick={[Function]}
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M20,8.5l-8,7-8-7Z"
                                fill="currentColor"
                              />
                            </svg>
                          </i>
                        </Icon>
                        <DropdownMenu
                          open={false}
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={false}
                              key="barcelona"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Barcelona"
                              value="barcelona"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={true}
                                className="selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Barcelona"
                                >
                                  Barcelona
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="valencia"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Valencia"
                              value="valencia"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Valencia"
                                >
                                  Valencia
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="madrid"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Madrid"
                              value="madrid"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Madrid"
                                >
                                  Madrid
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="bilbao"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="Bilbao"
                              value="bilbao"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="Bilbao"
                                >
                                  Bilbao
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                    <label
                      onClick={[Function]}
                    >
                      Location
                    </label>
                  </div>
                </Dropdown>
              </div>
            </FormField>
            <FormField
              width="seven"
            >
              <div
                className="seven wide field"
              >
                <WithResponsive(DateRangePicker)
                  endDatePlaceholderText="Check-out"
                  getIsDayBlocked={[Function]}
                  localeCode="ko"
                  name="dates"
                  onChange={[Function]}
                  startDatePlaceholderText="Check-in"
                  willOpenAbove={false}
                >
                  <Responsive
                    as={[Function]}
                    endDatePlaceholderText="Check-out"
                    getIsDayBlocked={[Function]}
                    isUserOnMobile={false}
                    localeCode="ko"
                    name="dates"
                    onChange={[Function]}
                    onUpdate={[Function]}
                    startDatePlaceholderText="Check-in"
                    willOpenAbove={false}
                    windowInnerWidth={1024}
                  >
                    <DateRangePicker
                      displayFormat="DD/MM/YYYY"
                      endDatePlaceholderText="Check-out"
                      error={false}
                      getIsDayBlocked={[Function]}
                      isUserOnMobile={false}
                      isValid={false}
                      localeCode="ko"
                      name="dates"
                      onBlur={[Function]}
                      onChange={[Function]}
                      startDatePlaceholderText="Check-in"
                      willOpenAbove={false}
                      windowInnerWidth={1024}
                    >
                      <InputController
                        adaptOnChangeEvent={[Function]}
                        error={false}
                        icon={null}
                        initialValue=""
                        inputOnChangeFunctionName="onDatesChange"
                        isFocused={false}
                        isValid={false}
                        label={null}
                        mapValueToProps={[Function]}
                        name="dates"
                        onChange={[Function]}
                      >
                        <Input
                          className=""
                          iconPosition={null}
                          type="text"
                        >
                          <div
                            className="ui input"
                          >
                            <DateRangePicker
                              customArrowIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              customInputIcon={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="calendar"
                                  path={null}
                                  size={null}
                                />
                              }
                              daySize={52}
                              displayFormat="DD/MM/YYYY"
                              endDate={null}
                              endDateId="end_date_id_19"
                              endDatePlaceholderText="Check-out"
                              focusedInput={null}
                              hideKeyboardShortcutsPanel={true}
                              isDayBlocked={[Function]}
                              key=".2"
                              navNext={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow right"
                                  path={null}
                                  size={null}
                                />
                              }
                              navPrev={
                                <Icon
                                  color={null}
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="arrow left"
                                  path={null}
                                  size={null}
                                />
                              }
                              onDatesChange={[Function]}
                              onFocusChange={[Function]}
                              openDirection="down"
                              startDate={null}
                              startDateId="start_date_id_20"
                              startDatePlaceholderText="Check-in"
                              withPortal={true}
                            >
                              <div />
                            </DateRangePicker>
                          </div>
                        </Input>
                      </InputController>
                    </DateRangePicker>
                  </Responsive>
                </WithResponsive(DateRangePicker)>
              </div>
            </FormField>
            <FormField
              width="three"
            >
              <div
                className="three wide field"
              >
                <Dropdown
                  error={false}
                  icon="users"
                  isDisabled={false}
                  isSearchable={false}
                  isValid={false}
                  label="Guests"
                  name="guests"
                  noResultsText="No results"
                  onBlur={[Function]}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "text": "1",
                        "value": "1",
                      },
                      Object {
                        "text": "2",
                        "value": "2",
                      },
                      Object {
                        "text": "3",
                        "value": "3",
                      },
                      Object {
                        "text": "4",
                        "value": "4",
                      },
                    ]
                  }
                  willOpenAbove={false}
                >
                  <div
                    className="dropdown-container"
                  >
                    <Icon
                      color={null}
                      hasBorder={false}
                      isButton={false}
                      isCircular={false}
                      isColorInverted={false}
                      isDisabled={false}
                      isLabelLeft={false}
                      labelText={null}
                      labelWeight={null}
                      name="users"
                      path={null}
                      size={null}
                    >
                      <i
                        className="icon"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M18.63,8.88h-.08a4,4,0,1,0-4.18,0h-.08a2.2,2.2,0,0,0-2.2,2.2v9.35a2.1,2.1,0,0,0,2.1,2.1h4.54a2.11,2.11,0,0,0,2.11-2.1V11.08A2.21,2.21,0,0,0,18.63,8.88Zm-5.18-3.4a3,3,0,1,1,3,3A3,3,0,0,1,13.45,5.48Zm6.39,15a1.11,1.11,0,0,1-1.11,1.1H14.19a1.1,1.1,0,0,1-1.1-1.1V11.08a1.2,1.2,0,0,1,1.2-1.2h4.34a1.21,1.21,0,0,1,1.21,1.2ZM9,11.89a3.27,3.27,0,1,0-3.77,0,2.21,2.21,0,0,0-2.09,2.19v6.24a2.12,2.12,0,0,0,2.11,2.11H9a2.11,2.11,0,0,0,2.1-2.11V14.08A2.21,2.21,0,0,0,9,11.89ZM7.13,7A2.27,2.27,0,1,1,4.87,9.24,2.27,2.27,0,0,1,7.13,7Zm3,13.35A1.11,1.11,0,0,1,9,21.43H5.27a1.11,1.11,0,0,1-1.11-1.11V14.08a1.21,1.21,0,0,1,1.21-1.2H8.9a1.2,1.2,0,0,1,1.2,1.2Z"
                            fill="currentColor"
                          />
                        </svg>
                      </i>
                    </Icon>
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      closeOnBlur={true}
                      deburr={false}
                      defaultValue={null}
                      disabled={false}
                      icon={
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          path={null}
                          size={null}
                        />
                      }
                      minCharacters={1}
                      noResultsMessage="No results"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      open={false}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "text": "1",
                            "value": "1",
                          },
                          Object {
                            "text": "2",
                            "value": "2",
                          },
                          Object {
                            "text": "3",
                            "value": "3",
                          },
                          Object {
                            "text": "4",
                            "value": "4",
                          },
                        ]
                      }
                      renderLabel={[Function]}
                      search={false}
                      searchInput="text"
                      selectOnBlur={false}
                      selectOnNavigation={true}
                      selection={true}
                      upward={false}
                      wrapSelection={true}
                    >
                      <div
                        aria-disabled={false}
                        aria-expanded={false}
                        className="ui selection dropdown"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        />
                        <Icon
                          color={null}
                          hasBorder={false}
                          isButton={false}
                          isCircular={false}
                          isColorInverted={false}
                          isDisabled={false}
                          isLabelLeft={false}
                          labelText={null}
                          labelWeight={null}
                          name="caret down"
                          onClick={[Function]}
                          path={null}
                          size={null}
                        >
                          <i
                            className="icon"
                            onClick={[Function]}
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M20,8.5l-8,7-8-7Z"
                                fill="currentColor"
                              />
                            </svg>
                          </i>
                        </Icon>
                        <DropdownMenu
                          open={false}
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={false}
                              key="1"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="1"
                              value="1"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={true}
                                className="selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="1"
                                >
                                  1
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="2"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="2"
                              value="2"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="2"
                                >
                                  2
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="3"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="3"
                              value="3"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="3"
                                >
                                  3
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="4"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="4"
                              value="4"
                            >
                              <div
                                aria-checked={false}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="4"
                                >
                                  4
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                    <label
                      onClick={[Function]}
                    >
                      Guests
                    </label>
                  </div>
                </Dropdown>
              </div>
            </FormField>
            <FormField
              width="four"
            >
              <div
                className="four wide field"
              >
                <div />
              </div>
            </FormField>
          </div>
        </FormGroup>
      </form>
    </Form>
  </div>
</SearchBar>
`;
