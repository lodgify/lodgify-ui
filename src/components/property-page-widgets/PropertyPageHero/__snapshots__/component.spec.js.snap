// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PropertyPageHero if there are fewer than two images should render the right structure 1`] = `
<PropertyPageHero
  activeNavigationItemIndex={1}
  headerLogoSizes="a load of logo sizes"
  headerLogoSrc="src"
  headerLogoSrcSet="a load of logo src sets"
  headerLogoText="text"
  headerNavigationItems={
    Array [
      Object {
        "href": "/",
        "text": "Home",
      },
    ]
  }
  headerPrimaryCTA={
    Object {
      "onClick": [Function],
      "text": "Book now",
    }
  }
  images={
    Array [
      Object {
        "imageUrl": "🚞",
        "label": "Entrance",
      },
    ]
  }
  isUserOnMobile={false}
  propertyName={null}
  ratingNumber={null}
  secondaryButtonText="🐸"
>
  <Hero
    activeNavigationItemIndex={1}
    backgroundImageUrl="🚞"
    bottomOffset="85px"
    headerLogoSizes="a load of logo sizes"
    headerLogoSrc="src"
    headerLogoSrcSet="a load of logo src sets"
    headerLogoText="text"
    headerNavigationItems={
      Array [
        Object {
          "href": "/",
          "text": "Home",
        },
      ]
    }
    headerPrimaryCTA={
      Object {
        "onClick": [Function],
        "text": "Book now",
      }
    }
    isFixedSearchBarDisplayed={true}
    placeholderBackgroundImageUrl={null}
  >
    <FullBleed
      bottomOffset="85px"
      hasGradient={true}
      imageUrl="🚞"
      placeholderImageUrl={null}
      sizes={null}
      srcSet={null}
    >
      <Segment
        className="full-bleed has-gradient has-children"
        style={
          Object {
            "--full-bleed-bottom-offset": "85px",
          }
        }
        vertical={true}
      >
        <div
          className="ui vertical segment full-bleed has-gradient has-children"
          style={
            Object {
              "--full-bleed-bottom-offset": "85px",
            }
          }
        >
          <ResponsiveImage
            alternativeText="Image Widget"
            hasRoundedCorners={false}
            imageHeight={null}
            imageNotFoundLabelText="Image not found!"
            imageTitle="Image Title"
            imageUrl="🚞"
            imageWidth={null}
            isAvatar={false}
            isCircular={false}
            isFluid={true}
            label={null}
            placeholderImageUrl={null}
            sizes={null}
            srcSet={null}
          >
            <figure
              className="responsive-image is-fluid"
            >
              <Image
                alt="Image Widget"
                as="img"
                avatar={false}
                fluid={true}
                onLoad={[Function]}
                sizes={null}
                src="🚞"
                srcSet={null}
                title="Image Title"
                ui={true}
              >
                <img
                  alt="Image Widget"
                  className="ui fluid image"
                  onLoad={[Function]}
                  sizes={null}
                  src="🚞"
                  srcSet={null}
                  title="Image Title"
                />
              </Image>
            </figure>
          </ResponsiveImage>
          <Header
            activeNavigationItemIndex={1}
            isBackgroundFilled={false}
            logoHref="/"
            logoSizes="a load of logo sizes"
            logoSrc="src"
            logoSrcSet="a load of logo src sets"
            logoText="text"
            navigationItems={
              Array [
                Object {
                  "href": "/",
                  "text": "Home",
                },
              ]
            }
            primaryCTA={
              Object {
                "onClick": [Function],
                "text": "Book now",
              }
            }
          >
            <header
              className="is-opaque"
            >
              <HorizontalGutters
                as={[Function]}
                borderless={true}
                text={true}
              >
                <Container
                  as={[Function]}
                  borderless={true}
                  text={true}
                >
                  <Menu
                    borderless={true}
                    className="ui text container"
                  >
                    <div
                      className="ui borderless ui text container menu"
                    >
                      <MenuItem
                        href="/"
                        link={true}
                      >
                        <a
                          className="link item"
                          href="/"
                          onClick={[Function]}
                        >
                          <Image
                            alt="text"
                            as="img"
                            sizes="a load of logo sizes"
                            src="src"
                            srcSet="a load of logo src sets"
                            ui={true}
                          >
                            <img
                              alt="text"
                              className="ui image"
                              sizes="a load of logo sizes"
                              src="src"
                              srcSet="a load of logo src sets"
                            />
                          </Image>
                        </a>
                      </MenuItem>
                      <MenuMenu
                        position="right"
                      >
                        <div
                          className="right menu"
                        >
                          <MenuItem
                            active={false}
                            href="/"
                            key="Home0"
                            link={true}
                          >
                            <a
                              className="link item"
                              href="/"
                              onClick={[Function]}
                            >
                              Home
                            </a>
                          </MenuItem>
                          <MenuItem
                            className="no-underline"
                            link={true}
                          >
                            <div
                              className="link item no-underline"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isLoading={false}
                                isPositionedRight={false}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                <Button
                                  as="button"
                                  circular={true}
                                  className=""
                                  compact={false}
                                  disabled={false}
                                  floated="left"
                                  loading={false}
                                  onClick={[Function]}
                                  secondary={false}
                                  size={null}
                                >
                                  <button
                                    className="ui circular left floated button"
                                    onClick={[Function]}
                                    role="button"
                                  >
                                    Book now
                                  </button>
                                </Button>
                              </Button>
                            </div>
                          </MenuItem>
                        </div>
                      </MenuMenu>
                    </div>
                  </Menu>
                </Container>
              </HorizontalGutters>
            </header>
          </Header>
        </div>
      </Segment>
    </FullBleed>
  </Hero>
</PropertyPageHero>
`;

exports[`PropertyPageHero should render the right structure 1`] = `
<PropertyPageHero
  activeNavigationItemIndex={1}
  headerLogoSizes="a load of logo sizes"
  headerLogoSrc="src"
  headerLogoSrcSet="a load of logo src sets"
  headerLogoText="text"
  headerNavigationItems={
    Array [
      Object {
        "href": "/",
        "text": "Home",
      },
    ]
  }
  headerPrimaryCTA={
    Object {
      "onClick": [Function],
      "text": "Book now",
    }
  }
  images={
    Array [
      Object {
        "imageUrl": "🚞",
        "label": "Entrance",
      },
      Object {
        "imageUrl": "🚞",
        "label": "Kitchen",
      },
    ]
  }
  isUserOnMobile={false}
  propertyName={null}
  ratingNumber={null}
  secondaryButtonText="🐸"
>
  <Hero
    activeNavigationItemIndex={1}
    backgroundImageUrl="🚞"
    bottomOffset="85px"
    headerLogoSizes="a load of logo sizes"
    headerLogoSrc="src"
    headerLogoSrcSet="a load of logo src sets"
    headerLogoText="text"
    headerNavigationItems={
      Array [
        Object {
          "href": "/",
          "text": "Home",
        },
      ]
    }
    headerPrimaryCTA={
      Object {
        "onClick": [Function],
        "text": "Book now",
      }
    }
    isFixedSearchBarDisplayed={true}
    placeholderBackgroundImageUrl={null}
  >
    <FullBleed
      bottomOffset="85px"
      hasGradient={true}
      imageUrl="🚞"
      placeholderImageUrl={null}
      sizes={null}
      srcSet={null}
    >
      <Segment
        className="full-bleed has-gradient has-children"
        style={
          Object {
            "--full-bleed-bottom-offset": "85px",
          }
        }
        vertical={true}
      >
        <div
          className="ui vertical segment full-bleed has-gradient has-children"
          style={
            Object {
              "--full-bleed-bottom-offset": "85px",
            }
          }
        >
          <ResponsiveImage
            alternativeText="Image Widget"
            hasRoundedCorners={false}
            imageHeight={null}
            imageNotFoundLabelText="Image not found!"
            imageTitle="Image Title"
            imageUrl="🚞"
            imageWidth={null}
            isAvatar={false}
            isCircular={false}
            isFluid={true}
            label={null}
            placeholderImageUrl={null}
            sizes={null}
            srcSet={null}
          >
            <figure
              className="responsive-image is-fluid"
            >
              <Image
                alt="Image Widget"
                as="img"
                avatar={false}
                fluid={true}
                onLoad={[Function]}
                sizes={null}
                src="🚞"
                srcSet={null}
                title="Image Title"
                ui={true}
              >
                <img
                  alt="Image Widget"
                  className="ui fluid image"
                  onLoad={[Function]}
                  sizes={null}
                  src="🚞"
                  srcSet={null}
                  title="Image Title"
                />
              </Image>
            </figure>
          </ResponsiveImage>
          <Header
            activeNavigationItemIndex={1}
            isBackgroundFilled={false}
            logoHref="/"
            logoSizes="a load of logo sizes"
            logoSrc="src"
            logoSrcSet="a load of logo src sets"
            logoText="text"
            navigationItems={
              Array [
                Object {
                  "href": "/",
                  "text": "Home",
                },
              ]
            }
            primaryCTA={
              Object {
                "onClick": [Function],
                "text": "Book now",
              }
            }
          >
            <header
              className="is-opaque"
            >
              <HorizontalGutters
                as={[Function]}
                borderless={true}
                text={true}
              >
                <Container
                  as={[Function]}
                  borderless={true}
                  text={true}
                >
                  <Menu
                    borderless={true}
                    className="ui text container"
                  >
                    <div
                      className="ui borderless ui text container menu"
                    >
                      <MenuItem
                        href="/"
                        link={true}
                      >
                        <a
                          className="link item"
                          href="/"
                          onClick={[Function]}
                        >
                          <Image
                            alt="text"
                            as="img"
                            sizes="a load of logo sizes"
                            src="src"
                            srcSet="a load of logo src sets"
                            ui={true}
                          >
                            <img
                              alt="text"
                              className="ui image"
                              sizes="a load of logo sizes"
                              src="src"
                              srcSet="a load of logo src sets"
                            />
                          </Image>
                        </a>
                      </MenuItem>
                      <MenuMenu
                        position="right"
                      >
                        <div
                          className="right menu"
                        >
                          <MenuItem
                            active={false}
                            href="/"
                            key="Home0"
                            link={true}
                          >
                            <a
                              className="link item"
                              href="/"
                              onClick={[Function]}
                            >
                              Home
                            </a>
                          </MenuItem>
                          <MenuItem
                            className="no-underline"
                            link={true}
                          >
                            <div
                              className="link item no-underline"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isLoading={false}
                                isPositionedRight={false}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                <Button
                                  as="button"
                                  circular={true}
                                  className=""
                                  compact={false}
                                  disabled={false}
                                  floated="left"
                                  loading={false}
                                  onClick={[Function]}
                                  secondary={false}
                                  size={null}
                                >
                                  <button
                                    className="ui circular left floated button"
                                    onClick={[Function]}
                                    role="button"
                                  >
                                    Book now
                                  </button>
                                </Button>
                              </Button>
                            </div>
                          </MenuItem>
                        </div>
                      </MenuMenu>
                    </div>
                  </Menu>
                </Container>
              </HorizontalGutters>
            </header>
          </Header>
          <FlexContainer
            alignContent={null}
            alignItems="flex-end"
            flexDirection={null}
            flexWrap={null}
            justifyContent={null}
          >
            <div
              className="flex-container"
              style={
                Object {
                  "alignContent": null,
                  "alignItems": "flex-end",
                  "display": "flex",
                  "flexDirection": null,
                  "flexGrow": "1",
                  "flexWrap": null,
                  "height": "100%",
                  "justifyContent": null,
                }
              }
            >
              <HorizontalGutters>
                <Container>
                  <div
                    className="ui container"
                  >
                    <Gallery
                      heading={null}
                      images={
                        Array [
                          Object {
                            "imageUrl": "🚞",
                            "label": "Entrance",
                          },
                          Object {
                            "imageUrl": "🚞",
                            "label": "Kitchen",
                          },
                        ]
                      }
                      trigger={
                        <Button
                          hasShadow={false}
                          icon="placeholder"
                          isCompact={true}
                          isDisabled={false}
                          isLoading={false}
                          isPositionedRight={true}
                          isRounded={false}
                          isSecondary={true}
                          onClick={[Function]}
                          size={null}
                        >
                          🐸
                        </Button>
                      }
                    >
                      <Modal
                        hasCloseIcon={true}
                        hasPadding={true}
                        hasRoundedCorners={false}
                        header={null}
                        isFullscreen={true}
                        onClose={[Function]}
                        size="tiny"
                        trigger={
                          <Button
                            hasShadow={false}
                            icon="placeholder"
                            isCompact={true}
                            isDisabled={false}
                            isLoading={false}
                            isPositionedRight={true}
                            isRounded={false}
                            isSecondary={true}
                            onClick={[Function]}
                            size={null}
                          >
                            🐸
                          </Button>
                        }
                      >
                        <Modal
                          className="has-padding"
                          closeIcon={
                            <Icon
                              color={null}
                              hasBorder={false}
                              isButton={false}
                              isCircular={false}
                              isColorInverted={false}
                              isDisabled={false}
                              isLabelLeft={false}
                              labelText={null}
                              labelWeight={null}
                              name="close"
                              path={null}
                              size={null}
                            />
                          }
                          closeOnDimmerClick={true}
                          closeOnDocumentClick={false}
                          dimmer="inverted"
                          eventPool="Modal"
                          onClose={[Function]}
                          size="fullscreen"
                          trigger={
                            <Button
                              hasShadow={false}
                              icon="placeholder"
                              isCompact={true}
                              isDisabled={false}
                              isLoading={false}
                              isPositionedRight={true}
                              isRounded={false}
                              isSecondary={true}
                              onClick={[Function]}
                              size={null}
                            >
                              🐸
                            </Button>
                          }
                        >
                          <Portal
                            className="ui inverted page modals dimmer transition visible active"
                            closeOnDocumentClick={false}
                            closeOnEscape={true}
                            closeOnRootNodeClick={true}
                            eventPool="Modal"
                            mountNode={<body />}
                            onClose={[Function]}
                            onMount={[Function]}
                            onOpen={[Function]}
                            onUnmount={[Function]}
                            openOnTriggerClick={true}
                            trigger={
                              <Button
                                hasShadow={false}
                                icon="placeholder"
                                isCompact={true}
                                isDisabled={false}
                                isLoading={false}
                                isPositionedRight={true}
                                isRounded={false}
                                isSecondary={true}
                                onClick={[Function]}
                                size={null}
                              >
                                🐸
                              </Button>
                            }
                          >
                            <Ref
                              innerRef={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon="placeholder"
                                isCompact={true}
                                isDisabled={false}
                                isLoading={false}
                                isPositionedRight={true}
                                isRounded={false}
                                isSecondary={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                size={null}
                              >
                                <Button
                                  as="button"
                                  circular={false}
                                  className=""
                                  compact={true}
                                  disabled={false}
                                  floated="right"
                                  loading={false}
                                  onClick={[Function]}
                                  secondary={true}
                                  size={null}
                                >
                                  <button
                                    className="ui compact secondary right floated button"
                                    onClick={[Function]}
                                    role="button"
                                  >
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="placeholder"
                                      path={null}
                                      size={null}
                                    >
                                      <i
                                        className="icon"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M21.58,22.08H2.42a.5.5,0,0,1-.5-.5V2.42a.5.5,0,0,1,.5-.5H21.58a.5.5,0,0,1,.5.5V21.58A.5.5,0,0,1,21.58,22.08Zm-18.66-1H21.08V16.54H2.92Zm1.53-5.54H21.08V13.93L14.91,7.76l-2.42,2.41,1.43,1.43a.5.5,0,0,1,0,.71.51.51,0,0,1-.71,0L10.45,9.54Zm-1.53,0h.16a.65.65,0,0,1,.1-.15l6.91-6.91a.5.5,0,0,1,.71,0l1,1L14.56,6.7a.48.48,0,0,1,.7,0l5.82,5.82V2.92H2.92ZM6.37,8.61a2,2,0,1,1,2-2A2,2,0,0,1,6.37,8.61Zm0-3a1,1,0,1,0,1,1A1,1,0,0,0,6.37,5.65Z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </i>
                                    </Icon>
                                    🐸
                                  </button>
                                </Button>
                              </Button>
                            </Ref>
                          </Portal>
                        </Modal>
                      </Modal>
                    </Gallery>
                  </div>
                </Container>
              </HorizontalGutters>
            </div>
          </FlexContainer>
          <Divider
            className=""
            hasLine={false}
            size="medium"
          >
            <Divider
              className=""
              hidden={true}
              section={false}
            >
              <div
                className="ui hidden divider"
              />
            </Divider>
          </Divider>
        </div>
      </Segment>
    </FullBleed>
  </Hero>
</PropertyPageHero>
`;
