// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PropertyPageSearchBar /> if \`isShowingPlaceholder\` === true should have the right structure 1`] = `
<PropertyPageSearchBar
  datesInputOnFocusChange={[Function]}
  getIsDayBlocked={[Function]}
  isFixed={true}
  isShowingPlaceholder={true}
  modalTrigger={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isOutlined={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  onChangeInput={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isOutlined={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  summaryLocationName="Location"
  summaryPeriodText="per night"
  summaryPricePerPeriod="250€"
  summaryPricePerPeriodPrefix="morf"
  summaryPropertyName="Property"
  summaryRatingNumber={4.5}
>
  <div
    className="property-page-searchbar"
  >
    <ShowOn
      computer={true}
      mobile={false}
      parent="div"
      parentProps={Object {}}
      tablet={false}
      widescreen={true}
    >
      <div
        className="show-on-computer show-on-widescreen"
      >
        <SearchBar
          className={null}
          datesCheckInLabel="Check in"
          datesCheckOutLabel="Check out"
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          guestsInputLabel="Guests"
          isDisplayedAsModal={false}
          isFixed={true}
          isStackable={false}
          locationInputLabel="Location"
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={null}
          onChangeInput={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isOutlined={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={true}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              pricePerPeriodPrefix="morf"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willLocationDropdownOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Summary
                    areOnlyNightPriceAndRatingDisplayed={false}
                    isShowingPlaceholder={true}
                    locationName="Location"
                    periodText="per night"
                    pricePerPeriod="250€"
                    pricePerPeriodPrefix="morf"
                    propertyName="Property"
                    ratingNumber={4.5}
                  >
                    <SegmentGroup
                      className="is-summary"
                      compact={true}
                    >
                      <div
                        className="ui compact segments is-summary"
                      >
                        <Segment>
                          <div
                            className="ui segment"
                          >
                            <Heading
                              className={null}
                              hasMargin={true}
                              isColorInverted={false}
                              size="medium"
                              textAlign={null}
                            >
                              <Header
                                as="h3"
                                className=""
                                inverted={false}
                                textAlign={null}
                              >
                                <h3
                                  className="ui header"
                                >
                                  Property
                                </h3>
                              </Header>
                            </Heading>
                          </div>
                        </Segment>
                        <SegmentGroup
                          className="horizontal-wrap"
                          horizontal={true}
                        >
                          <div
                            className="ui horizontal segments horizontal-wrap"
                          >
                            <Segment
                              className="is-location-name"
                              title="Location"
                            >
                              <div
                                className="ui segment is-location-name"
                                title="Location"
                              >
                                Location
                                <Icon
                                  className={null}
                                  color="primary"
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="map pin"
                                  path={null}
                                  size="small"
                                >
                                  <i
                                    className="icon primary small"
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                              </div>
                            </Segment>
                            <div
                              className="inline-placeholder-wrapper"
                            >
                              <TextPlaceholder
                                isFluid={true}
                                length="full"
                              >
                                <div
                                  className="placeholder text full fluid"
                                />
                              </TextPlaceholder>
                              <TextPlaceholder
                                isFluid={true}
                                length="full"
                              >
                                <div
                                  className="placeholder text full fluid"
                                />
                              </TextPlaceholder>
                            </div>
                          </div>
                        </SegmentGroup>
                      </div>
                    </SegmentGroup>
                  </Summary>
                  <ShowOn
                    computer={true}
                    mobile={false}
                    parent="div"
                    parentProps={Object {}}
                    tablet={false}
                    widescreen={true}
                  >
                    <div
                      className="show-on-computer show-on-widescreen"
                    >
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <form
                          className="ui form"
                          onSubmit={[Function]}
                        >
                          <SearchFields
                            className={null}
                            datesCheckInLabel="Check in"
                            datesCheckOutLabel="Check out"
                            datesInputOnFocusChange={[Function]}
                            getIsDayBlocked={[Function]}
                            guestsInputLabel="Guests"
                            isDisplayedAsModal={false}
                            isFixed={true}
                            isStackable={false}
                            locationInputLabel="Location"
                            locationOptions={null}
                            modalHeadingText="Check our availability"
                            modalSummaryElement={null}
                            onChangeInput={[Function]}
                            onInputChange={[Function]}
                            onSubmit={[Function]}
                            searchButton={
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            }
                            summaryElement={
                              <Summary
                                areOnlyNightPriceAndRatingDisplayed={false}
                                isShowingPlaceholder={true}
                                locationName="Location"
                                periodText="per night"
                                pricePerPeriod="250€"
                                pricePerPeriodPrefix="morf"
                                propertyName="Property"
                                ratingNumber={4.5}
                              />
                            }
                            willLocationDropdownOpenAbove={false}
                          >
                            <div
                              className="inputs-container"
                            >
                              <div
                                className="input-container dates-input-container"
                              >
                                <WithResponsive(DateRangePicker)
                                  endDatePlaceholderText="Check out"
                                  getIsDayBlocked={[Function]}
                                  name="dates"
                                  onChange={[Function]}
                                  onFocusChange={[Function]}
                                  startDatePlaceholderText="Check in"
                                  willOpenAbove={false}
                                >
                                  <Responsive
                                    as={[Function]}
                                    endDatePlaceholderText="Check out"
                                    getIsDayBlocked={[Function]}
                                    getWidth={[Function]}
                                    isUserOnMobile={false}
                                    name="dates"
                                    onChange={[Function]}
                                    onFocusChange={[Function]}
                                    onUpdate={[Function]}
                                    startDatePlaceholderText="Check in"
                                    willOpenAbove={false}
                                    windowInnerWidth={1024}
                                  >
                                    <DateRangePicker
                                      displayFormat="DD/MM/YYYY"
                                      endDatePlaceholderText="Check out"
                                      error={false}
                                      getIsDayBlocked={[Function]}
                                      isCalendarIconDisplayed={true}
                                      isLoading={false}
                                      isUserOnMobile={false}
                                      isValid={false}
                                      localeCode="en"
                                      name="dates"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocusChange={[Function]}
                                      startDatePlaceholderText="Check in"
                                      willOpenAbove={false}
                                      windowInnerWidth={1024}
                                    >
                                      <InputController
                                        adaptOnChangeEvent={[Function]}
                                        error={false}
                                        icon={null}
                                        inputOnChangeFunctionName="onDatesChange"
                                        isCompact={false}
                                        isFluid={false}
                                        isFocused={false}
                                        isValid={false}
                                        mapValueToProps={[Function]}
                                        name="dates"
                                        onChange={[Function]}
                                        value={null}
                                      >
                                        <Input
                                          className=""
                                          fluid={false}
                                          iconPosition={null}
                                          name="dates"
                                          type="text"
                                          value={null}
                                        >
                                          <div
                                            className="ui input"
                                          >
                                            <DateRangePicker
                                              customArrowIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              customInputIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="calendar"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              daySize={52}
                                              disabled={false}
                                              displayFormat="DD/MM/YYYY"
                                              endDate={null}
                                              endDatePlaceholderText="Check out"
                                              focusedInput={null}
                                              hideKeyboardShortcutsPanel={true}
                                              isDayBlocked={[Function]}
                                              key=".0"
                                              navNext={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              navPrev={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow left"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              onDatesChange={[Function]}
                                              onFocusChange={[Function]}
                                              openDirection="down"
                                              showClearDates={true}
                                              startDate={null}
                                              startDatePlaceholderText="Check in"
                                              withPortal={false}
                                            >
                                              <div />
                                            </DateRangePicker>
                                          </div>
                                        </Input>
                                      </InputController>
                                      <div />
                                    </DateRangePicker>
                                  </Responsive>
                                </WithResponsive(DateRangePicker)>
                              </div>
                              <div
                                className="input-container guests-input-container"
                              >
                                <CounterDropdown
                                  counterName="guests"
                                  dropdownLabel="Guests"
                                  onChange={[Function]}
                                  willOpenAbove={false}
                                >
                                  <Popup
                                    className="counter-dropdown"
                                    content={
                                      <FlexContainer
                                        alignContent={null}
                                        alignItems={null}
                                        className={null}
                                        flexDirection="row"
                                        flexWrap={null}
                                        justifyContent="space-between"
                                      >
                                        <Counter
                                          min={0}
                                          name="guests"
                                          onChange={[Function]}
                                          renderValue={[Function]}
                                          value={0}
                                        />
                                      </FlexContainer>
                                    }
                                    data-testid="counter-dropdown"
                                    disabled={false}
                                    eventsEnabled={true}
                                    offset={0}
                                    on="click"
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    open={false}
                                    pinned={false}
                                    position="bottom left"
                                    text="Guests"
                                    trigger={
                                      <div
                                        className="dropdown-container"
                                        role="button"
                                      >
                                        <div
                                          className="ui selection dropdown counter-dropdown-trigger"
                                        >
                                          <span>
                                            Guests
                                          </span>
                                          <Icon
                                            className={null}
                                            color={null}
                                            hasBorder={false}
                                            isButton={false}
                                            isCircular={false}
                                            isColorInverted={false}
                                            isDisabled={false}
                                            isLabelLeft={false}
                                            labelText={null}
                                            labelWeight={null}
                                            name="caret down"
                                            path={null}
                                            size={null}
                                          />
                                        </div>
                                      </div>
                                    }
                                  >
                                    <Portal
                                      closeOnDocumentClick={true}
                                      closeOnEscape={true}
                                      closeOnTriggerClick={true}
                                      eventPool="default"
                                      onClose={[Function]}
                                      onMount={[Function]}
                                      onOpen={[Function]}
                                      onUnmount={[Function]}
                                      open={false}
                                      openOnTriggerClick={true}
                                      trigger={
                                        <div
                                          className="dropdown-container"
                                          role="button"
                                        >
                                          <div
                                            className="ui selection dropdown counter-dropdown-trigger"
                                          >
                                            <span>
                                              Guests
                                            </span>
                                            <Icon
                                              className={null}
                                              color={null}
                                              hasBorder={false}
                                              isButton={false}
                                              isCircular={false}
                                              isColorInverted={false}
                                              isDisabled={false}
                                              isLabelLeft={false}
                                              labelText={null}
                                              labelWeight={null}
                                              name="caret down"
                                              path={null}
                                              size={null}
                                            />
                                          </div>
                                        </div>
                                      }
                                      triggerRef={
                                        Object {
                                          "current": <div
                                            class="dropdown-container"
                                            role="button"
                                          >
                                            <div
                                              class="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <i
                                                class="icon"
                                              >
                                                <svg
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M20,8.5l-8,7-8-7Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              </i>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <Ref
                                        innerRef={[Function]}
                                      >
                                        <RefFindNode
                                          innerRef={[Function]}
                                        >
                                          <div
                                            className="dropdown-container"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            role="button"
                                          >
                                            <div
                                              className="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <Icon
                                                className={null}
                                                color={null}
                                                hasBorder={false}
                                                isButton={false}
                                                isCircular={false}
                                                isColorInverted={false}
                                                isDisabled={false}
                                                isLabelLeft={false}
                                                labelText={null}
                                                labelWeight={null}
                                                name="caret down"
                                                path={null}
                                                size={null}
                                              >
                                                <i
                                                  className="icon"
                                                >
                                                  <svg
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M20,8.5l-8,7-8-7Z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </i>
                                              </Icon>
                                            </div>
                                          </div>
                                        </RefFindNode>
                                      </Ref>
                                    </Portal>
                                  </Popup>
                                </CounterDropdown>
                              </div>
                              <div
                                className="button-container"
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  <Button
                                    as="button"
                                    basic={false}
                                    circular={true}
                                    className=""
                                    compact={false}
                                    disabled={false}
                                    floated="right"
                                    fluid={false}
                                    loading={false}
                                    onClick={[Function]}
                                    secondary={false}
                                    size={null}
                                    type="button"
                                  >
                                    <Ref
                                      innerRef={
                                        Object {
                                          "current": <button
                                            class="ui circular right floated button"
                                            type="button"
                                          >
                                            Check our availability
                                          </button>,
                                        }
                                      }
                                    >
                                      <RefFindNode
                                        innerRef={
                                          Object {
                                            "current": <button
                                              class="ui circular right floated button"
                                              type="button"
                                            >
                                              Check our availability
                                            </button>,
                                          }
                                        }
                                      >
                                        <button
                                          className="ui circular right floated button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Check our availability
                                        </button>
                                      </RefFindNode>
                                    </Ref>
                                  </Button>
                                </Button>
                              </div>
                            </div>
                          </SearchFields>
                        </form>
                      </Form>
                    </div>
                  </ShowOn>
                  <ShowOn
                    computer={false}
                    mobile={true}
                    parent="div"
                    parentProps={Object {}}
                    tablet={true}
                    widescreen={false}
                  >
                    <div
                      className="show-on-mobile show-on-tablet"
                    >
                      <SearchModal
                        className={null}
                        datesCheckInLabel="Check in"
                        datesCheckOutLabel="Check out"
                        datesInputOnFocusChange={[Function]}
                        getIsDayBlocked={[Function]}
                        guestsInputLabel="Guests"
                        isDisplayedAsModal={false}
                        isFixed={true}
                        isModalOpen={false}
                        isStackable={false}
                        locationInputLabel="Location"
                        locationOptions={null}
                        modalHeadingText="Check our availability"
                        modalSummaryElement={null}
                        onChangeInput={[Function]}
                        onInputChange={[Function]}
                        onSubmit={[Function]}
                        searchButton={
                          <Button
                            hasShadow={false}
                            icon={null}
                            isCompact={false}
                            isDisabled={false}
                            isFluid={false}
                            isFormSubmit={false}
                            isLoading={false}
                            isOutlined={false}
                            isPositionedRight={true}
                            isRounded={true}
                            isSecondary={false}
                            onClick={[Function]}
                            size={null}
                          >
                            Check our availability
                          </Button>
                        }
                        summaryElement={
                          <Summary
                            areOnlyNightPriceAndRatingDisplayed={false}
                            isShowingPlaceholder={true}
                            locationName="Location"
                            periodText="per night"
                            pricePerPeriod="250€"
                            pricePerPeriodPrefix="morf"
                            propertyName="Property"
                            ratingNumber={4.5}
                          />
                        }
                        willLocationDropdownOpenAbove={false}
                      >
                        <Modal
                          className={null}
                          hasCloseIcon={true}
                          hasPadding={true}
                          hasRoundedCorners={false}
                          header={
                            <Heading
                              className={null}
                              hasMargin={true}
                              isColorInverted={false}
                              size="small"
                              textAlign={null}
                            >
                              Check our availability
                            </Heading>
                          }
                          isFullscreen={true}
                          isOpen={false}
                          onClose={[Function]}
                          size="tiny"
                          trigger={
                            <div
                              data-test-id="search-bar-search-modal-trigger"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            </div>
                          }
                        >
                          <Modal
                            centered={true}
                            className="has-padding"
                            closeIcon={
                              <Icon
                                className={null}
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="close"
                                path={null}
                                size={null}
                              />
                            }
                            closeOnDimmerClick={true}
                            closeOnDocumentClick={false}
                            dimmer="inverted"
                            eventPool="Modal"
                            onClose={[Function]}
                            open={false}
                            size="fullscreen"
                            trigger={
                              <div
                                data-test-id="search-bar-search-modal-trigger"
                                onClick={[Function]}
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  Check our availability
                                </Button>
                              </div>
                            }
                          >
                            <Portal
                              closeOnDocumentClick={false}
                              closeOnEscape={true}
                              eventPool="Modal"
                              mountNode={<body />}
                              onClose={[Function]}
                              onMount={[Function]}
                              onOpen={[Function]}
                              onUnmount={[Function]}
                              open={false}
                              openOnTriggerClick={true}
                              trigger={
                                <div
                                  data-test-id="search-bar-search-modal-trigger"
                                  onClick={[Function]}
                                >
                                  <Button
                                    hasShadow={false}
                                    icon={null}
                                    isCompact={false}
                                    isDisabled={false}
                                    isFluid={false}
                                    isFormSubmit={false}
                                    isLoading={false}
                                    isOutlined={false}
                                    isPositionedRight={true}
                                    isRounded={true}
                                    isSecondary={false}
                                    onClick={[Function]}
                                    size={null}
                                  >
                                    Check our availability
                                  </Button>
                                </div>
                              }
                            >
                              <Ref
                                innerRef={[Function]}
                              >
                                <RefFindNode
                                  innerRef={[Function]}
                                >
                                  <div
                                    data-test-id="search-bar-search-modal-trigger"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                  >
                                    <Button
                                      hasShadow={false}
                                      icon={null}
                                      isCompact={false}
                                      isDisabled={false}
                                      isFluid={false}
                                      isFormSubmit={false}
                                      isLoading={false}
                                      isOutlined={false}
                                      isPositionedRight={true}
                                      isRounded={true}
                                      isSecondary={false}
                                      onClick={[Function]}
                                      size={null}
                                    >
                                      <Button
                                        as="button"
                                        basic={false}
                                        circular={true}
                                        className=""
                                        compact={false}
                                        disabled={false}
                                        floated="right"
                                        fluid={false}
                                        loading={false}
                                        onClick={[Function]}
                                        secondary={false}
                                        size={null}
                                        type="button"
                                      >
                                        <Ref
                                          innerRef={
                                            Object {
                                              "current": <button
                                                class="ui circular right floated button"
                                                type="button"
                                              >
                                                Check our availability
                                              </button>,
                                            }
                                          }
                                        >
                                          <RefFindNode
                                            innerRef={
                                              Object {
                                                "current": <button
                                                  class="ui circular right floated button"
                                                  type="button"
                                                >
                                                  Check our availability
                                                </button>,
                                              }
                                            }
                                          >
                                            <button
                                              className="ui circular right floated button"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Check our availability
                                            </button>
                                          </RefFindNode>
                                        </Ref>
                                      </Button>
                                    </Button>
                                  </div>
                                </RefFindNode>
                              </Ref>
                            </Portal>
                          </Modal>
                        </Modal>
                      </SearchModal>
                    </div>
                  </ShowOn>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
    <ShowOn
      computer={false}
      mobile={true}
      parent="div"
      parentProps={Object {}}
      tablet={true}
      widescreen={false}
    >
      <div
        className="show-on-mobile show-on-tablet"
      >
        <SearchBar
          className={null}
          datesCheckInLabel="Check in"
          datesCheckOutLabel="Check out"
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          guestsInputLabel="Guests"
          isDisplayedAsModal={false}
          isFixed={true}
          isStackable={false}
          locationInputLabel="Location"
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={true}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              pricePerPeriodPrefix="morf"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          onChangeInput={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isOutlined={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={true}
              isShowingPlaceholder={true}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              pricePerPeriodPrefix="morf"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willLocationDropdownOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Summary
                    areOnlyNightPriceAndRatingDisplayed={true}
                    isShowingPlaceholder={true}
                    locationName="Location"
                    periodText="per night"
                    pricePerPeriod="250€"
                    pricePerPeriodPrefix="morf"
                    propertyName="Property"
                    ratingNumber={4.5}
                  >
                    <SegmentGroup
                      className="is-summary"
                      compact={true}
                    >
                      <div
                        className="ui compact segments is-summary"
                      >
                        <SegmentGroup
                          className="horizontal-wrap"
                          horizontal={false}
                        >
                          <div
                            className="ui segments horizontal-wrap"
                          >
                            <div
                              className="placeholder-wrapper"
                            >
                              <TextPlaceholder
                                isFluid={true}
                                length="medium"
                              >
                                <div
                                  className="placeholder text medium fluid"
                                />
                              </TextPlaceholder>
                              <TextPlaceholder
                                isFluid={true}
                                length="short"
                              >
                                <div
                                  className="placeholder text short fluid"
                                />
                              </TextPlaceholder>
                            </div>
                          </div>
                        </SegmentGroup>
                      </div>
                    </SegmentGroup>
                  </Summary>
                  <ShowOn
                    computer={true}
                    mobile={false}
                    parent="div"
                    parentProps={Object {}}
                    tablet={false}
                    widescreen={true}
                  >
                    <div
                      className="show-on-computer show-on-widescreen"
                    >
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <form
                          className="ui form"
                          onSubmit={[Function]}
                        >
                          <SearchFields
                            className={null}
                            datesCheckInLabel="Check in"
                            datesCheckOutLabel="Check out"
                            datesInputOnFocusChange={[Function]}
                            getIsDayBlocked={[Function]}
                            guestsInputLabel="Guests"
                            isDisplayedAsModal={false}
                            isFixed={true}
                            isStackable={false}
                            locationInputLabel="Location"
                            locationOptions={null}
                            modalHeadingText="Check our availability"
                            modalSummaryElement={
                              <Summary
                                areOnlyNightPriceAndRatingDisplayed={false}
                                isShowingPlaceholder={true}
                                locationName="Location"
                                periodText="per night"
                                pricePerPeriod="250€"
                                pricePerPeriodPrefix="morf"
                                propertyName="Property"
                                ratingNumber={4.5}
                              />
                            }
                            onChangeInput={[Function]}
                            onInputChange={[Function]}
                            onSubmit={[Function]}
                            searchButton={
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            }
                            summaryElement={
                              <Summary
                                areOnlyNightPriceAndRatingDisplayed={true}
                                isShowingPlaceholder={true}
                                locationName="Location"
                                periodText="per night"
                                pricePerPeriod="250€"
                                pricePerPeriodPrefix="morf"
                                propertyName="Property"
                                ratingNumber={4.5}
                              />
                            }
                            willLocationDropdownOpenAbove={false}
                          >
                            <div
                              className="inputs-container"
                            >
                              <div
                                className="input-container dates-input-container"
                              >
                                <WithResponsive(DateRangePicker)
                                  endDatePlaceholderText="Check out"
                                  getIsDayBlocked={[Function]}
                                  name="dates"
                                  onChange={[Function]}
                                  onFocusChange={[Function]}
                                  startDatePlaceholderText="Check in"
                                  willOpenAbove={false}
                                >
                                  <Responsive
                                    as={[Function]}
                                    endDatePlaceholderText="Check out"
                                    getIsDayBlocked={[Function]}
                                    getWidth={[Function]}
                                    isUserOnMobile={false}
                                    name="dates"
                                    onChange={[Function]}
                                    onFocusChange={[Function]}
                                    onUpdate={[Function]}
                                    startDatePlaceholderText="Check in"
                                    willOpenAbove={false}
                                    windowInnerWidth={1024}
                                  >
                                    <DateRangePicker
                                      displayFormat="DD/MM/YYYY"
                                      endDatePlaceholderText="Check out"
                                      error={false}
                                      getIsDayBlocked={[Function]}
                                      isCalendarIconDisplayed={true}
                                      isLoading={false}
                                      isUserOnMobile={false}
                                      isValid={false}
                                      localeCode="en"
                                      name="dates"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocusChange={[Function]}
                                      startDatePlaceholderText="Check in"
                                      willOpenAbove={false}
                                      windowInnerWidth={1024}
                                    >
                                      <InputController
                                        adaptOnChangeEvent={[Function]}
                                        error={false}
                                        icon={null}
                                        inputOnChangeFunctionName="onDatesChange"
                                        isCompact={false}
                                        isFluid={false}
                                        isFocused={false}
                                        isValid={false}
                                        mapValueToProps={[Function]}
                                        name="dates"
                                        onChange={[Function]}
                                        value={null}
                                      >
                                        <Input
                                          className=""
                                          fluid={false}
                                          iconPosition={null}
                                          name="dates"
                                          type="text"
                                          value={null}
                                        >
                                          <div
                                            className="ui input"
                                          >
                                            <DateRangePicker
                                              customArrowIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              customInputIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="calendar"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              daySize={52}
                                              disabled={false}
                                              displayFormat="DD/MM/YYYY"
                                              endDate={null}
                                              endDatePlaceholderText="Check out"
                                              focusedInput={null}
                                              hideKeyboardShortcutsPanel={true}
                                              isDayBlocked={[Function]}
                                              key=".0"
                                              navNext={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              navPrev={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow left"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              onDatesChange={[Function]}
                                              onFocusChange={[Function]}
                                              openDirection="down"
                                              showClearDates={true}
                                              startDate={null}
                                              startDatePlaceholderText="Check in"
                                              withPortal={false}
                                            >
                                              <div />
                                            </DateRangePicker>
                                          </div>
                                        </Input>
                                      </InputController>
                                      <div />
                                    </DateRangePicker>
                                  </Responsive>
                                </WithResponsive(DateRangePicker)>
                              </div>
                              <div
                                className="input-container guests-input-container"
                              >
                                <CounterDropdown
                                  counterName="guests"
                                  dropdownLabel="Guests"
                                  onChange={[Function]}
                                  willOpenAbove={false}
                                >
                                  <Popup
                                    className="counter-dropdown"
                                    content={
                                      <FlexContainer
                                        alignContent={null}
                                        alignItems={null}
                                        className={null}
                                        flexDirection="row"
                                        flexWrap={null}
                                        justifyContent="space-between"
                                      >
                                        <Counter
                                          min={0}
                                          name="guests"
                                          onChange={[Function]}
                                          renderValue={[Function]}
                                          value={0}
                                        />
                                      </FlexContainer>
                                    }
                                    data-testid="counter-dropdown"
                                    disabled={false}
                                    eventsEnabled={true}
                                    offset={0}
                                    on="click"
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    open={false}
                                    pinned={false}
                                    position="bottom left"
                                    text="Guests"
                                    trigger={
                                      <div
                                        className="dropdown-container"
                                        role="button"
                                      >
                                        <div
                                          className="ui selection dropdown counter-dropdown-trigger"
                                        >
                                          <span>
                                            Guests
                                          </span>
                                          <Icon
                                            className={null}
                                            color={null}
                                            hasBorder={false}
                                            isButton={false}
                                            isCircular={false}
                                            isColorInverted={false}
                                            isDisabled={false}
                                            isLabelLeft={false}
                                            labelText={null}
                                            labelWeight={null}
                                            name="caret down"
                                            path={null}
                                            size={null}
                                          />
                                        </div>
                                      </div>
                                    }
                                  >
                                    <Portal
                                      closeOnDocumentClick={true}
                                      closeOnEscape={true}
                                      closeOnTriggerClick={true}
                                      eventPool="default"
                                      onClose={[Function]}
                                      onMount={[Function]}
                                      onOpen={[Function]}
                                      onUnmount={[Function]}
                                      open={false}
                                      openOnTriggerClick={true}
                                      trigger={
                                        <div
                                          className="dropdown-container"
                                          role="button"
                                        >
                                          <div
                                            className="ui selection dropdown counter-dropdown-trigger"
                                          >
                                            <span>
                                              Guests
                                            </span>
                                            <Icon
                                              className={null}
                                              color={null}
                                              hasBorder={false}
                                              isButton={false}
                                              isCircular={false}
                                              isColorInverted={false}
                                              isDisabled={false}
                                              isLabelLeft={false}
                                              labelText={null}
                                              labelWeight={null}
                                              name="caret down"
                                              path={null}
                                              size={null}
                                            />
                                          </div>
                                        </div>
                                      }
                                      triggerRef={
                                        Object {
                                          "current": <div
                                            class="dropdown-container"
                                            role="button"
                                          >
                                            <div
                                              class="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <i
                                                class="icon"
                                              >
                                                <svg
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M20,8.5l-8,7-8-7Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              </i>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <Ref
                                        innerRef={[Function]}
                                      >
                                        <RefFindNode
                                          innerRef={[Function]}
                                        >
                                          <div
                                            className="dropdown-container"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            role="button"
                                          >
                                            <div
                                              className="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <Icon
                                                className={null}
                                                color={null}
                                                hasBorder={false}
                                                isButton={false}
                                                isCircular={false}
                                                isColorInverted={false}
                                                isDisabled={false}
                                                isLabelLeft={false}
                                                labelText={null}
                                                labelWeight={null}
                                                name="caret down"
                                                path={null}
                                                size={null}
                                              >
                                                <i
                                                  className="icon"
                                                >
                                                  <svg
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M20,8.5l-8,7-8-7Z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </i>
                                              </Icon>
                                            </div>
                                          </div>
                                        </RefFindNode>
                                      </Ref>
                                    </Portal>
                                  </Popup>
                                </CounterDropdown>
                              </div>
                              <div
                                className="button-container"
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  <Button
                                    as="button"
                                    basic={false}
                                    circular={true}
                                    className=""
                                    compact={false}
                                    disabled={false}
                                    floated="right"
                                    fluid={false}
                                    loading={false}
                                    onClick={[Function]}
                                    secondary={false}
                                    size={null}
                                    type="button"
                                  >
                                    <Ref
                                      innerRef={
                                        Object {
                                          "current": <button
                                            class="ui circular right floated button"
                                            type="button"
                                          >
                                            Check our availability
                                          </button>,
                                        }
                                      }
                                    >
                                      <RefFindNode
                                        innerRef={
                                          Object {
                                            "current": <button
                                              class="ui circular right floated button"
                                              type="button"
                                            >
                                              Check our availability
                                            </button>,
                                          }
                                        }
                                      >
                                        <button
                                          className="ui circular right floated button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Check our availability
                                        </button>
                                      </RefFindNode>
                                    </Ref>
                                  </Button>
                                </Button>
                              </div>
                            </div>
                          </SearchFields>
                        </form>
                      </Form>
                    </div>
                  </ShowOn>
                  <ShowOn
                    computer={false}
                    mobile={true}
                    parent="div"
                    parentProps={Object {}}
                    tablet={true}
                    widescreen={false}
                  >
                    <div
                      className="show-on-mobile show-on-tablet"
                    >
                      <SearchModal
                        className={null}
                        datesCheckInLabel="Check in"
                        datesCheckOutLabel="Check out"
                        datesInputOnFocusChange={[Function]}
                        getIsDayBlocked={[Function]}
                        guestsInputLabel="Guests"
                        isDisplayedAsModal={false}
                        isFixed={true}
                        isModalOpen={false}
                        isStackable={false}
                        locationInputLabel="Location"
                        locationOptions={null}
                        modalHeadingText="Check our availability"
                        modalSummaryElement={
                          <Summary
                            areOnlyNightPriceAndRatingDisplayed={false}
                            isShowingPlaceholder={true}
                            locationName="Location"
                            periodText="per night"
                            pricePerPeriod="250€"
                            pricePerPeriodPrefix="morf"
                            propertyName="Property"
                            ratingNumber={4.5}
                          />
                        }
                        onChangeInput={[Function]}
                        onInputChange={[Function]}
                        onSubmit={[Function]}
                        searchButton={
                          <Button
                            hasShadow={false}
                            icon={null}
                            isCompact={false}
                            isDisabled={false}
                            isFluid={false}
                            isFormSubmit={false}
                            isLoading={false}
                            isOutlined={false}
                            isPositionedRight={true}
                            isRounded={true}
                            isSecondary={false}
                            onClick={[Function]}
                            size={null}
                          >
                            Check our availability
                          </Button>
                        }
                        summaryElement={
                          <Summary
                            areOnlyNightPriceAndRatingDisplayed={true}
                            isShowingPlaceholder={true}
                            locationName="Location"
                            periodText="per night"
                            pricePerPeriod="250€"
                            pricePerPeriodPrefix="morf"
                            propertyName="Property"
                            ratingNumber={4.5}
                          />
                        }
                        willLocationDropdownOpenAbove={false}
                      >
                        <Modal
                          className={null}
                          hasCloseIcon={true}
                          hasPadding={true}
                          hasRoundedCorners={false}
                          header={
                            <Summary
                              areOnlyNightPriceAndRatingDisplayed={false}
                              isShowingPlaceholder={true}
                              locationName="Location"
                              periodText="per night"
                              pricePerPeriod="250€"
                              pricePerPeriodPrefix="morf"
                              propertyName="Property"
                              ratingNumber={4.5}
                            />
                          }
                          isFullscreen={true}
                          isOpen={false}
                          onClose={[Function]}
                          size="tiny"
                          trigger={
                            <div
                              data-test-id="search-bar-search-modal-trigger"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            </div>
                          }
                        >
                          <Modal
                            centered={true}
                            className="has-padding"
                            closeIcon={
                              <Icon
                                className={null}
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="close"
                                path={null}
                                size={null}
                              />
                            }
                            closeOnDimmerClick={true}
                            closeOnDocumentClick={false}
                            dimmer="inverted"
                            eventPool="Modal"
                            onClose={[Function]}
                            open={false}
                            size="fullscreen"
                            trigger={
                              <div
                                data-test-id="search-bar-search-modal-trigger"
                                onClick={[Function]}
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  Check our availability
                                </Button>
                              </div>
                            }
                          >
                            <Portal
                              closeOnDocumentClick={false}
                              closeOnEscape={true}
                              eventPool="Modal"
                              mountNode={<body />}
                              onClose={[Function]}
                              onMount={[Function]}
                              onOpen={[Function]}
                              onUnmount={[Function]}
                              open={false}
                              openOnTriggerClick={true}
                              trigger={
                                <div
                                  data-test-id="search-bar-search-modal-trigger"
                                  onClick={[Function]}
                                >
                                  <Button
                                    hasShadow={false}
                                    icon={null}
                                    isCompact={false}
                                    isDisabled={false}
                                    isFluid={false}
                                    isFormSubmit={false}
                                    isLoading={false}
                                    isOutlined={false}
                                    isPositionedRight={true}
                                    isRounded={true}
                                    isSecondary={false}
                                    onClick={[Function]}
                                    size={null}
                                  >
                                    Check our availability
                                  </Button>
                                </div>
                              }
                            >
                              <Ref
                                innerRef={[Function]}
                              >
                                <RefFindNode
                                  innerRef={[Function]}
                                >
                                  <div
                                    data-test-id="search-bar-search-modal-trigger"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                  >
                                    <Button
                                      hasShadow={false}
                                      icon={null}
                                      isCompact={false}
                                      isDisabled={false}
                                      isFluid={false}
                                      isFormSubmit={false}
                                      isLoading={false}
                                      isOutlined={false}
                                      isPositionedRight={true}
                                      isRounded={true}
                                      isSecondary={false}
                                      onClick={[Function]}
                                      size={null}
                                    >
                                      <Button
                                        as="button"
                                        basic={false}
                                        circular={true}
                                        className=""
                                        compact={false}
                                        disabled={false}
                                        floated="right"
                                        fluid={false}
                                        loading={false}
                                        onClick={[Function]}
                                        secondary={false}
                                        size={null}
                                        type="button"
                                      >
                                        <Ref
                                          innerRef={
                                            Object {
                                              "current": <button
                                                class="ui circular right floated button"
                                                type="button"
                                              >
                                                Check our availability
                                              </button>,
                                            }
                                          }
                                        >
                                          <RefFindNode
                                            innerRef={
                                              Object {
                                                "current": <button
                                                  class="ui circular right floated button"
                                                  type="button"
                                                >
                                                  Check our availability
                                                </button>,
                                              }
                                            }
                                          >
                                            <button
                                              className="ui circular right floated button"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Check our availability
                                            </button>
                                          </RefFindNode>
                                        </Ref>
                                      </Button>
                                    </Button>
                                  </div>
                                </RefFindNode>
                              </Ref>
                            </Portal>
                          </Modal>
                        </Modal>
                      </SearchModal>
                    </div>
                  </ShowOn>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
  </div>
</PropertyPageSearchBar>
`;

exports[`<PropertyPageSearchBar /> should have the right structure 1`] = `
<PropertyPageSearchBar
  datesInputOnFocusChange={[Function]}
  getIsDayBlocked={[Function]}
  isFixed={true}
  isShowingPlaceholder={false}
  modalTrigger={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isOutlined={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  onChangeInput={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isOutlined={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  summaryLocationName="Location"
  summaryPeriodText="per night"
  summaryPricePerPeriod="250€"
  summaryPricePerPeriodPrefix="morf"
  summaryPropertyName="Property"
  summaryRatingNumber={4.5}
>
  <div
    className="property-page-searchbar"
  >
    <ShowOn
      computer={true}
      mobile={false}
      parent="div"
      parentProps={Object {}}
      tablet={false}
      widescreen={true}
    >
      <div
        className="show-on-computer show-on-widescreen"
      >
        <SearchBar
          className={null}
          datesCheckInLabel="Check in"
          datesCheckOutLabel="Check out"
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          guestsInputLabel="Guests"
          isDisplayedAsModal={false}
          isFixed={true}
          isStackable={false}
          locationInputLabel="Location"
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={null}
          onChangeInput={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isOutlined={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={false}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              pricePerPeriodPrefix="morf"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willLocationDropdownOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Summary
                    areOnlyNightPriceAndRatingDisplayed={false}
                    isShowingPlaceholder={false}
                    locationName="Location"
                    periodText="per night"
                    pricePerPeriod="250€"
                    pricePerPeriodPrefix="morf"
                    propertyName="Property"
                    ratingNumber={4.5}
                  >
                    <SegmentGroup
                      className="is-summary"
                      compact={true}
                    >
                      <div
                        className="ui compact segments is-summary"
                      >
                        <Segment>
                          <div
                            className="ui segment"
                          >
                            <Heading
                              className={null}
                              hasMargin={true}
                              isColorInverted={false}
                              size="medium"
                              textAlign={null}
                            >
                              <Header
                                as="h3"
                                className=""
                                inverted={false}
                                textAlign={null}
                              >
                                <h3
                                  className="ui header"
                                >
                                  Property
                                </h3>
                              </Header>
                            </Heading>
                          </div>
                        </Segment>
                        <SegmentGroup
                          className="horizontal-wrap"
                          horizontal={true}
                        >
                          <div
                            className="ui horizontal segments horizontal-wrap"
                          >
                            <Segment
                              className="is-location-name"
                              title="Location"
                            >
                              <div
                                className="ui segment is-location-name"
                                title="Location"
                              >
                                Location
                                <Icon
                                  className={null}
                                  color="primary"
                                  hasBorder={false}
                                  isButton={false}
                                  isCircular={false}
                                  isColorInverted={false}
                                  isDisabled={false}
                                  isLabelLeft={false}
                                  labelText={null}
                                  labelWeight={null}
                                  name="map pin"
                                  path={null}
                                  size="small"
                                >
                                  <i
                                    className="icon primary small"
                                  >
                                    <svg
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </i>
                                </Icon>
                              </div>
                            </Segment>
                            <Segment
                              className="is-rating"
                            >
                              <div
                                className="ui segment is-rating"
                              >
                                <Rating
                                  iconSize="tiny"
                                  isShowingNumeral={true}
                                  ratingNumber={4.5}
                                >
                                  4.5
                                  <Rating
                                    clearable="auto"
                                    disabled={true}
                                    maxRating={5}
                                    rating={5}
                                    size="tiny"
                                  >
                                    <div
                                      className="ui tiny disabled rating"
                                      onMouseLeave={[Function]}
                                      role="radiogroup"
                                      tabIndex={0}
                                    >
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={1}
                                        aria-setsize={5}
                                        as="i"
                                        index={0}
                                        key="0"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={1}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={2}
                                        aria-setsize={5}
                                        as="i"
                                        index={1}
                                        key="1"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={2}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={3}
                                        aria-setsize={5}
                                        as="i"
                                        index={2}
                                        key="2"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={3}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={4}
                                        aria-setsize={5}
                                        as="i"
                                        index={3}
                                        key="3"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={4}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={true}
                                        aria-posinset={5}
                                        aria-setsize={5}
                                        as="i"
                                        index={4}
                                        key="4"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={true}
                                          aria-posinset={5}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                    </div>
                                  </Rating>
                                </Rating>
                              </div>
                            </Segment>
                            <Segment>
                              <div
                                className="ui segment"
                              >
                                <span>
                                  morf
                                   
                                  <Heading
                                    className={null}
                                    hasMargin={true}
                                    isColorInverted={false}
                                    size="small"
                                    textAlign={null}
                                  >
                                    <Header
                                      as="h4"
                                      className=""
                                      inverted={false}
                                      textAlign={null}
                                    >
                                      <h4
                                        className="ui header"
                                      >
                                        250€
                                      </h4>
                                    </Header>
                                  </Heading>
                                  per night
                                </span>
                              </div>
                            </Segment>
                          </div>
                        </SegmentGroup>
                      </div>
                    </SegmentGroup>
                  </Summary>
                  <ShowOn
                    computer={true}
                    mobile={false}
                    parent="div"
                    parentProps={Object {}}
                    tablet={false}
                    widescreen={true}
                  >
                    <div
                      className="show-on-computer show-on-widescreen"
                    >
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <form
                          className="ui form"
                          onSubmit={[Function]}
                        >
                          <SearchFields
                            className={null}
                            datesCheckInLabel="Check in"
                            datesCheckOutLabel="Check out"
                            datesInputOnFocusChange={[Function]}
                            getIsDayBlocked={[Function]}
                            guestsInputLabel="Guests"
                            isDisplayedAsModal={false}
                            isFixed={true}
                            isStackable={false}
                            locationInputLabel="Location"
                            locationOptions={null}
                            modalHeadingText="Check our availability"
                            modalSummaryElement={null}
                            onChangeInput={[Function]}
                            onInputChange={[Function]}
                            onSubmit={[Function]}
                            searchButton={
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            }
                            summaryElement={
                              <Summary
                                areOnlyNightPriceAndRatingDisplayed={false}
                                isShowingPlaceholder={false}
                                locationName="Location"
                                periodText="per night"
                                pricePerPeriod="250€"
                                pricePerPeriodPrefix="morf"
                                propertyName="Property"
                                ratingNumber={4.5}
                              />
                            }
                            willLocationDropdownOpenAbove={false}
                          >
                            <div
                              className="inputs-container"
                            >
                              <div
                                className="input-container dates-input-container"
                              >
                                <WithResponsive(DateRangePicker)
                                  endDatePlaceholderText="Check out"
                                  getIsDayBlocked={[Function]}
                                  name="dates"
                                  onChange={[Function]}
                                  onFocusChange={[Function]}
                                  startDatePlaceholderText="Check in"
                                  willOpenAbove={false}
                                >
                                  <Responsive
                                    as={[Function]}
                                    endDatePlaceholderText="Check out"
                                    getIsDayBlocked={[Function]}
                                    getWidth={[Function]}
                                    isUserOnMobile={false}
                                    name="dates"
                                    onChange={[Function]}
                                    onFocusChange={[Function]}
                                    onUpdate={[Function]}
                                    startDatePlaceholderText="Check in"
                                    willOpenAbove={false}
                                    windowInnerWidth={1024}
                                  >
                                    <DateRangePicker
                                      displayFormat="DD/MM/YYYY"
                                      endDatePlaceholderText="Check out"
                                      error={false}
                                      getIsDayBlocked={[Function]}
                                      isCalendarIconDisplayed={true}
                                      isLoading={false}
                                      isUserOnMobile={false}
                                      isValid={false}
                                      localeCode="en"
                                      name="dates"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocusChange={[Function]}
                                      startDatePlaceholderText="Check in"
                                      willOpenAbove={false}
                                      windowInnerWidth={1024}
                                    >
                                      <InputController
                                        adaptOnChangeEvent={[Function]}
                                        error={false}
                                        icon={null}
                                        inputOnChangeFunctionName="onDatesChange"
                                        isCompact={false}
                                        isFluid={false}
                                        isFocused={false}
                                        isValid={false}
                                        mapValueToProps={[Function]}
                                        name="dates"
                                        onChange={[Function]}
                                        value={null}
                                      >
                                        <Input
                                          className=""
                                          fluid={false}
                                          iconPosition={null}
                                          name="dates"
                                          type="text"
                                          value={null}
                                        >
                                          <div
                                            className="ui input"
                                          >
                                            <DateRangePicker
                                              customArrowIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              customInputIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="calendar"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              daySize={52}
                                              disabled={false}
                                              displayFormat="DD/MM/YYYY"
                                              endDate={null}
                                              endDatePlaceholderText="Check out"
                                              focusedInput={null}
                                              hideKeyboardShortcutsPanel={true}
                                              isDayBlocked={[Function]}
                                              key=".0"
                                              navNext={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              navPrev={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow left"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              onDatesChange={[Function]}
                                              onFocusChange={[Function]}
                                              openDirection="down"
                                              showClearDates={true}
                                              startDate={null}
                                              startDatePlaceholderText="Check in"
                                              withPortal={false}
                                            >
                                              <div />
                                            </DateRangePicker>
                                          </div>
                                        </Input>
                                      </InputController>
                                      <div />
                                    </DateRangePicker>
                                  </Responsive>
                                </WithResponsive(DateRangePicker)>
                              </div>
                              <div
                                className="input-container guests-input-container"
                              >
                                <CounterDropdown
                                  counterName="guests"
                                  dropdownLabel="Guests"
                                  onChange={[Function]}
                                  willOpenAbove={false}
                                >
                                  <Popup
                                    className="counter-dropdown"
                                    content={
                                      <FlexContainer
                                        alignContent={null}
                                        alignItems={null}
                                        className={null}
                                        flexDirection="row"
                                        flexWrap={null}
                                        justifyContent="space-between"
                                      >
                                        <Counter
                                          min={0}
                                          name="guests"
                                          onChange={[Function]}
                                          renderValue={[Function]}
                                          value={0}
                                        />
                                      </FlexContainer>
                                    }
                                    data-testid="counter-dropdown"
                                    disabled={false}
                                    eventsEnabled={true}
                                    offset={0}
                                    on="click"
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    open={false}
                                    pinned={false}
                                    position="bottom left"
                                    text="Guests"
                                    trigger={
                                      <div
                                        className="dropdown-container"
                                        role="button"
                                      >
                                        <div
                                          className="ui selection dropdown counter-dropdown-trigger"
                                        >
                                          <span>
                                            Guests
                                          </span>
                                          <Icon
                                            className={null}
                                            color={null}
                                            hasBorder={false}
                                            isButton={false}
                                            isCircular={false}
                                            isColorInverted={false}
                                            isDisabled={false}
                                            isLabelLeft={false}
                                            labelText={null}
                                            labelWeight={null}
                                            name="caret down"
                                            path={null}
                                            size={null}
                                          />
                                        </div>
                                      </div>
                                    }
                                  >
                                    <Portal
                                      closeOnDocumentClick={true}
                                      closeOnEscape={true}
                                      closeOnTriggerClick={true}
                                      eventPool="default"
                                      onClose={[Function]}
                                      onMount={[Function]}
                                      onOpen={[Function]}
                                      onUnmount={[Function]}
                                      open={false}
                                      openOnTriggerClick={true}
                                      trigger={
                                        <div
                                          className="dropdown-container"
                                          role="button"
                                        >
                                          <div
                                            className="ui selection dropdown counter-dropdown-trigger"
                                          >
                                            <span>
                                              Guests
                                            </span>
                                            <Icon
                                              className={null}
                                              color={null}
                                              hasBorder={false}
                                              isButton={false}
                                              isCircular={false}
                                              isColorInverted={false}
                                              isDisabled={false}
                                              isLabelLeft={false}
                                              labelText={null}
                                              labelWeight={null}
                                              name="caret down"
                                              path={null}
                                              size={null}
                                            />
                                          </div>
                                        </div>
                                      }
                                      triggerRef={
                                        Object {
                                          "current": <div
                                            class="dropdown-container"
                                            role="button"
                                          >
                                            <div
                                              class="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <i
                                                class="icon"
                                              >
                                                <svg
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M20,8.5l-8,7-8-7Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              </i>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <Ref
                                        innerRef={[Function]}
                                      >
                                        <RefFindNode
                                          innerRef={[Function]}
                                        >
                                          <div
                                            className="dropdown-container"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            role="button"
                                          >
                                            <div
                                              className="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <Icon
                                                className={null}
                                                color={null}
                                                hasBorder={false}
                                                isButton={false}
                                                isCircular={false}
                                                isColorInverted={false}
                                                isDisabled={false}
                                                isLabelLeft={false}
                                                labelText={null}
                                                labelWeight={null}
                                                name="caret down"
                                                path={null}
                                                size={null}
                                              >
                                                <i
                                                  className="icon"
                                                >
                                                  <svg
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M20,8.5l-8,7-8-7Z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </i>
                                              </Icon>
                                            </div>
                                          </div>
                                        </RefFindNode>
                                      </Ref>
                                    </Portal>
                                  </Popup>
                                </CounterDropdown>
                              </div>
                              <div
                                className="button-container"
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  <Button
                                    as="button"
                                    basic={false}
                                    circular={true}
                                    className=""
                                    compact={false}
                                    disabled={false}
                                    floated="right"
                                    fluid={false}
                                    loading={false}
                                    onClick={[Function]}
                                    secondary={false}
                                    size={null}
                                    type="button"
                                  >
                                    <Ref
                                      innerRef={
                                        Object {
                                          "current": <button
                                            class="ui circular right floated button"
                                            type="button"
                                          >
                                            Check our availability
                                          </button>,
                                        }
                                      }
                                    >
                                      <RefFindNode
                                        innerRef={
                                          Object {
                                            "current": <button
                                              class="ui circular right floated button"
                                              type="button"
                                            >
                                              Check our availability
                                            </button>,
                                          }
                                        }
                                      >
                                        <button
                                          className="ui circular right floated button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Check our availability
                                        </button>
                                      </RefFindNode>
                                    </Ref>
                                  </Button>
                                </Button>
                              </div>
                            </div>
                          </SearchFields>
                        </form>
                      </Form>
                    </div>
                  </ShowOn>
                  <ShowOn
                    computer={false}
                    mobile={true}
                    parent="div"
                    parentProps={Object {}}
                    tablet={true}
                    widescreen={false}
                  >
                    <div
                      className="show-on-mobile show-on-tablet"
                    >
                      <SearchModal
                        className={null}
                        datesCheckInLabel="Check in"
                        datesCheckOutLabel="Check out"
                        datesInputOnFocusChange={[Function]}
                        getIsDayBlocked={[Function]}
                        guestsInputLabel="Guests"
                        isDisplayedAsModal={false}
                        isFixed={true}
                        isModalOpen={false}
                        isStackable={false}
                        locationInputLabel="Location"
                        locationOptions={null}
                        modalHeadingText="Check our availability"
                        modalSummaryElement={null}
                        onChangeInput={[Function]}
                        onInputChange={[Function]}
                        onSubmit={[Function]}
                        searchButton={
                          <Button
                            hasShadow={false}
                            icon={null}
                            isCompact={false}
                            isDisabled={false}
                            isFluid={false}
                            isFormSubmit={false}
                            isLoading={false}
                            isOutlined={false}
                            isPositionedRight={true}
                            isRounded={true}
                            isSecondary={false}
                            onClick={[Function]}
                            size={null}
                          >
                            Check our availability
                          </Button>
                        }
                        summaryElement={
                          <Summary
                            areOnlyNightPriceAndRatingDisplayed={false}
                            isShowingPlaceholder={false}
                            locationName="Location"
                            periodText="per night"
                            pricePerPeriod="250€"
                            pricePerPeriodPrefix="morf"
                            propertyName="Property"
                            ratingNumber={4.5}
                          />
                        }
                        willLocationDropdownOpenAbove={false}
                      >
                        <Modal
                          className={null}
                          hasCloseIcon={true}
                          hasPadding={true}
                          hasRoundedCorners={false}
                          header={
                            <Heading
                              className={null}
                              hasMargin={true}
                              isColorInverted={false}
                              size="small"
                              textAlign={null}
                            >
                              Check our availability
                            </Heading>
                          }
                          isFullscreen={true}
                          isOpen={false}
                          onClose={[Function]}
                          size="tiny"
                          trigger={
                            <div
                              data-test-id="search-bar-search-modal-trigger"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            </div>
                          }
                        >
                          <Modal
                            centered={true}
                            className="has-padding"
                            closeIcon={
                              <Icon
                                className={null}
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="close"
                                path={null}
                                size={null}
                              />
                            }
                            closeOnDimmerClick={true}
                            closeOnDocumentClick={false}
                            dimmer="inverted"
                            eventPool="Modal"
                            onClose={[Function]}
                            open={false}
                            size="fullscreen"
                            trigger={
                              <div
                                data-test-id="search-bar-search-modal-trigger"
                                onClick={[Function]}
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  Check our availability
                                </Button>
                              </div>
                            }
                          >
                            <Portal
                              closeOnDocumentClick={false}
                              closeOnEscape={true}
                              eventPool="Modal"
                              mountNode={<body />}
                              onClose={[Function]}
                              onMount={[Function]}
                              onOpen={[Function]}
                              onUnmount={[Function]}
                              open={false}
                              openOnTriggerClick={true}
                              trigger={
                                <div
                                  data-test-id="search-bar-search-modal-trigger"
                                  onClick={[Function]}
                                >
                                  <Button
                                    hasShadow={false}
                                    icon={null}
                                    isCompact={false}
                                    isDisabled={false}
                                    isFluid={false}
                                    isFormSubmit={false}
                                    isLoading={false}
                                    isOutlined={false}
                                    isPositionedRight={true}
                                    isRounded={true}
                                    isSecondary={false}
                                    onClick={[Function]}
                                    size={null}
                                  >
                                    Check our availability
                                  </Button>
                                </div>
                              }
                            >
                              <Ref
                                innerRef={[Function]}
                              >
                                <RefFindNode
                                  innerRef={[Function]}
                                >
                                  <div
                                    data-test-id="search-bar-search-modal-trigger"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                  >
                                    <Button
                                      hasShadow={false}
                                      icon={null}
                                      isCompact={false}
                                      isDisabled={false}
                                      isFluid={false}
                                      isFormSubmit={false}
                                      isLoading={false}
                                      isOutlined={false}
                                      isPositionedRight={true}
                                      isRounded={true}
                                      isSecondary={false}
                                      onClick={[Function]}
                                      size={null}
                                    >
                                      <Button
                                        as="button"
                                        basic={false}
                                        circular={true}
                                        className=""
                                        compact={false}
                                        disabled={false}
                                        floated="right"
                                        fluid={false}
                                        loading={false}
                                        onClick={[Function]}
                                        secondary={false}
                                        size={null}
                                        type="button"
                                      >
                                        <Ref
                                          innerRef={
                                            Object {
                                              "current": <button
                                                class="ui circular right floated button"
                                                type="button"
                                              >
                                                Check our availability
                                              </button>,
                                            }
                                          }
                                        >
                                          <RefFindNode
                                            innerRef={
                                              Object {
                                                "current": <button
                                                  class="ui circular right floated button"
                                                  type="button"
                                                >
                                                  Check our availability
                                                </button>,
                                              }
                                            }
                                          >
                                            <button
                                              className="ui circular right floated button"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Check our availability
                                            </button>
                                          </RefFindNode>
                                        </Ref>
                                      </Button>
                                    </Button>
                                  </div>
                                </RefFindNode>
                              </Ref>
                            </Portal>
                          </Modal>
                        </Modal>
                      </SearchModal>
                    </div>
                  </ShowOn>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
    <ShowOn
      computer={false}
      mobile={true}
      parent="div"
      parentProps={Object {}}
      tablet={true}
      widescreen={false}
    >
      <div
        className="show-on-mobile show-on-tablet"
      >
        <SearchBar
          className={null}
          datesCheckInLabel="Check in"
          datesCheckOutLabel="Check out"
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          guestsInputLabel="Guests"
          isDisplayedAsModal={false}
          isFixed={true}
          isStackable={false}
          locationInputLabel="Location"
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={false}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              pricePerPeriodPrefix="morf"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          onChangeInput={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isOutlined={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={true}
              isShowingPlaceholder={false}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              pricePerPeriodPrefix="morf"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willLocationDropdownOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Summary
                    areOnlyNightPriceAndRatingDisplayed={true}
                    isShowingPlaceholder={false}
                    locationName="Location"
                    periodText="per night"
                    pricePerPeriod="250€"
                    pricePerPeriodPrefix="morf"
                    propertyName="Property"
                    ratingNumber={4.5}
                  >
                    <SegmentGroup
                      className="is-summary"
                      compact={true}
                    >
                      <div
                        className="ui compact segments is-summary"
                      >
                        <SegmentGroup
                          className="horizontal-wrap"
                          horizontal={false}
                        >
                          <div
                            className="ui segments horizontal-wrap"
                          >
                            <Segment>
                              <div
                                className="ui segment"
                              >
                                <span>
                                  morf
                                   
                                  <Heading
                                    className={null}
                                    hasMargin={true}
                                    isColorInverted={false}
                                    size="small"
                                    textAlign={null}
                                  >
                                    <Header
                                      as="h4"
                                      className=""
                                      inverted={false}
                                      textAlign={null}
                                    >
                                      <h4
                                        className="ui header"
                                      >
                                        250€
                                      </h4>
                                    </Header>
                                  </Heading>
                                  per night
                                </span>
                              </div>
                            </Segment>
                            <Segment
                              className="is-rating"
                            >
                              <div
                                className="ui segment is-rating"
                              >
                                <Rating
                                  iconSize="tiny"
                                  isShowingNumeral={true}
                                  ratingNumber={4.5}
                                >
                                  4.5
                                  <Rating
                                    clearable="auto"
                                    disabled={true}
                                    maxRating={5}
                                    rating={5}
                                    size="tiny"
                                  >
                                    <div
                                      className="ui tiny disabled rating"
                                      onMouseLeave={[Function]}
                                      role="radiogroup"
                                      tabIndex={0}
                                    >
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={1}
                                        aria-setsize={5}
                                        as="i"
                                        index={0}
                                        key="0"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={1}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={2}
                                        aria-setsize={5}
                                        as="i"
                                        index={1}
                                        key="1"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={2}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={3}
                                        aria-setsize={5}
                                        as="i"
                                        index={2}
                                        key="2"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={3}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={false}
                                        aria-posinset={4}
                                        aria-setsize={5}
                                        as="i"
                                        index={3}
                                        key="3"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={false}
                                          aria-posinset={4}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                      <RatingIcon
                                        active={true}
                                        aria-checked={true}
                                        aria-posinset={5}
                                        aria-setsize={5}
                                        as="i"
                                        index={4}
                                        key="4"
                                        onClick={[Function]}
                                        onMouseEnter={[Function]}
                                        selected={false}
                                        tabIndex={-1}
                                      >
                                        <i
                                          aria-checked={true}
                                          aria-posinset={5}
                                          aria-setsize={5}
                                          className="active icon"
                                          onClick={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseEnter={[Function]}
                                          role="radio"
                                          tabIndex={-1}
                                        />
                                      </RatingIcon>
                                    </div>
                                  </Rating>
                                </Rating>
                              </div>
                            </Segment>
                          </div>
                        </SegmentGroup>
                      </div>
                    </SegmentGroup>
                  </Summary>
                  <ShowOn
                    computer={true}
                    mobile={false}
                    parent="div"
                    parentProps={Object {}}
                    tablet={false}
                    widescreen={true}
                  >
                    <div
                      className="show-on-computer show-on-widescreen"
                    >
                      <Form
                        as="form"
                        onSubmit={[Function]}
                      >
                        <form
                          className="ui form"
                          onSubmit={[Function]}
                        >
                          <SearchFields
                            className={null}
                            datesCheckInLabel="Check in"
                            datesCheckOutLabel="Check out"
                            datesInputOnFocusChange={[Function]}
                            getIsDayBlocked={[Function]}
                            guestsInputLabel="Guests"
                            isDisplayedAsModal={false}
                            isFixed={true}
                            isStackable={false}
                            locationInputLabel="Location"
                            locationOptions={null}
                            modalHeadingText="Check our availability"
                            modalSummaryElement={
                              <Summary
                                areOnlyNightPriceAndRatingDisplayed={false}
                                isShowingPlaceholder={false}
                                locationName="Location"
                                periodText="per night"
                                pricePerPeriod="250€"
                                pricePerPeriodPrefix="morf"
                                propertyName="Property"
                                ratingNumber={4.5}
                              />
                            }
                            onChangeInput={[Function]}
                            onInputChange={[Function]}
                            onSubmit={[Function]}
                            searchButton={
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            }
                            summaryElement={
                              <Summary
                                areOnlyNightPriceAndRatingDisplayed={true}
                                isShowingPlaceholder={false}
                                locationName="Location"
                                periodText="per night"
                                pricePerPeriod="250€"
                                pricePerPeriodPrefix="morf"
                                propertyName="Property"
                                ratingNumber={4.5}
                              />
                            }
                            willLocationDropdownOpenAbove={false}
                          >
                            <div
                              className="inputs-container"
                            >
                              <div
                                className="input-container dates-input-container"
                              >
                                <WithResponsive(DateRangePicker)
                                  endDatePlaceholderText="Check out"
                                  getIsDayBlocked={[Function]}
                                  name="dates"
                                  onChange={[Function]}
                                  onFocusChange={[Function]}
                                  startDatePlaceholderText="Check in"
                                  willOpenAbove={false}
                                >
                                  <Responsive
                                    as={[Function]}
                                    endDatePlaceholderText="Check out"
                                    getIsDayBlocked={[Function]}
                                    getWidth={[Function]}
                                    isUserOnMobile={false}
                                    name="dates"
                                    onChange={[Function]}
                                    onFocusChange={[Function]}
                                    onUpdate={[Function]}
                                    startDatePlaceholderText="Check in"
                                    willOpenAbove={false}
                                    windowInnerWidth={1024}
                                  >
                                    <DateRangePicker
                                      displayFormat="DD/MM/YYYY"
                                      endDatePlaceholderText="Check out"
                                      error={false}
                                      getIsDayBlocked={[Function]}
                                      isCalendarIconDisplayed={true}
                                      isLoading={false}
                                      isUserOnMobile={false}
                                      isValid={false}
                                      localeCode="en"
                                      name="dates"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocusChange={[Function]}
                                      startDatePlaceholderText="Check in"
                                      willOpenAbove={false}
                                      windowInnerWidth={1024}
                                    >
                                      <InputController
                                        adaptOnChangeEvent={[Function]}
                                        error={false}
                                        icon={null}
                                        inputOnChangeFunctionName="onDatesChange"
                                        isCompact={false}
                                        isFluid={false}
                                        isFocused={false}
                                        isValid={false}
                                        mapValueToProps={[Function]}
                                        name="dates"
                                        onChange={[Function]}
                                        value={null}
                                      >
                                        <Input
                                          className=""
                                          fluid={false}
                                          iconPosition={null}
                                          name="dates"
                                          type="text"
                                          value={null}
                                        >
                                          <div
                                            className="ui input"
                                          >
                                            <DateRangePicker
                                              customArrowIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              customInputIcon={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="calendar"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              daySize={52}
                                              disabled={false}
                                              displayFormat="DD/MM/YYYY"
                                              endDate={null}
                                              endDatePlaceholderText="Check out"
                                              focusedInput={null}
                                              hideKeyboardShortcutsPanel={true}
                                              isDayBlocked={[Function]}
                                              key=".0"
                                              navNext={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow right"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              navPrev={
                                                <Icon
                                                  className={null}
                                                  color={null}
                                                  hasBorder={false}
                                                  isButton={false}
                                                  isCircular={false}
                                                  isColorInverted={false}
                                                  isDisabled={false}
                                                  isLabelLeft={false}
                                                  labelText={null}
                                                  labelWeight={null}
                                                  name="arrow left"
                                                  path={null}
                                                  size={null}
                                                />
                                              }
                                              onDatesChange={[Function]}
                                              onFocusChange={[Function]}
                                              openDirection="down"
                                              showClearDates={true}
                                              startDate={null}
                                              startDatePlaceholderText="Check in"
                                              withPortal={false}
                                            >
                                              <div />
                                            </DateRangePicker>
                                          </div>
                                        </Input>
                                      </InputController>
                                      <div />
                                    </DateRangePicker>
                                  </Responsive>
                                </WithResponsive(DateRangePicker)>
                              </div>
                              <div
                                className="input-container guests-input-container"
                              >
                                <CounterDropdown
                                  counterName="guests"
                                  dropdownLabel="Guests"
                                  onChange={[Function]}
                                  willOpenAbove={false}
                                >
                                  <Popup
                                    className="counter-dropdown"
                                    content={
                                      <FlexContainer
                                        alignContent={null}
                                        alignItems={null}
                                        className={null}
                                        flexDirection="row"
                                        flexWrap={null}
                                        justifyContent="space-between"
                                      >
                                        <Counter
                                          min={0}
                                          name="guests"
                                          onChange={[Function]}
                                          renderValue={[Function]}
                                          value={0}
                                        />
                                      </FlexContainer>
                                    }
                                    data-testid="counter-dropdown"
                                    disabled={false}
                                    eventsEnabled={true}
                                    offset={0}
                                    on="click"
                                    onClose={[Function]}
                                    onOpen={[Function]}
                                    open={false}
                                    pinned={false}
                                    position="bottom left"
                                    text="Guests"
                                    trigger={
                                      <div
                                        className="dropdown-container"
                                        role="button"
                                      >
                                        <div
                                          className="ui selection dropdown counter-dropdown-trigger"
                                        >
                                          <span>
                                            Guests
                                          </span>
                                          <Icon
                                            className={null}
                                            color={null}
                                            hasBorder={false}
                                            isButton={false}
                                            isCircular={false}
                                            isColorInverted={false}
                                            isDisabled={false}
                                            isLabelLeft={false}
                                            labelText={null}
                                            labelWeight={null}
                                            name="caret down"
                                            path={null}
                                            size={null}
                                          />
                                        </div>
                                      </div>
                                    }
                                  >
                                    <Portal
                                      closeOnDocumentClick={true}
                                      closeOnEscape={true}
                                      closeOnTriggerClick={true}
                                      eventPool="default"
                                      onClose={[Function]}
                                      onMount={[Function]}
                                      onOpen={[Function]}
                                      onUnmount={[Function]}
                                      open={false}
                                      openOnTriggerClick={true}
                                      trigger={
                                        <div
                                          className="dropdown-container"
                                          role="button"
                                        >
                                          <div
                                            className="ui selection dropdown counter-dropdown-trigger"
                                          >
                                            <span>
                                              Guests
                                            </span>
                                            <Icon
                                              className={null}
                                              color={null}
                                              hasBorder={false}
                                              isButton={false}
                                              isCircular={false}
                                              isColorInverted={false}
                                              isDisabled={false}
                                              isLabelLeft={false}
                                              labelText={null}
                                              labelWeight={null}
                                              name="caret down"
                                              path={null}
                                              size={null}
                                            />
                                          </div>
                                        </div>
                                      }
                                      triggerRef={
                                        Object {
                                          "current": <div
                                            class="dropdown-container"
                                            role="button"
                                          >
                                            <div
                                              class="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <i
                                                class="icon"
                                              >
                                                <svg
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M20,8.5l-8,7-8-7Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              </i>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <Ref
                                        innerRef={[Function]}
                                      >
                                        <RefFindNode
                                          innerRef={[Function]}
                                        >
                                          <div
                                            className="dropdown-container"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            role="button"
                                          >
                                            <div
                                              className="ui selection dropdown counter-dropdown-trigger"
                                            >
                                              <span>
                                                Guests
                                              </span>
                                              <Icon
                                                className={null}
                                                color={null}
                                                hasBorder={false}
                                                isButton={false}
                                                isCircular={false}
                                                isColorInverted={false}
                                                isDisabled={false}
                                                isLabelLeft={false}
                                                labelText={null}
                                                labelWeight={null}
                                                name="caret down"
                                                path={null}
                                                size={null}
                                              >
                                                <i
                                                  className="icon"
                                                >
                                                  <svg
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M20,8.5l-8,7-8-7Z"
                                                      fill="currentColor"
                                                    />
                                                  </svg>
                                                </i>
                                              </Icon>
                                            </div>
                                          </div>
                                        </RefFindNode>
                                      </Ref>
                                    </Portal>
                                  </Popup>
                                </CounterDropdown>
                              </div>
                              <div
                                className="button-container"
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  <Button
                                    as="button"
                                    basic={false}
                                    circular={true}
                                    className=""
                                    compact={false}
                                    disabled={false}
                                    floated="right"
                                    fluid={false}
                                    loading={false}
                                    onClick={[Function]}
                                    secondary={false}
                                    size={null}
                                    type="button"
                                  >
                                    <Ref
                                      innerRef={
                                        Object {
                                          "current": <button
                                            class="ui circular right floated button"
                                            type="button"
                                          >
                                            Check our availability
                                          </button>,
                                        }
                                      }
                                    >
                                      <RefFindNode
                                        innerRef={
                                          Object {
                                            "current": <button
                                              class="ui circular right floated button"
                                              type="button"
                                            >
                                              Check our availability
                                            </button>,
                                          }
                                        }
                                      >
                                        <button
                                          className="ui circular right floated button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Check our availability
                                        </button>
                                      </RefFindNode>
                                    </Ref>
                                  </Button>
                                </Button>
                              </div>
                            </div>
                          </SearchFields>
                        </form>
                      </Form>
                    </div>
                  </ShowOn>
                  <ShowOn
                    computer={false}
                    mobile={true}
                    parent="div"
                    parentProps={Object {}}
                    tablet={true}
                    widescreen={false}
                  >
                    <div
                      className="show-on-mobile show-on-tablet"
                    >
                      <SearchModal
                        className={null}
                        datesCheckInLabel="Check in"
                        datesCheckOutLabel="Check out"
                        datesInputOnFocusChange={[Function]}
                        getIsDayBlocked={[Function]}
                        guestsInputLabel="Guests"
                        isDisplayedAsModal={false}
                        isFixed={true}
                        isModalOpen={false}
                        isStackable={false}
                        locationInputLabel="Location"
                        locationOptions={null}
                        modalHeadingText="Check our availability"
                        modalSummaryElement={
                          <Summary
                            areOnlyNightPriceAndRatingDisplayed={false}
                            isShowingPlaceholder={false}
                            locationName="Location"
                            periodText="per night"
                            pricePerPeriod="250€"
                            pricePerPeriodPrefix="morf"
                            propertyName="Property"
                            ratingNumber={4.5}
                          />
                        }
                        onChangeInput={[Function]}
                        onInputChange={[Function]}
                        onSubmit={[Function]}
                        searchButton={
                          <Button
                            hasShadow={false}
                            icon={null}
                            isCompact={false}
                            isDisabled={false}
                            isFluid={false}
                            isFormSubmit={false}
                            isLoading={false}
                            isOutlined={false}
                            isPositionedRight={true}
                            isRounded={true}
                            isSecondary={false}
                            onClick={[Function]}
                            size={null}
                          >
                            Check our availability
                          </Button>
                        }
                        summaryElement={
                          <Summary
                            areOnlyNightPriceAndRatingDisplayed={true}
                            isShowingPlaceholder={false}
                            locationName="Location"
                            periodText="per night"
                            pricePerPeriod="250€"
                            pricePerPeriodPrefix="morf"
                            propertyName="Property"
                            ratingNumber={4.5}
                          />
                        }
                        willLocationDropdownOpenAbove={false}
                      >
                        <Modal
                          className={null}
                          hasCloseIcon={true}
                          hasPadding={true}
                          hasRoundedCorners={false}
                          header={
                            <Summary
                              areOnlyNightPriceAndRatingDisplayed={false}
                              isShowingPlaceholder={false}
                              locationName="Location"
                              periodText="per night"
                              pricePerPeriod="250€"
                              pricePerPeriodPrefix="morf"
                              propertyName="Property"
                              ratingNumber={4.5}
                            />
                          }
                          isFullscreen={true}
                          isOpen={false}
                          onClose={[Function]}
                          size="tiny"
                          trigger={
                            <div
                              data-test-id="search-bar-search-modal-trigger"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={false}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={true}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Check our availability
                              </Button>
                            </div>
                          }
                        >
                          <Modal
                            centered={true}
                            className="has-padding"
                            closeIcon={
                              <Icon
                                className={null}
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="close"
                                path={null}
                                size={null}
                              />
                            }
                            closeOnDimmerClick={true}
                            closeOnDocumentClick={false}
                            dimmer="inverted"
                            eventPool="Modal"
                            onClose={[Function]}
                            open={false}
                            size="fullscreen"
                            trigger={
                              <div
                                data-test-id="search-bar-search-modal-trigger"
                                onClick={[Function]}
                              >
                                <Button
                                  hasShadow={false}
                                  icon={null}
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={false}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={true}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  Check our availability
                                </Button>
                              </div>
                            }
                          >
                            <Portal
                              closeOnDocumentClick={false}
                              closeOnEscape={true}
                              eventPool="Modal"
                              mountNode={<body />}
                              onClose={[Function]}
                              onMount={[Function]}
                              onOpen={[Function]}
                              onUnmount={[Function]}
                              open={false}
                              openOnTriggerClick={true}
                              trigger={
                                <div
                                  data-test-id="search-bar-search-modal-trigger"
                                  onClick={[Function]}
                                >
                                  <Button
                                    hasShadow={false}
                                    icon={null}
                                    isCompact={false}
                                    isDisabled={false}
                                    isFluid={false}
                                    isFormSubmit={false}
                                    isLoading={false}
                                    isOutlined={false}
                                    isPositionedRight={true}
                                    isRounded={true}
                                    isSecondary={false}
                                    onClick={[Function]}
                                    size={null}
                                  >
                                    Check our availability
                                  </Button>
                                </div>
                              }
                            >
                              <Ref
                                innerRef={[Function]}
                              >
                                <RefFindNode
                                  innerRef={[Function]}
                                >
                                  <div
                                    data-test-id="search-bar-search-modal-trigger"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                  >
                                    <Button
                                      hasShadow={false}
                                      icon={null}
                                      isCompact={false}
                                      isDisabled={false}
                                      isFluid={false}
                                      isFormSubmit={false}
                                      isLoading={false}
                                      isOutlined={false}
                                      isPositionedRight={true}
                                      isRounded={true}
                                      isSecondary={false}
                                      onClick={[Function]}
                                      size={null}
                                    >
                                      <Button
                                        as="button"
                                        basic={false}
                                        circular={true}
                                        className=""
                                        compact={false}
                                        disabled={false}
                                        floated="right"
                                        fluid={false}
                                        loading={false}
                                        onClick={[Function]}
                                        secondary={false}
                                        size={null}
                                        type="button"
                                      >
                                        <Ref
                                          innerRef={
                                            Object {
                                              "current": <button
                                                class="ui circular right floated button"
                                                type="button"
                                              >
                                                Check our availability
                                              </button>,
                                            }
                                          }
                                        >
                                          <RefFindNode
                                            innerRef={
                                              Object {
                                                "current": <button
                                                  class="ui circular right floated button"
                                                  type="button"
                                                >
                                                  Check our availability
                                                </button>,
                                              }
                                            }
                                          >
                                            <button
                                              className="ui circular right floated button"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Check our availability
                                            </button>
                                          </RefFindNode>
                                        </Ref>
                                      </Button>
                                    </Button>
                                  </div>
                                </RefFindNode>
                              </Ref>
                            </Portal>
                          </Modal>
                        </Modal>
                      </SearchModal>
                    </div>
                  </ShowOn>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
  </div>
</PropertyPageSearchBar>
`;
