// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PropertyPageSearchBar /> if \`isShowingPlaceholder\` === true should have the right structure 1`] = `
<PropertyPageSearchBar
  datesInputOnFocusChange={[Function]}
  getIsDayBlocked={[Function]}
  isFixed={true}
  isShowingPlaceholder={true}
  modalTrigger={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  onChangeInput={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  summaryLocationName="Location"
  summaryPeriodText="per night"
  summaryPricePerPeriod="250€"
  summaryPropertyName="Property"
  summaryRatingNumber={4.5}
>
  <div
    className="property-page-searchbar"
  >
    <ShowOn
      computer={true}
      mobile={false}
      parent="div"
      parentProps={Object {}}
      tablet={false}
      widescreen={true}
    >
      <div
        className="show-on-computer show-on-widescreen"
      >
        <SearchBar
          className={null}
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          isDisplayedAsModal={false}
          isFixed={true}
          isShowingSummary={false}
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={null}
          onChangeInput={[Function]}
          onCloseModal={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={true}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willDropdownsOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Grid
                    areColumnsCentered={false}
                    isStackable={false}
                  >
                    <Grid
                      centered={false}
                      stackable={false}
                    >
                      <div
                        className="ui grid"
                      >
                        <GridRow
                          horizontalAlignContent="left"
                          verticalAlign="middle"
                        >
                          <GridRow
                            textAlign="left"
                            verticalAlign="middle"
                          >
                            <div
                              className="left aligned middle aligned row"
                            >
                              <GridColumn
                                verticalAlignContent="top"
                                width={5}
                              >
                                <GridColumn
                                  verticalAlign="top"
                                  width={5}
                                >
                                  <div
                                    className="top aligned five wide column"
                                  >
                                    <Summary
                                      areOnlyNightPriceAndRatingDisplayed={false}
                                      isShowingPlaceholder={true}
                                      locationName="Location"
                                      periodText="per night"
                                      pricePerPeriod="250€"
                                      propertyName="Property"
                                      ratingNumber={4.5}
                                    >
                                      <SegmentGroup
                                        className="is-summary"
                                        compact={true}
                                      >
                                        <div
                                          className="ui compact segments is-summary"
                                        >
                                          <Segment>
                                            <div
                                              className="ui segment"
                                            >
                                              <Heading
                                                className={null}
                                                hasMargin={true}
                                                isColorInverted={false}
                                                size="medium"
                                                textAlign={null}
                                              >
                                                <Header
                                                  as="h3"
                                                  className=""
                                                  inverted={false}
                                                  textAlign={null}
                                                >
                                                  <h3
                                                    className="ui header"
                                                  >
                                                    Property
                                                  </h3>
                                                </Header>
                                              </Heading>
                                            </div>
                                          </Segment>
                                          <SegmentGroup
                                            className="horizontal-wrap"
                                            horizontal={true}
                                          >
                                            <div
                                              className="ui horizontal segments horizontal-wrap"
                                            >
                                              <Segment
                                                className="is-location-name"
                                                title="Location"
                                              >
                                                <div
                                                  className="ui segment is-location-name"
                                                  title="Location"
                                                >
                                                  Location
                                                  <Icon
                                                    color="primary"
                                                    hasBorder={false}
                                                    isButton={false}
                                                    isCircular={false}
                                                    isColorInverted={false}
                                                    isDisabled={false}
                                                    isLabelLeft={false}
                                                    labelText={null}
                                                    labelWeight={null}
                                                    name="map pin"
                                                    path={null}
                                                    size="small"
                                                  >
                                                    <i
                                                      className="icon primary small"
                                                    >
                                                      <svg
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </i>
                                                  </Icon>
                                                </div>
                                              </Segment>
                                              <div
                                                className="inline-placeholder-wrapper"
                                              >
                                                <TextPlaceholder
                                                  isFluid={true}
                                                  length="full"
                                                >
                                                  <div
                                                    className="placeholder text full fluid"
                                                  />
                                                </TextPlaceholder>
                                                <TextPlaceholder
                                                  isFluid={true}
                                                  length="full"
                                                >
                                                  <div
                                                    className="placeholder text full fluid"
                                                  />
                                                </TextPlaceholder>
                                              </div>
                                            </div>
                                          </SegmentGroup>
                                        </div>
                                      </SegmentGroup>
                                    </Summary>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                              <GridColumn
                                floated="right"
                                verticalAlignContent="top"
                                width={7}
                              >
                                <GridColumn
                                  floated="right"
                                  verticalAlign="top"
                                  width={7}
                                >
                                  <div
                                    className="right floated top aligned seven wide column"
                                  >
                                    <Form
                                      as="form"
                                      onSubmit={[Function]}
                                    >
                                      <form
                                        className="ui form"
                                        onSubmit={[Function]}
                                      >
                                        <FormGroup>
                                          <div
                                            className="fields"
                                          >
                                            <FormField
                                              width="seven"
                                            >
                                              <div
                                                className="seven wide field"
                                              >
                                                <WithResponsive(DateRangePicker)
                                                  endDatePlaceholderText="Check-out"
                                                  getIsDayBlocked={[Function]}
                                                  name="dates"
                                                  onChange={[Function]}
                                                  onFocusChange={[Function]}
                                                  startDatePlaceholderText="Check-in"
                                                  willOpenAbove={true}
                                                >
                                                  <Responsive
                                                    as={[Function]}
                                                    endDatePlaceholderText="Check-out"
                                                    getIsDayBlocked={[Function]}
                                                    isUserOnMobile={false}
                                                    name="dates"
                                                    onChange={[Function]}
                                                    onFocusChange={[Function]}
                                                    onUpdate={[Function]}
                                                    startDatePlaceholderText="Check-in"
                                                    willOpenAbove={true}
                                                    windowInnerWidth={1024}
                                                  >
                                                    <DateRangePicker
                                                      displayFormat="DD/MM/YYYY"
                                                      endDatePlaceholderText="Check-out"
                                                      error={false}
                                                      getIsDayBlocked={[Function]}
                                                      isUserOnMobile={false}
                                                      isValid={false}
                                                      localeCode="en"
                                                      name="dates"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocusChange={[Function]}
                                                      startDatePlaceholderText="Check-in"
                                                      willOpenAbove={true}
                                                      windowInnerWidth={1024}
                                                    >
                                                      <InputController
                                                        adaptOnChangeEvent={[Function]}
                                                        error={false}
                                                        icon={null}
                                                        initialValue=""
                                                        inputOnChangeFunctionName="onDatesChange"
                                                        isFluid={false}
                                                        isFocused={false}
                                                        isValid={false}
                                                        label={null}
                                                        mapValueToProps={[Function]}
                                                        name="dates"
                                                        onChange={[Function]}
                                                      >
                                                        <Input
                                                          className=""
                                                          fluid={false}
                                                          iconPosition={null}
                                                          type="text"
                                                        >
                                                          <div
                                                            className="ui input"
                                                          >
                                                            <DateRangePicker
                                                              customArrowIcon={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow right"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              customInputIcon={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="calendar"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              daySize={52}
                                                              displayFormat="DD/MM/YYYY"
                                                              endDate={null}
                                                              endDateId="end_date_id_7"
                                                              endDatePlaceholderText="Check-out"
                                                              focusedInput={null}
                                                              hideKeyboardShortcutsPanel={true}
                                                              isDayBlocked={[Function]}
                                                              key=".0"
                                                              navNext={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow right"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              navPrev={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow left"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              onDatesChange={[Function]}
                                                              onFocusChange={[Function]}
                                                              openDirection="up"
                                                              startDate={null}
                                                              startDateId="start_date_id_8"
                                                              startDatePlaceholderText="Check-in"
                                                              withPortal={true}
                                                            >
                                                              <div />
                                                            </DateRangePicker>
                                                          </div>
                                                        </Input>
                                                      </InputController>
                                                    </DateRangePicker>
                                                  </Responsive>
                                                </WithResponsive(DateRangePicker)>
                                              </div>
                                            </FormField>
                                            <FormField
                                              width="two"
                                            >
                                              <div
                                                className="two wide field"
                                              >
                                                <NumberInput
                                                  autoComplete={null}
                                                  error={false}
                                                  icon="users"
                                                  isValid={false}
                                                  label="Guests"
                                                  min={0}
                                                  name="guests"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                >
                                                  <InputController
                                                    adaptOnChangeEvent={[Function]}
                                                    error={false}
                                                    icon={null}
                                                    initialValue=""
                                                    inputOnChangeFunctionName="onChange"
                                                    isFluid={false}
                                                    isFocused={false}
                                                    isValid={false}
                                                    label="Guests"
                                                    mapValueToProps={[Function]}
                                                    name="guests"
                                                    onChange={[Function]}
                                                  >
                                                    <Input
                                                      className=""
                                                      fluid={false}
                                                      iconPosition={null}
                                                      type="text"
                                                    >
                                                      <div
                                                        className="ui input"
                                                      >
                                                        <input
                                                          autoComplete={null}
                                                          key=".0"
                                                          min={0}
                                                          name="guests"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          type="number"
                                                          value=""
                                                        />
                                                        <label
                                                          key=".3"
                                                          onClick={[Function]}
                                                        >
                                                          Guests
                                                        </label>
                                                      </div>
                                                    </Input>
                                                  </InputController>
                                                </NumberInput>
                                              </div>
                                            </FormField>
                                            <FormField
                                              width="four"
                                            >
                                              <div
                                                className="four wide field"
                                              >
                                                <Button
                                                  hasShadow={false}
                                                  icon={null}
                                                  isCompact={false}
                                                  isDisabled={false}
                                                  isFluid={false}
                                                  isFormSubmit={false}
                                                  isLoading={false}
                                                  isPositionedRight={true}
                                                  isRounded={true}
                                                  isSecondary={false}
                                                  onClick={[Function]}
                                                  size={null}
                                                >
                                                  <Button
                                                    as="button"
                                                    circular={true}
                                                    className=""
                                                    compact={false}
                                                    disabled={false}
                                                    floated="right"
                                                    fluid={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    secondary={false}
                                                    size={null}
                                                    type="button"
                                                  >
                                                    <button
                                                      className="ui circular right floated button"
                                                      onClick={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      Check our availability
                                                    </button>
                                                  </Button>
                                                </Button>
                                              </div>
                                            </FormField>
                                          </div>
                                        </FormGroup>
                                      </form>
                                    </Form>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                            </div>
                          </GridRow>
                        </GridRow>
                      </div>
                    </Grid>
                  </Grid>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
    <ShowOn
      computer={false}
      mobile={true}
      parent="div"
      parentProps={Object {}}
      tablet={true}
      widescreen={false}
    >
      <div
        className="show-on-mobile show-on-tablet"
      >
        <SearchBar
          className={null}
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          isDisplayedAsModal={true}
          isFixed={true}
          isShowingSummary={false}
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={true}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          onChangeInput={[Function]}
          onCloseModal={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={true}
              isShowingPlaceholder={true}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willDropdownsOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Grid
                    areColumnsCentered={false}
                    isStackable={false}
                  >
                    <Grid
                      centered={false}
                      stackable={false}
                    >
                      <div
                        className="ui grid"
                      >
                        <GridRow
                          horizontalAlignContent="left"
                          verticalAlign="middle"
                        >
                          <GridRow
                            textAlign="left"
                            verticalAlign="middle"
                          >
                            <div
                              className="left aligned middle aligned row"
                            >
                              <GridColumn
                                verticalAlignContent="top"
                                width={5}
                              >
                                <GridColumn
                                  verticalAlign="top"
                                  width={5}
                                >
                                  <div
                                    className="top aligned five wide column"
                                  >
                                    <Summary
                                      areOnlyNightPriceAndRatingDisplayed={true}
                                      isShowingPlaceholder={true}
                                      locationName="Location"
                                      periodText="per night"
                                      pricePerPeriod="250€"
                                      propertyName="Property"
                                      ratingNumber={4.5}
                                    >
                                      <SegmentGroup
                                        className="is-summary"
                                        compact={true}
                                      >
                                        <div
                                          className="ui compact segments is-summary"
                                        >
                                          <SegmentGroup
                                            className="horizontal-wrap"
                                            horizontal={false}
                                          >
                                            <div
                                              className="ui segments horizontal-wrap"
                                            >
                                              <div
                                                className="placeholder-wrapper"
                                              >
                                                <TextPlaceholder
                                                  isFluid={true}
                                                  length="medium"
                                                >
                                                  <div
                                                    className="placeholder text medium fluid"
                                                  />
                                                </TextPlaceholder>
                                                <TextPlaceholder
                                                  isFluid={true}
                                                  length="short"
                                                >
                                                  <div
                                                    className="placeholder text short fluid"
                                                  />
                                                </TextPlaceholder>
                                              </div>
                                            </div>
                                          </SegmentGroup>
                                        </div>
                                      </SegmentGroup>
                                    </Summary>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                              <GridColumn
                                floated="right"
                                verticalAlignContent="top"
                                width={7}
                              >
                                <GridColumn
                                  floated="right"
                                  verticalAlign="top"
                                  width={7}
                                >
                                  <div
                                    className="right floated top aligned seven wide column"
                                  >
                                    <Modal
                                      hasCloseIcon={true}
                                      hasPadding={true}
                                      hasRoundedCorners={false}
                                      header={
                                        <Summary
                                          areOnlyNightPriceAndRatingDisplayed={false}
                                          isShowingPlaceholder={true}
                                          locationName="Location"
                                          periodText="per night"
                                          pricePerPeriod="250€"
                                          propertyName="Property"
                                          ratingNumber={4.5}
                                        />
                                      }
                                      isFullscreen={true}
                                      onClose={[Function]}
                                      size="tiny"
                                      trigger={
                                        <Button
                                          hasShadow={false}
                                          icon={null}
                                          isCompact={false}
                                          isDisabled={false}
                                          isFluid={false}
                                          isFormSubmit={false}
                                          isLoading={false}
                                          isPositionedRight={true}
                                          isRounded={true}
                                          isSecondary={false}
                                          onClick={[Function]}
                                          size={null}
                                        >
                                          Check our availability
                                        </Button>
                                      }
                                    >
                                      <Modal
                                        className="has-padding"
                                        closeIcon={
                                          <Icon
                                            color={null}
                                            hasBorder={false}
                                            isButton={false}
                                            isCircular={false}
                                            isColorInverted={false}
                                            isDisabled={false}
                                            isLabelLeft={false}
                                            labelText={null}
                                            labelWeight={null}
                                            name="close"
                                            path={null}
                                            size={null}
                                          />
                                        }
                                        closeOnDimmerClick={true}
                                        closeOnDocumentClick={false}
                                        dimmer="inverted"
                                        eventPool="Modal"
                                        onClose={[Function]}
                                        size="fullscreen"
                                        trigger={
                                          <Button
                                            hasShadow={false}
                                            icon={null}
                                            isCompact={false}
                                            isDisabled={false}
                                            isFluid={false}
                                            isFormSubmit={false}
                                            isLoading={false}
                                            isPositionedRight={true}
                                            isRounded={true}
                                            isSecondary={false}
                                            onClick={[Function]}
                                            size={null}
                                          >
                                            Check our availability
                                          </Button>
                                        }
                                      >
                                        <Portal
                                          className="ui inverted page modals dimmer transition visible active"
                                          closeOnDocumentClick={false}
                                          closeOnEscape={true}
                                          closeOnRootNodeClick={true}
                                          eventPool="Modal"
                                          mountNode={<body />}
                                          onClose={[Function]}
                                          onMount={[Function]}
                                          onOpen={[Function]}
                                          onUnmount={[Function]}
                                          openOnTriggerClick={true}
                                          trigger={
                                            <Button
                                              hasShadow={false}
                                              icon={null}
                                              isCompact={false}
                                              isDisabled={false}
                                              isFluid={false}
                                              isFormSubmit={false}
                                              isLoading={false}
                                              isPositionedRight={true}
                                              isRounded={true}
                                              isSecondary={false}
                                              onClick={[Function]}
                                              size={null}
                                            >
                                              Check our availability
                                            </Button>
                                          }
                                        >
                                          <Ref
                                            innerRef={[Function]}
                                          >
                                            <Button
                                              hasShadow={false}
                                              icon={null}
                                              isCompact={false}
                                              isDisabled={false}
                                              isFluid={false}
                                              isFormSubmit={false}
                                              isLoading={false}
                                              isPositionedRight={true}
                                              isRounded={true}
                                              isSecondary={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              size={null}
                                            >
                                              <Button
                                                as="button"
                                                circular={true}
                                                className=""
                                                compact={false}
                                                disabled={false}
                                                floated="right"
                                                fluid={false}
                                                loading={false}
                                                onClick={[Function]}
                                                secondary={false}
                                                size={null}
                                                type="button"
                                              >
                                                <button
                                                  className="ui circular right floated button"
                                                  onClick={[Function]}
                                                  role="button"
                                                  type="button"
                                                >
                                                  Check our availability
                                                </button>
                                              </Button>
                                            </Button>
                                          </Ref>
                                        </Portal>
                                      </Modal>
                                    </Modal>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                            </div>
                          </GridRow>
                        </GridRow>
                      </div>
                    </Grid>
                  </Grid>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
  </div>
</PropertyPageSearchBar>
`;

exports[`<PropertyPageSearchBar /> should have the right structure 1`] = `
<PropertyPageSearchBar
  datesInputOnFocusChange={[Function]}
  getIsDayBlocked={[Function]}
  isFixed={true}
  isShowingPlaceholder={false}
  modalTrigger={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  onChangeInput={[Function]}
  onSubmit={[Function]}
  searchButton={
    <Button
      hasShadow={false}
      icon={null}
      isCompact={false}
      isDisabled={false}
      isFluid={false}
      isFormSubmit={false}
      isLoading={false}
      isPositionedRight={true}
      isRounded={true}
      isSecondary={false}
      onClick={[Function]}
      size={null}
    >
      Check our availability
    </Button>
  }
  summaryLocationName="Location"
  summaryPeriodText="per night"
  summaryPricePerPeriod="250€"
  summaryPropertyName="Property"
  summaryRatingNumber={4.5}
>
  <div
    className="property-page-searchbar"
  >
    <ShowOn
      computer={true}
      mobile={false}
      parent="div"
      parentProps={Object {}}
      tablet={false}
      widescreen={true}
    >
      <div
        className="show-on-computer show-on-widescreen"
      >
        <SearchBar
          className={null}
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          isDisplayedAsModal={false}
          isFixed={true}
          isShowingSummary={false}
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={null}
          onChangeInput={[Function]}
          onCloseModal={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={false}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willDropdownsOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Grid
                    areColumnsCentered={false}
                    isStackable={false}
                  >
                    <Grid
                      centered={false}
                      stackable={false}
                    >
                      <div
                        className="ui grid"
                      >
                        <GridRow
                          horizontalAlignContent="left"
                          verticalAlign="middle"
                        >
                          <GridRow
                            textAlign="left"
                            verticalAlign="middle"
                          >
                            <div
                              className="left aligned middle aligned row"
                            >
                              <GridColumn
                                verticalAlignContent="top"
                                width={5}
                              >
                                <GridColumn
                                  verticalAlign="top"
                                  width={5}
                                >
                                  <div
                                    className="top aligned five wide column"
                                  >
                                    <Summary
                                      areOnlyNightPriceAndRatingDisplayed={false}
                                      isShowingPlaceholder={false}
                                      locationName="Location"
                                      periodText="per night"
                                      pricePerPeriod="250€"
                                      propertyName="Property"
                                      ratingNumber={4.5}
                                    >
                                      <SegmentGroup
                                        className="is-summary"
                                        compact={true}
                                      >
                                        <div
                                          className="ui compact segments is-summary"
                                        >
                                          <Segment>
                                            <div
                                              className="ui segment"
                                            >
                                              <Heading
                                                className={null}
                                                hasMargin={true}
                                                isColorInverted={false}
                                                size="medium"
                                                textAlign={null}
                                              >
                                                <Header
                                                  as="h3"
                                                  className=""
                                                  inverted={false}
                                                  textAlign={null}
                                                >
                                                  <h3
                                                    className="ui header"
                                                  >
                                                    Property
                                                  </h3>
                                                </Header>
                                              </Heading>
                                            </div>
                                          </Segment>
                                          <SegmentGroup
                                            className="horizontal-wrap"
                                            horizontal={true}
                                          >
                                            <div
                                              className="ui horizontal segments horizontal-wrap"
                                            >
                                              <Segment
                                                className="is-location-name"
                                                title="Location"
                                              >
                                                <div
                                                  className="ui segment is-location-name"
                                                  title="Location"
                                                >
                                                  Location
                                                  <Icon
                                                    color="primary"
                                                    hasBorder={false}
                                                    isButton={false}
                                                    isCircular={false}
                                                    isColorInverted={false}
                                                    isDisabled={false}
                                                    isLabelLeft={false}
                                                    labelText={null}
                                                    labelWeight={null}
                                                    name="map pin"
                                                    path={null}
                                                    size="small"
                                                  >
                                                    <i
                                                      className="icon primary small"
                                                    >
                                                      <svg
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12,2.72c-3.17,0-5.74,3-5.74,6.69S12,21.28,12,21.28s5.74-8.17,5.74-11.87S15.17,2.72,12,2.72Zm0,9.74a4,4,0,1,1,4-4A4,4,0,0,1,12,12.46Z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </i>
                                                  </Icon>
                                                </div>
                                              </Segment>
                                              <Segment
                                                className="is-rating"
                                              >
                                                <div
                                                  className="ui segment is-rating"
                                                >
                                                  <Rating
                                                    iconSize="tiny"
                                                    isShowingNumeral={true}
                                                    ratingNumber={4.5}
                                                  >
                                                    4.5
                                                    <Rating
                                                      clearable="auto"
                                                      disabled={true}
                                                      maxRating={5}
                                                      rating={5}
                                                      size="tiny"
                                                    >
                                                      <div
                                                        className="ui tiny disabled rating"
                                                        onMouseLeave={[Function]}
                                                        role="radiogroup"
                                                      >
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={1}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={0}
                                                          key="0"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={1}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={2}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={1}
                                                          key="1"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={2}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={3}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={2}
                                                          key="2"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={3}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={4}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={3}
                                                          key="3"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={4}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={true}
                                                          aria-posinset={5}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={4}
                                                          key="4"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={true}
                                                            aria-posinset={5}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                      </div>
                                                    </Rating>
                                                  </Rating>
                                                </div>
                                              </Segment>
                                              <Segment>
                                                <div
                                                  className="ui segment"
                                                >
                                                  <span>
                                                    from 
                                                    <Heading
                                                      className={null}
                                                      hasMargin={true}
                                                      isColorInverted={false}
                                                      size="small"
                                                      textAlign={null}
                                                    >
                                                      <Header
                                                        as="h4"
                                                        className=""
                                                        inverted={false}
                                                        textAlign={null}
                                                      >
                                                        <h4
                                                          className="ui header"
                                                        >
                                                          250€
                                                        </h4>
                                                      </Header>
                                                    </Heading>
                                                    per night
                                                  </span>
                                                </div>
                                              </Segment>
                                            </div>
                                          </SegmentGroup>
                                        </div>
                                      </SegmentGroup>
                                    </Summary>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                              <GridColumn
                                floated="right"
                                verticalAlignContent="top"
                                width={7}
                              >
                                <GridColumn
                                  floated="right"
                                  verticalAlign="top"
                                  width={7}
                                >
                                  <div
                                    className="right floated top aligned seven wide column"
                                  >
                                    <Form
                                      as="form"
                                      onSubmit={[Function]}
                                    >
                                      <form
                                        className="ui form"
                                        onSubmit={[Function]}
                                      >
                                        <FormGroup>
                                          <div
                                            className="fields"
                                          >
                                            <FormField
                                              width="seven"
                                            >
                                              <div
                                                className="seven wide field"
                                              >
                                                <WithResponsive(DateRangePicker)
                                                  endDatePlaceholderText="Check-out"
                                                  getIsDayBlocked={[Function]}
                                                  name="dates"
                                                  onChange={[Function]}
                                                  onFocusChange={[Function]}
                                                  startDatePlaceholderText="Check-in"
                                                  willOpenAbove={true}
                                                >
                                                  <Responsive
                                                    as={[Function]}
                                                    endDatePlaceholderText="Check-out"
                                                    getIsDayBlocked={[Function]}
                                                    isUserOnMobile={false}
                                                    name="dates"
                                                    onChange={[Function]}
                                                    onFocusChange={[Function]}
                                                    onUpdate={[Function]}
                                                    startDatePlaceholderText="Check-in"
                                                    willOpenAbove={true}
                                                    windowInnerWidth={1024}
                                                  >
                                                    <DateRangePicker
                                                      displayFormat="DD/MM/YYYY"
                                                      endDatePlaceholderText="Check-out"
                                                      error={false}
                                                      getIsDayBlocked={[Function]}
                                                      isUserOnMobile={false}
                                                      isValid={false}
                                                      localeCode="en"
                                                      name="dates"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocusChange={[Function]}
                                                      startDatePlaceholderText="Check-in"
                                                      willOpenAbove={true}
                                                      windowInnerWidth={1024}
                                                    >
                                                      <InputController
                                                        adaptOnChangeEvent={[Function]}
                                                        error={false}
                                                        icon={null}
                                                        initialValue=""
                                                        inputOnChangeFunctionName="onDatesChange"
                                                        isFluid={false}
                                                        isFocused={false}
                                                        isValid={false}
                                                        label={null}
                                                        mapValueToProps={[Function]}
                                                        name="dates"
                                                        onChange={[Function]}
                                                      >
                                                        <Input
                                                          className=""
                                                          fluid={false}
                                                          iconPosition={null}
                                                          type="text"
                                                        >
                                                          <div
                                                            className="ui input"
                                                          >
                                                            <DateRangePicker
                                                              customArrowIcon={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow right"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              customInputIcon={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="calendar"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              daySize={52}
                                                              displayFormat="DD/MM/YYYY"
                                                              endDate={null}
                                                              endDateId="end_date_id_3"
                                                              endDatePlaceholderText="Check-out"
                                                              focusedInput={null}
                                                              hideKeyboardShortcutsPanel={true}
                                                              isDayBlocked={[Function]}
                                                              key=".0"
                                                              navNext={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow right"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              navPrev={
                                                                <Icon
                                                                  color={null}
                                                                  hasBorder={false}
                                                                  isButton={false}
                                                                  isCircular={false}
                                                                  isColorInverted={false}
                                                                  isDisabled={false}
                                                                  isLabelLeft={false}
                                                                  labelText={null}
                                                                  labelWeight={null}
                                                                  name="arrow left"
                                                                  path={null}
                                                                  size={null}
                                                                />
                                                              }
                                                              onDatesChange={[Function]}
                                                              onFocusChange={[Function]}
                                                              openDirection="up"
                                                              startDate={null}
                                                              startDateId="start_date_id_4"
                                                              startDatePlaceholderText="Check-in"
                                                              withPortal={true}
                                                            >
                                                              <div />
                                                            </DateRangePicker>
                                                          </div>
                                                        </Input>
                                                      </InputController>
                                                    </DateRangePicker>
                                                  </Responsive>
                                                </WithResponsive(DateRangePicker)>
                                              </div>
                                            </FormField>
                                            <FormField
                                              width="two"
                                            >
                                              <div
                                                className="two wide field"
                                              >
                                                <NumberInput
                                                  autoComplete={null}
                                                  error={false}
                                                  icon="users"
                                                  isValid={false}
                                                  label="Guests"
                                                  min={0}
                                                  name="guests"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                >
                                                  <InputController
                                                    adaptOnChangeEvent={[Function]}
                                                    error={false}
                                                    icon={null}
                                                    initialValue=""
                                                    inputOnChangeFunctionName="onChange"
                                                    isFluid={false}
                                                    isFocused={false}
                                                    isValid={false}
                                                    label="Guests"
                                                    mapValueToProps={[Function]}
                                                    name="guests"
                                                    onChange={[Function]}
                                                  >
                                                    <Input
                                                      className=""
                                                      fluid={false}
                                                      iconPosition={null}
                                                      type="text"
                                                    >
                                                      <div
                                                        className="ui input"
                                                      >
                                                        <input
                                                          autoComplete={null}
                                                          key=".0"
                                                          min={0}
                                                          name="guests"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          type="number"
                                                          value=""
                                                        />
                                                        <label
                                                          key=".3"
                                                          onClick={[Function]}
                                                        >
                                                          Guests
                                                        </label>
                                                      </div>
                                                    </Input>
                                                  </InputController>
                                                </NumberInput>
                                              </div>
                                            </FormField>
                                            <FormField
                                              width="four"
                                            >
                                              <div
                                                className="four wide field"
                                              >
                                                <Button
                                                  hasShadow={false}
                                                  icon={null}
                                                  isCompact={false}
                                                  isDisabled={false}
                                                  isFluid={false}
                                                  isFormSubmit={false}
                                                  isLoading={false}
                                                  isPositionedRight={true}
                                                  isRounded={true}
                                                  isSecondary={false}
                                                  onClick={[Function]}
                                                  size={null}
                                                >
                                                  <Button
                                                    as="button"
                                                    circular={true}
                                                    className=""
                                                    compact={false}
                                                    disabled={false}
                                                    floated="right"
                                                    fluid={false}
                                                    loading={false}
                                                    onClick={[Function]}
                                                    secondary={false}
                                                    size={null}
                                                    type="button"
                                                  >
                                                    <button
                                                      className="ui circular right floated button"
                                                      onClick={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      Check our availability
                                                    </button>
                                                  </Button>
                                                </Button>
                                              </div>
                                            </FormField>
                                          </div>
                                        </FormGroup>
                                      </form>
                                    </Form>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                            </div>
                          </GridRow>
                        </GridRow>
                      </div>
                    </Grid>
                  </Grid>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
    <ShowOn
      computer={false}
      mobile={true}
      parent="div"
      parentProps={Object {}}
      tablet={true}
      widescreen={false}
    >
      <div
        className="show-on-mobile show-on-tablet"
      >
        <SearchBar
          className={null}
          datesInputOnFocusChange={[Function]}
          getIsDayBlocked={[Function]}
          isDisplayedAsModal={true}
          isFixed={true}
          isShowingSummary={false}
          locationOptions={null}
          modalHeadingText="Check our availability"
          modalSummaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={false}
              isShowingPlaceholder={false}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          onChangeInput={[Function]}
          onCloseModal={[Function]}
          onSubmit={[Function]}
          searchButton={
            <Button
              hasShadow={false}
              icon={null}
              isCompact={false}
              isDisabled={false}
              isFluid={false}
              isFormSubmit={false}
              isLoading={false}
              isPositionedRight={true}
              isRounded={true}
              isSecondary={false}
              onClick={[Function]}
              size={null}
            >
              Check our availability
            </Button>
          }
          summaryElement={
            <Summary
              areOnlyNightPriceAndRatingDisplayed={true}
              isShowingPlaceholder={false}
              locationName="Location"
              periodText="per night"
              pricePerPeriod="250€"
              propertyName="Property"
              ratingNumber={4.5}
            />
          }
          willDropdownsOpenAbove={false}
        >
          <div
            className="search-bar is-fixed"
          >
            <HorizontalGutters>
              <Container>
                <div
                  className="ui container"
                >
                  <Grid
                    areColumnsCentered={false}
                    isStackable={false}
                  >
                    <Grid
                      centered={false}
                      stackable={false}
                    >
                      <div
                        className="ui grid"
                      >
                        <GridRow
                          horizontalAlignContent="left"
                          verticalAlign="middle"
                        >
                          <GridRow
                            textAlign="left"
                            verticalAlign="middle"
                          >
                            <div
                              className="left aligned middle aligned row"
                            >
                              <GridColumn
                                verticalAlignContent="top"
                                width={5}
                              >
                                <GridColumn
                                  verticalAlign="top"
                                  width={5}
                                >
                                  <div
                                    className="top aligned five wide column"
                                  >
                                    <Summary
                                      areOnlyNightPriceAndRatingDisplayed={true}
                                      isShowingPlaceholder={false}
                                      locationName="Location"
                                      periodText="per night"
                                      pricePerPeriod="250€"
                                      propertyName="Property"
                                      ratingNumber={4.5}
                                    >
                                      <SegmentGroup
                                        className="is-summary"
                                        compact={true}
                                      >
                                        <div
                                          className="ui compact segments is-summary"
                                        >
                                          <SegmentGroup
                                            className="horizontal-wrap"
                                            horizontal={false}
                                          >
                                            <div
                                              className="ui segments horizontal-wrap"
                                            >
                                              <Segment>
                                                <div
                                                  className="ui segment"
                                                >
                                                  <span>
                                                    from 
                                                    <Heading
                                                      className={null}
                                                      hasMargin={true}
                                                      isColorInverted={false}
                                                      size="small"
                                                      textAlign={null}
                                                    >
                                                      <Header
                                                        as="h4"
                                                        className=""
                                                        inverted={false}
                                                        textAlign={null}
                                                      >
                                                        <h4
                                                          className="ui header"
                                                        >
                                                          250€
                                                        </h4>
                                                      </Header>
                                                    </Heading>
                                                    per night
                                                  </span>
                                                </div>
                                              </Segment>
                                              <Segment
                                                className="is-rating"
                                              >
                                                <div
                                                  className="ui segment is-rating"
                                                >
                                                  <Rating
                                                    iconSize="tiny"
                                                    isShowingNumeral={true}
                                                    ratingNumber={4.5}
                                                  >
                                                    4.5
                                                    <Rating
                                                      clearable="auto"
                                                      disabled={true}
                                                      maxRating={5}
                                                      rating={5}
                                                      size="tiny"
                                                    >
                                                      <div
                                                        className="ui tiny disabled rating"
                                                        onMouseLeave={[Function]}
                                                        role="radiogroup"
                                                      >
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={1}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={0}
                                                          key="0"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={1}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={2}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={1}
                                                          key="1"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={2}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={3}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={2}
                                                          key="2"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={3}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={false}
                                                          aria-posinset={4}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={3}
                                                          key="3"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={false}
                                                            aria-posinset={4}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                        <RatingIcon
                                                          active={true}
                                                          aria-checked={true}
                                                          aria-posinset={5}
                                                          aria-setsize={5}
                                                          as="i"
                                                          index={4}
                                                          key="4"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          selected={false}
                                                        >
                                                          <i
                                                            aria-checked={true}
                                                            aria-posinset={5}
                                                            aria-setsize={5}
                                                            className="active icon"
                                                            onClick={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseEnter={[Function]}
                                                            role="radio"
                                                            tabIndex={0}
                                                          />
                                                        </RatingIcon>
                                                      </div>
                                                    </Rating>
                                                  </Rating>
                                                </div>
                                              </Segment>
                                            </div>
                                          </SegmentGroup>
                                        </div>
                                      </SegmentGroup>
                                    </Summary>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                              <GridColumn
                                floated="right"
                                verticalAlignContent="top"
                                width={7}
                              >
                                <GridColumn
                                  floated="right"
                                  verticalAlign="top"
                                  width={7}
                                >
                                  <div
                                    className="right floated top aligned seven wide column"
                                  >
                                    <Modal
                                      hasCloseIcon={true}
                                      hasPadding={true}
                                      hasRoundedCorners={false}
                                      header={
                                        <Summary
                                          areOnlyNightPriceAndRatingDisplayed={false}
                                          isShowingPlaceholder={false}
                                          locationName="Location"
                                          periodText="per night"
                                          pricePerPeriod="250€"
                                          propertyName="Property"
                                          ratingNumber={4.5}
                                        />
                                      }
                                      isFullscreen={true}
                                      onClose={[Function]}
                                      size="tiny"
                                      trigger={
                                        <Button
                                          hasShadow={false}
                                          icon={null}
                                          isCompact={false}
                                          isDisabled={false}
                                          isFluid={false}
                                          isFormSubmit={false}
                                          isLoading={false}
                                          isPositionedRight={true}
                                          isRounded={true}
                                          isSecondary={false}
                                          onClick={[Function]}
                                          size={null}
                                        >
                                          Check our availability
                                        </Button>
                                      }
                                    >
                                      <Modal
                                        className="has-padding"
                                        closeIcon={
                                          <Icon
                                            color={null}
                                            hasBorder={false}
                                            isButton={false}
                                            isCircular={false}
                                            isColorInverted={false}
                                            isDisabled={false}
                                            isLabelLeft={false}
                                            labelText={null}
                                            labelWeight={null}
                                            name="close"
                                            path={null}
                                            size={null}
                                          />
                                        }
                                        closeOnDimmerClick={true}
                                        closeOnDocumentClick={false}
                                        dimmer="inverted"
                                        eventPool="Modal"
                                        onClose={[Function]}
                                        size="fullscreen"
                                        trigger={
                                          <Button
                                            hasShadow={false}
                                            icon={null}
                                            isCompact={false}
                                            isDisabled={false}
                                            isFluid={false}
                                            isFormSubmit={false}
                                            isLoading={false}
                                            isPositionedRight={true}
                                            isRounded={true}
                                            isSecondary={false}
                                            onClick={[Function]}
                                            size={null}
                                          >
                                            Check our availability
                                          </Button>
                                        }
                                      >
                                        <Portal
                                          className="ui inverted page modals dimmer transition visible active"
                                          closeOnDocumentClick={false}
                                          closeOnEscape={true}
                                          closeOnRootNodeClick={true}
                                          eventPool="Modal"
                                          mountNode={<body />}
                                          onClose={[Function]}
                                          onMount={[Function]}
                                          onOpen={[Function]}
                                          onUnmount={[Function]}
                                          openOnTriggerClick={true}
                                          trigger={
                                            <Button
                                              hasShadow={false}
                                              icon={null}
                                              isCompact={false}
                                              isDisabled={false}
                                              isFluid={false}
                                              isFormSubmit={false}
                                              isLoading={false}
                                              isPositionedRight={true}
                                              isRounded={true}
                                              isSecondary={false}
                                              onClick={[Function]}
                                              size={null}
                                            >
                                              Check our availability
                                            </Button>
                                          }
                                        >
                                          <Ref
                                            innerRef={[Function]}
                                          >
                                            <Button
                                              hasShadow={false}
                                              icon={null}
                                              isCompact={false}
                                              isDisabled={false}
                                              isFluid={false}
                                              isFormSubmit={false}
                                              isLoading={false}
                                              isPositionedRight={true}
                                              isRounded={true}
                                              isSecondary={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              size={null}
                                            >
                                              <Button
                                                as="button"
                                                circular={true}
                                                className=""
                                                compact={false}
                                                disabled={false}
                                                floated="right"
                                                fluid={false}
                                                loading={false}
                                                onClick={[Function]}
                                                secondary={false}
                                                size={null}
                                                type="button"
                                              >
                                                <button
                                                  className="ui circular right floated button"
                                                  onClick={[Function]}
                                                  role="button"
                                                  type="button"
                                                >
                                                  Check our availability
                                                </button>
                                              </Button>
                                            </Button>
                                          </Ref>
                                        </Portal>
                                      </Modal>
                                    </Modal>
                                  </div>
                                </GridColumn>
                              </GridColumn>
                            </div>
                          </GridRow>
                        </GridRow>
                      </div>
                    </Grid>
                  </Grid>
                </div>
              </Container>
            </HorizontalGutters>
          </div>
        </SearchBar>
      </div>
    </ShowOn>
  </div>
</PropertyPageSearchBar>
`;
