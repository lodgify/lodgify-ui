// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Description /> if \`props.descriptionText\` is HTML should have the correct structure 1`] = `
<Grid
  areColumnsCentered={false}
  columns={1}
  isStackable={false}
>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Bed & Breakfast
    </Subheading>
    <Heading
      className={null}
      hasMargin={true}
      isColorInverted={false}
      size="large"
      textAlign={null}
    >
      Yolo
    </Heading>
  </GridColumn>
  <Characteristics
    spaceCharacteristics={
      Array [
        Object {
          "iconName": "users",
          "text": "2 guests",
        },
        Object {
          "iconName": "home",
          "text": "1 bedroom",
        },
        Object {
          "iconName": "single bed",
          "text": "2 beds",
        },
        Object {
          "iconName": "bathroom",
          "text": "1 bathroom",
        },
      ]
    }
  />
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <MultiParagraph
      content="
  Livingstone is a modern website template with clean and straight lines. Its special feature is a wide horizontal header photo slideshow in which logo and header navigation nicely blend in.

  <b>I am some HTML</b>

  Maecenas et efficitur diam. Etiam non ante urna. Donec imperdiet cursus lectus, luctus vestibulum urna aliquet vel. Donec non vehicula est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.

  Maecenas et efficitur diam. Etiam non ante urna. Donec imperdiet cursus lectus, luctus vestibulum urna aliquet vel. Donec non vehicula est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.

  Maecenas et efficitur diam. Etiam non ante urna. Donec imperdiet cursus lectus, luctus vestibulum urna aliquet vel. Donec non vehicula est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.
"
      isHtml={true}
      isShowingAll={false}
      showMoreLabel="View more"
    />
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Highlights
    </Subheading>
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="credit cards"
      labelText="credit cards"
      labelWeight={null}
      name="credit card"
      path={null}
      size={null}
    />
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="no children allowed"
      labelText="no children allowed"
      labelWeight={null}
      name="no children"
      path={null}
      size={null}
    />
  </GridColumn>
</Grid>
`;

exports[`<Description /> if \`props.descriptionText\` is a plain string with fewer than 100 words should have the correct structure 1`] = `
<Grid
  areColumnsCentered={false}
  columns={1}
  isStackable={false}
>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Bed & Breakfast
    </Subheading>
    <Heading
      className={null}
      hasMargin={true}
      isColorInverted={false}
      size="large"
      textAlign={null}
    >
      Yolo
    </Heading>
  </GridColumn>
  <Characteristics
    spaceCharacteristics={
      Array [
        Object {
          "iconName": "users",
          "text": "2 guests",
        },
        Object {
          "iconName": "home",
          "text": "1 bedroom",
        },
        Object {
          "iconName": "single bed",
          "text": "2 beds",
        },
        Object {
          "iconName": "bathroom",
          "text": "1 bathroom",
        },
      ]
    }
  />
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <MultiParagraph
      content="
  Livingstone is a modern website template with clean and straight lines. Its special feature is a wide horizontal header photo slideshow in which logo and header navigation nicely blend in.

  Maecenas et efficitur diam. Etiam non ante urna. Donec imperdiet cursus lectus, luctus vestibulum urna aliquet vel. Donec non vehicula est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.
"
      isHtml={false}
      isShowingAll={false}
      showMoreLabel="View more"
    />
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Highlights
    </Subheading>
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="credit cards"
      labelText="credit cards"
      labelWeight={null}
      name="credit card"
      path={null}
      size={null}
    />
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="no children allowed"
      labelText="no children allowed"
      labelWeight={null}
      name="no children"
      path={null}
      size={null}
    />
  </GridColumn>
</Grid>
`;

exports[`<Description /> if \`props.descriptionText\` is a plain string with more than 100 words should have the correct structure 1`] = `
<Grid
  areColumnsCentered={false}
  columns={1}
  isStackable={false}
>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Bed & Breakfast
    </Subheading>
    <Heading
      className={null}
      hasMargin={true}
      isColorInverted={false}
      size="large"
      textAlign={null}
    >
      Yolo
    </Heading>
  </GridColumn>
  <Characteristics
    spaceCharacteristics={
      Array [
        Object {
          "iconName": "users",
          "text": "2 guests",
        },
        Object {
          "iconName": "home",
          "text": "1 bedroom",
        },
        Object {
          "iconName": "single bed",
          "text": "2 beds",
        },
        Object {
          "iconName": "bathroom",
          "text": "1 bathroom",
        },
      ]
    }
  />
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <MultiParagraph
      content="
  Livingstone is a modern website template with clean and straight lines. Its special feature is a wide horizontal header photo slideshow in which logo and header navigation nicely blend in.

  Maecenas et efficitur diam. Etiam non ante urna. Donec imperdiet cursus lectus, luctus vestibulum urna aliquet vel. Donec non vehicula est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.

  Maecenas et efficitur diam. Etiam non ante urna. Donec imperdiet cursus lectus, luctus vestibulum urna aliquet vel. Donec non vehicula est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.

  Maecenas et efficitur diam. Etiam non ante urna. Donec imperdiet cursus lectus, luctus vestibulum urna aliquet vel. Donec non vehicula est. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.
"
      isHtml={false}
      isShowingAll={false}
      showMoreLabel="View more"
    />
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Highlights
    </Subheading>
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="credit cards"
      labelText="credit cards"
      labelWeight={null}
      name="credit card"
      path={null}
      size={null}
    />
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="no children allowed"
      labelText="no children allowed"
      labelWeight={null}
      name="no children"
      path={null}
      size={null}
    />
  </GridColumn>
</Grid>
`;

exports[`<Description /> if \`props.homeHighlights\` is empty should not render the home highlights 1`] = `
<Grid
  areColumnsCentered={false}
  columns={1}
  isStackable={false}
>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Bed & Breakfast
    </Subheading>
    <Heading
      className={null}
      hasMargin={true}
      isColorInverted={false}
      size="large"
      textAlign={null}
    >
      Yolo
    </Heading>
  </GridColumn>
  <Characteristics
    spaceCharacteristics={
      Array [
        Object {
          "iconName": "users",
          "text": "2 guests",
        },
        Object {
          "iconName": "home",
          "text": "1 bedroom",
        },
        Object {
          "iconName": "single bed",
          "text": "2 beds",
        },
        Object {
          "iconName": "bathroom",
          "text": "1 bathroom",
        },
      ]
    }
  />
</Grid>
`;

exports[`<Description /> if \`props.mainCharacteristics\` is empty should not render the \`Characteristics\` component 1`] = `
<Grid
  areColumnsCentered={false}
  columns={1}
  isStackable={false}
>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Bed & Breakfast
    </Subheading>
    <Heading
      className={null}
      hasMargin={true}
      isColorInverted={false}
      size="large"
      textAlign={null}
    >
      Yolo
    </Heading>
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Highlights
    </Subheading>
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="credit cards"
      labelText="credit cards"
      labelWeight={null}
      name="credit card"
      path={null}
      size={null}
    />
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="no children allowed"
      labelText="no children allowed"
      labelWeight={null}
      name="no children"
      path={null}
      size={null}
    />
  </GridColumn>
</Grid>
`;

exports[`<Description /> should have the correct structure 1`] = `
<Grid
  areColumnsCentered={false}
  columns={1}
  isStackable={false}
>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Bed & Breakfast
    </Subheading>
    <Heading
      className={null}
      hasMargin={true}
      isColorInverted={false}
      size="large"
      textAlign={null}
    >
      Yolo
    </Heading>
  </GridColumn>
  <Characteristics
    spaceCharacteristics={
      Array [
        Object {
          "iconName": "users",
          "text": "2 guests",
        },
        Object {
          "iconName": "home",
          "text": "1 bedroom",
        },
        Object {
          "iconName": "single bed",
          "text": "2 beds",
        },
        Object {
          "iconName": "bathroom",
          "text": "1 bathroom",
        },
      ]
    }
  />
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Subheading>
      Highlights
    </Subheading>
  </GridColumn>
  <GridColumn
    verticalAlignContent="top"
    width={12}
  >
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="credit cards"
      labelText="credit cards"
      labelWeight={null}
      name="credit card"
      path={null}
      size={null}
    />
    <Icon
      className={null}
      color={null}
      hasBorder={true}
      isButton={false}
      isCircular={false}
      isColorInverted={false}
      isDisabled={false}
      isLabelLeft={false}
      key="no children allowed"
      labelText="no children allowed"
      labelWeight={null}
      name="no children"
      path={null}
      size={null}
    />
  </GridColumn>
</Grid>
`;
