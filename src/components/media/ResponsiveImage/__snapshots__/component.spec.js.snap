// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResponsiveImage /> by default should have the right structure 1`] = `
<withLazyLoad(ResponsiveImage)
  alternativeText="Alternative Text 😝"
  imageTitle="ResponsiveImage title"
  isAvatar={false}
  isFluid={true}
  isLazyLoaded={true}
  onLoad={[Function]}
  sources={Array []}
>
  <LazyLoader
    componentProps={
      Object {
        "alternativeText": "Alternative Text 😝",
        "imageTitle": "ResponsiveImage title",
        "isAvatar": false,
        "isFluid": true,
        "isLazyLoaded": true,
        "onLoad": [Function],
        "sources": Array [],
      }
    }
    lazyComponent={[Function]}
    lazyProps={Object {}}
  >
    <div />
    <ResponsiveImage
      alternativeText="Alternative Text 😝"
      hasRoundedCorners={false}
      imageHeight={null}
      imageNotFoundLabelText="Image not found!"
      imageTitle="ResponsiveImage title"
      imageUrl=""
      imageWidth={null}
      isAvatar={false}
      isCircular={false}
      isFluid={true}
      isLazyLoaded={true}
      label={null}
      onLoad={[Function]}
      sizes={null}
      sources={Array []}
      srcSet={null}
    >
      <figure
        className="responsive-image is-fluid"
      >
        <Image
          alt="Alternative Text 😝"
          as="img"
          avatar={false}
          fluid={true}
          onLoad={[Function]}
          sizes={null}
          src=""
          srcSet={null}
          title="ResponsiveImage title"
          ui={true}
        >
          <div
            alt="Alternative Text 😝"
            className="ui fluid image"
            onLoad={[Function]}
            sizes={null}
            src=""
            srcSet={null}
            title="ResponsiveImage title"
          >
            <Label
              content="Image not found!"
            >
              <div
                className="ui label"
                onClick={[Function]}
              >
                Image not found!
              </div>
            </Label>
          </div>
        </Image>
      </figure>
    </ResponsiveImage>
    <div />
  </LazyLoader>
</withLazyLoad(ResponsiveImage)>
`;

exports[`<ResponsiveImage /> if \`props.isLazyLoaded\` is false should have the right structure 1`] = `
<withLazyLoad(ResponsiveImage)
  alternativeText="Alternative Text 😝"
  imageTitle="ResponsiveImage title"
  isAvatar={false}
  isFluid={true}
  isLazyLoaded={false}
  onLoad={[Function]}
  sources={Array []}
>
  <ResponsiveImage
    alternativeText="Alternative Text 😝"
    hasRoundedCorners={false}
    imageHeight={null}
    imageNotFoundLabelText="Image not found!"
    imageTitle="ResponsiveImage title"
    imageUrl=""
    imageWidth={null}
    isAvatar={false}
    isCircular={false}
    isFluid={true}
    isLazyLoaded={false}
    label={null}
    onLoad={[Function]}
    sizes={null}
    sources={Array []}
    srcSet={null}
  >
    <figure
      className="responsive-image is-fluid"
    >
      <Image
        alt="Alternative Text 😝"
        as="img"
        avatar={false}
        fluid={true}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="ResponsiveImage title"
        ui={true}
      >
        <div
          alt="Alternative Text 😝"
          className="ui fluid image"
          onLoad={[Function]}
          sizes={null}
          src=""
          srcSet={null}
          title="ResponsiveImage title"
        >
          <Label
            content="Image not found!"
          >
            <div
              className="ui label"
              onClick={[Function]}
            >
              Image not found!
            </div>
          </Label>
        </div>
      </Image>
    </figure>
  </ResponsiveImage>
</withLazyLoad(ResponsiveImage)>
`;

exports[`<ResponsiveImage /> if \`props.label\` is passed should have the right structure 1`] = `
<withLazyLoad(ResponsiveImage)
  alternativeText="Alternative Text 😝"
  imageTitle="ResponsiveImage title"
  isAvatar={false}
  isFluid={true}
  isLazyLoaded={true}
  label="🔷"
  onLoad={[Function]}
  sources={Array []}
>
  <LazyLoader
    componentProps={
      Object {
        "alternativeText": "Alternative Text 😝",
        "imageTitle": "ResponsiveImage title",
        "isAvatar": false,
        "isFluid": true,
        "isLazyLoaded": true,
        "label": "🔷",
        "onLoad": [Function],
        "sources": Array [],
      }
    }
    lazyComponent={[Function]}
    lazyProps={
      Object {
        "imageUrl": undefined,
      }
    }
  >
    <div />
    <ResponsiveImage
      alternativeText="Alternative Text 😝"
      hasRoundedCorners={false}
      imageHeight={null}
      imageNotFoundLabelText="Image not found!"
      imageTitle="ResponsiveImage title"
      imageUrl=""
      imageWidth={null}
      isAvatar={false}
      isCircular={false}
      isFluid={true}
      isLazyLoaded={true}
      label="🔷"
      onLoad={[Function]}
      sizes={null}
      sources={Array []}
      srcSet={null}
    >
      <figure
        className="responsive-image is-fluid"
      >
        <Image
          alt="Alternative Text 😝"
          as="img"
          avatar={false}
          fluid={true}
          onLoad={[Function]}
          sizes={null}
          src=""
          srcSet={null}
          title="ResponsiveImage title"
          ui={true}
        >
          <div
            alt="Alternative Text 😝"
            className="ui fluid image"
            onLoad={[Function]}
            sizes={null}
            src=""
            srcSet={null}
            title="ResponsiveImage title"
          >
            <Label
              content="Image not found!"
            >
              <div
                className="ui label"
                onClick={[Function]}
              >
                Image not found!
              </div>
            </Label>
          </div>
        </Image>
        <Paragraph
          size="medium"
          weight={null}
        >
          <p
            className=""
          >
            🔷
          </p>
        </Paragraph>
      </figure>
    </ResponsiveImage>
    <div />
  </LazyLoader>
</withLazyLoad(ResponsiveImage)>
`;

exports[`<ResponsiveImage /> if \`props.placeholderImageUrl\` is passed should have the right structure 1`] = `
<withLazyLoad(ResponsiveImage)
  alternativeText="Alternative Text 😝"
  imageTitle="ResponsiveImage title"
  isAvatar={false}
  isFluid={true}
  isLazyLoaded={true}
  onLoad={[Function]}
  placeholderImageUrl="ayyy"
  sources={Array []}
>
  <LazyLoader
    componentProps={
      Object {
        "alternativeText": "Alternative Text 😝",
        "imageTitle": "ResponsiveImage title",
        "isAvatar": false,
        "isFluid": true,
        "isLazyLoaded": true,
        "onLoad": [Function],
        "placeholderImageUrl": "ayyy",
        "sources": Array [],
      }
    }
    lazyComponent={[Function]}
    lazyProps={Object {}}
  >
    <div />
    <ResponsiveImage
      alternativeText="Alternative Text 😝"
      hasRoundedCorners={false}
      imageHeight={null}
      imageNotFoundLabelText="Image not found!"
      imageTitle="ResponsiveImage title"
      imageUrl=""
      imageWidth={null}
      isAvatar={false}
      isCircular={false}
      isFluid={true}
      isLazyLoaded={true}
      label={null}
      onLoad={[Function]}
      placeholderImageUrl="ayyy"
      sizes={null}
      sources={Array []}
      srcSet={null}
    >
      <figure
        className="responsive-image has-blurred-children has-placeholder is-fluid"
      >
        <Image
          alt="Alternative Text 😝"
          as="img"
          avatar={false}
          fluid={true}
          onLoad={[Function]}
          sizes={null}
          src=""
          srcSet={null}
          title="ResponsiveImage title"
          ui={true}
        >
          <div
            alt="Alternative Text 😝"
            className="ui fluid image"
            onLoad={[Function]}
            sizes={null}
            src=""
            srcSet={null}
            title="ResponsiveImage title"
          >
            <Label
              content="Image not found!"
            >
              <div
                className="ui label"
                onClick={[Function]}
              >
                Image not found!
              </div>
            </Label>
          </div>
        </Image>
        <Image
          as="img"
          fluid={true}
          src="ayyy"
          ui={true}
        >
          <img
            className="ui fluid image"
            src="ayyy"
          />
        </Image>
      </figure>
    </ResponsiveImage>
    <div />
  </LazyLoader>
</withLazyLoad(ResponsiveImage)>
`;
