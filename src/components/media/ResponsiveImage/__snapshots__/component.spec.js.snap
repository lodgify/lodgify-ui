// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResponsiveImage /> \`render\` by default should have the right structure 1`] = `
<ResponsiveImage
  hasRoundedCorners={false}
  imageHeight={null}
  imageTitle="Image Title"
  imageUrl=""
  imageWidth={null}
  isAvatar={false}
  isCircular={false}
  isFluid={false}
  isLazyLoaded={true}
  label={null}
  sizes={null}
  srcSet={null}
>
  <figure
    className="responsive-image"
    data-testid="responsive-image"
  >
    <Image
      alt="Image Title"
      as="img"
      avatar={false}
      data-testid="responsive-image-img"
      fluid={true}
      onError={[Function]}
      onLoad={[Function]}
      sizes={null}
      src=""
      srcSet={null}
      title="Image Title"
      ui={true}
    >
      <img
        alt="Image Title"
        className="ui fluid image"
        data-testid="responsive-image-img"
        onError={[Function]}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="Image Title"
      />
    </Image>
  </figure>
</ResponsiveImage>
`;

exports[`<ResponsiveImage /> \`render\` if \`props.hasRoundedCorners\` is passed should have the right structure 1`] = `
<ResponsiveImage
  hasRoundedCorners={true}
  imageHeight={null}
  imageTitle="Image Title"
  imageUrl=""
  imageWidth={null}
  isAvatar={false}
  isCircular={false}
  isFluid={false}
  isLazyLoaded={true}
  label={null}
  sizes={null}
  srcSet={null}
>
  <figure
    className="responsive-image is-rounded"
    data-testid="responsive-image"
  >
    <Image
      alt="Image Title"
      as="img"
      avatar={false}
      data-testid="responsive-image-img"
      fluid={true}
      onError={[Function]}
      onLoad={[Function]}
      sizes={null}
      src=""
      srcSet={null}
      title="Image Title"
      ui={true}
    >
      <img
        alt="Image Title"
        className="ui fluid image"
        data-testid="responsive-image-img"
        onError={[Function]}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="Image Title"
      />
    </Image>
  </figure>
</ResponsiveImage>
`;

exports[`<ResponsiveImage /> \`render\` if \`props.isCircular\` is passed should have the right structure 1`] = `
<ResponsiveImage
  hasRoundedCorners={false}
  imageHeight={null}
  imageTitle="Image Title"
  imageUrl=""
  imageWidth={null}
  isAvatar={false}
  isCircular={true}
  isFluid={false}
  isLazyLoaded={true}
  label={null}
  sizes={null}
  srcSet={null}
>
  <figure
    className="responsive-image is-circular"
    data-testid="responsive-image"
  >
    <Image
      alt="Image Title"
      as="img"
      avatar={false}
      data-testid="responsive-image-img"
      fluid={true}
      onError={[Function]}
      onLoad={[Function]}
      sizes={null}
      src=""
      srcSet={null}
      title="Image Title"
      ui={true}
    >
      <img
        alt="Image Title"
        className="ui fluid image"
        data-testid="responsive-image-img"
        onError={[Function]}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="Image Title"
      />
    </Image>
  </figure>
</ResponsiveImage>
`;

exports[`<ResponsiveImage /> \`render\` if \`props.isFluid\` is passed should have the right structure 1`] = `
<ResponsiveImage
  hasRoundedCorners={false}
  imageHeight={null}
  imageTitle="Image Title"
  imageUrl=""
  imageWidth={null}
  isAvatar={false}
  isCircular={false}
  isFluid={true}
  isLazyLoaded={true}
  label={null}
  sizes={null}
  srcSet={null}
>
  <figure
    className="responsive-image is-fluid"
    data-testid="responsive-image"
  >
    <Image
      alt="Image Title"
      as="img"
      avatar={false}
      data-testid="responsive-image-img"
      fluid={true}
      onError={[Function]}
      onLoad={[Function]}
      sizes={null}
      src=""
      srcSet={null}
      title="Image Title"
      ui={true}
    >
      <img
        alt="Image Title"
        className="ui fluid image"
        data-testid="responsive-image-img"
        onError={[Function]}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="Image Title"
      />
    </Image>
  </figure>
</ResponsiveImage>
`;

exports[`<ResponsiveImage /> \`render\` if \`props.isLazyLoaded\` is false should have the right structure 1`] = `
<ResponsiveImage
  hasRoundedCorners={false}
  imageHeight={null}
  imageTitle="Image Title"
  imageUrl=""
  imageWidth={null}
  isAvatar={false}
  isCircular={false}
  isFluid={false}
  isLazyLoaded={false}
  label={null}
  sizes={null}
  srcSet={null}
>
  <figure
    className="responsive-image"
    data-testid="responsive-image"
  >
    <Image
      alt="Image Title"
      as="img"
      avatar={false}
      data-testid="responsive-image-img"
      fluid={true}
      onError={[Function]}
      onLoad={[Function]}
      sizes={null}
      src=""
      srcSet={null}
      title="Image Title"
      ui={true}
    >
      <img
        alt="Image Title"
        className="ui fluid image"
        data-testid="responsive-image-img"
        onError={[Function]}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="Image Title"
      />
    </Image>
  </figure>
</ResponsiveImage>
`;

exports[`<ResponsiveImage /> \`render\` if \`props.label\` is passed should have the right structure 1`] = `
<ResponsiveImage
  hasRoundedCorners={false}
  imageHeight={null}
  imageTitle="Image Title"
  imageUrl=""
  imageWidth={null}
  isAvatar={false}
  isCircular={false}
  isFluid={false}
  isLazyLoaded={true}
  label="ðŸ”·"
  sizes={null}
  srcSet={null}
>
  <figure
    className="responsive-image"
    data-testid="responsive-image"
  >
    <Image
      alt="Image Title"
      as="img"
      avatar={false}
      data-testid="responsive-image-img"
      fluid={true}
      onError={[Function]}
      onLoad={[Function]}
      sizes={null}
      src=""
      srcSet={null}
      title="Image Title"
      ui={true}
    >
      <img
        alt="Image Title"
        className="ui fluid image"
        data-testid="responsive-image-img"
        onError={[Function]}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="Image Title"
      />
    </Image>
    <Paragraph
      data-testid="responsive-image-label"
      isCompact={false}
      size="medium"
      weight={null}
    >
      <p
        className=""
      >
        ðŸ”·
      </p>
    </Paragraph>
  </figure>
</ResponsiveImage>
`;

exports[`<ResponsiveImage /> \`render\` if \`props.placeholderImageUrl\` is passed should have the right structure 1`] = `
<ResponsiveImage
  hasRoundedCorners={false}
  imageHeight={null}
  imageTitle="Image Title"
  imageUrl=""
  imageWidth={null}
  isAvatar={false}
  isCircular={false}
  isFluid={false}
  isLazyLoaded={true}
  label={null}
  placeholderImageUrl="ayyy"
  sizes={null}
  srcSet={null}
>
  <figure
    className="responsive-image has-placeholder"
    data-testid="responsive-image"
  >
    <Image
      alt="Image Title"
      as="img"
      avatar={false}
      data-testid="responsive-image-img"
      fluid={true}
      onError={[Function]}
      onLoad={[Function]}
      sizes={null}
      src=""
      srcSet={null}
      title="Image Title"
      ui={true}
    >
      <img
        alt="Image Title"
        className="ui fluid image"
        data-testid="responsive-image-img"
        onError={[Function]}
        onLoad={[Function]}
        sizes={null}
        src=""
        srcSet={null}
        title="Image Title"
      />
    </Image>
  </figure>
</ResponsiveImage>
`;

exports[`<ResponsiveImage /> should get wrapped by \`withLazyLoad\` 1`] = `
<withLazyLoad(ResponsiveImage)
  isLazyLoaded={true}
>
  <LazyLoader
    componentProps={
      Object {
        "isLazyLoaded": true,
      }
    }
    lazyProps={
      Object {
        "imageUrl": undefined,
        "srcSet": undefined,
      }
    }
  >
    <div />
    <ResponsiveImage
      hasRoundedCorners={false}
      imageHeight={null}
      imageTitle="Image Title"
      imageUrl=""
      imageWidth={null}
      isAvatar={false}
      isCircular={false}
      isFluid={false}
      isLazyLoaded={true}
      label={null}
      sizes={null}
      srcSet={null}
    >
      <figure
        className="responsive-image"
        data-testid="responsive-image"
      >
        <Image
          alt="Image Title"
          as="img"
          avatar={false}
          data-testid="responsive-image-img"
          fluid={true}
          onError={[Function]}
          onLoad={[Function]}
          sizes={null}
          src=""
          srcSet={null}
          title="Image Title"
          ui={true}
        >
          <img
            alt="Image Title"
            className="ui fluid image"
            data-testid="responsive-image-img"
            onError={[Function]}
            onLoad={[Function]}
            sizes={null}
            src=""
            srcSet={null}
            title="Image Title"
          />
        </Image>
      </figure>
    </ResponsiveImage>
    <div />
  </LazyLoader>
</withLazyLoad(ResponsiveImage)>
`;
