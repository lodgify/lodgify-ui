// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FullBleed /> by default should have the right structure 1`] = `
<FullBleed
  bottomOffset="0px"
  hasGradient={false}
  imageUrl="üê±üê±"
  placeholderImageUrl={null}
  sizes={null}
  srcSet={null}
>
  <Segment
    className="full-bleed"
    style={
      Object {
        "--full-bleed-bottom-offset": "0px",
      }
    }
    vertical={true}
  >
    <div
      className="ui vertical segment full-bleed"
      style={
        Object {
          "--full-bleed-bottom-offset": "0px",
        }
      }
    >
      <withLazyLoad(ResponsiveImage)
        imageUrl="üê±üê±"
        isFluid={true}
        isLazyLoaded={true}
        placeholderImageUrl={null}
        sizes={null}
        srcSet={null}
      >
        <LazyLoader
          componentProps={
            Object {
              "imageHeight": undefined,
              "imageWidth": undefined,
              "isFluid": true,
              "isLazyLoaded": true,
              "placeholderImageUrl": null,
              "sizes": null,
            }
          }
          lazyProps={
            Object {
              "imageUrl": "üê±üê±",
              "srcSet": null,
            }
          }
        >
          <div />
          <ResponsiveImage
            alternativeText=""
            hasRoundedCorners={false}
            imageHeight={null}
            imageTitle="Image Title"
            imageUrl=""
            imageWidth={null}
            isAvatar={false}
            isCircular={false}
            isFluid={true}
            isLazyLoaded={true}
            label={null}
            placeholderImageUrl={null}
            sizes={null}
            srcSet={null}
          >
            <figure
              className="responsive-image is-fluid"
            />
          </ResponsiveImage>
          <div />
        </LazyLoader>
      </withLazyLoad(ResponsiveImage)>
    </div>
  </Segment>
</FullBleed>
`;

exports[`<FullBleed /> if \`hasGradient\` is passed should have the right structure 1`] = `
<FullBleed
  bottomOffset="0px"
  hasGradient={true}
  imageUrl="üê±üê±"
  placeholderImageUrl={null}
  sizes={null}
  srcSet={null}
>
  <Segment
    className="full-bleed has-gradient"
    style={
      Object {
        "--full-bleed-bottom-offset": "0px",
      }
    }
    vertical={true}
  >
    <div
      className="ui vertical segment full-bleed has-gradient"
      style={
        Object {
          "--full-bleed-bottom-offset": "0px",
        }
      }
    >
      <withLazyLoad(ResponsiveImage)
        imageUrl="üê±üê±"
        isFluid={true}
        isLazyLoaded={true}
        placeholderImageUrl={null}
        sizes={null}
        srcSet={null}
      >
        <LazyLoader
          componentProps={
            Object {
              "imageHeight": undefined,
              "imageWidth": undefined,
              "isFluid": true,
              "isLazyLoaded": true,
              "placeholderImageUrl": null,
              "sizes": null,
            }
          }
          lazyProps={
            Object {
              "imageUrl": "üê±üê±",
              "srcSet": null,
            }
          }
        >
          <div />
          <ResponsiveImage
            alternativeText=""
            hasRoundedCorners={false}
            imageHeight={null}
            imageTitle="Image Title"
            imageUrl=""
            imageWidth={null}
            isAvatar={false}
            isCircular={false}
            isFluid={true}
            isLazyLoaded={true}
            label={null}
            placeholderImageUrl={null}
            sizes={null}
            srcSet={null}
          >
            <figure
              className="responsive-image is-fluid"
            />
          </ResponsiveImage>
          <div />
        </LazyLoader>
      </withLazyLoad(ResponsiveImage)>
    </div>
  </Segment>
</FullBleed>
`;

exports[`<FullBleed /> if \`props.children > 0\` should have the right structure 1`] = `
<FullBleed
  bottomOffset="0px"
  hasGradient={false}
  imageUrl="üê±üê±"
  placeholderImageUrl={null}
  sizes={null}
  srcSet={null}
>
  <Segment
    className="full-bleed has-children"
    style={
      Object {
        "--full-bleed-bottom-offset": "0px",
      }
    }
    vertical={true}
  >
    <div
      className="ui vertical segment full-bleed has-children"
      style={
        Object {
          "--full-bleed-bottom-offset": "0px",
        }
      }
    >
      <withLazyLoad(ResponsiveImage)
        imageUrl="üê±üê±"
        isFluid={true}
        isLazyLoaded={true}
        placeholderImageUrl={null}
        sizes={null}
        srcSet={null}
      >
        <LazyLoader
          componentProps={
            Object {
              "imageHeight": undefined,
              "imageWidth": undefined,
              "isFluid": true,
              "isLazyLoaded": true,
              "placeholderImageUrl": null,
              "sizes": null,
            }
          }
          lazyProps={
            Object {
              "imageUrl": "üê±üê±",
              "srcSet": null,
            }
          }
        >
          <div />
          <ResponsiveImage
            alternativeText=""
            hasRoundedCorners={false}
            imageHeight={null}
            imageTitle="Image Title"
            imageUrl=""
            imageWidth={null}
            isAvatar={false}
            isCircular={false}
            isFluid={true}
            isLazyLoaded={true}
            label={null}
            placeholderImageUrl={null}
            sizes={null}
            srcSet={null}
          >
            <figure
              className="responsive-image is-fluid"
            />
          </ResponsiveImage>
          <div />
        </LazyLoader>
      </withLazyLoad(ResponsiveImage)>
      üèõ
    </div>
  </Segment>
</FullBleed>
`;
