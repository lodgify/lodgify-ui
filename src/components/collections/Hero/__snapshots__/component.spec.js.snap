// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Hero /> by default should render the right structure 1`] = `
<Hero
  activeNavigationItemIndex={1}
  backgroundImageSizes="a load of sizes"
  backgroundImageSrcSet="a load of sources"
  backgroundImageUrl="https://darkpurple.com"
  bottomOffset="0px"
  headerLogoSizes="a load of logo sizes"
  headerLogoSrc="https://darkgreen.com"
  headerLogoSrcSet="a load of logo src sets"
  headerLogoText="Livingstone Cottage"
  headerNavigationItems={
    Array [
      Object {
        "href": "/",
        "text": "Home",
      },
    ]
  }
  headerPrimaryCTA={
    Object {
      "onClick": [Function],
      "text": "Book now",
    }
  }
  headerSearchBarGuestsOptions={
    Array [
      Object {
        "href": "someHref",
        "text": "someText",
      },
    ]
  }
  headerSearchBarLocationOptions={
    Array [
      Object {
        "href": "anotherHref",
        "text": "anotherText",
      },
    ]
  }
  headerSearchBarModalHeadingText="Heading"
  placeholderBackgroundImageUrl={null}
  searchBarOnChangeInput={[Function]}
  searchBarOnSubmit={[Function]}
>
  <FullBleed
    bottomOffset="0px"
    hasGradient={true}
    imageUrl="https://darkpurple.com"
    placeholderImageUrl={null}
    sizes="a load of sizes"
    srcSet="a load of sources"
  >
    <Segment
      className="full-bleed has-gradient has-children"
      style={
        Object {
          "--full-bleed-bottom-offset": "0px",
        }
      }
      vertical={true}
    >
      <div
        className="ui vertical segment full-bleed has-gradient has-children"
        style={
          Object {
            "--full-bleed-bottom-offset": "0px",
          }
        }
      >
        <ResponsiveImage
          alternativeText="Image Widget"
          hasRoundedCorners={false}
          imageHeight={null}
          imageNotFoundLabelText="Image not found!"
          imageTitle="Image Title"
          imageUrl="https://darkpurple.com"
          imageWidth={null}
          isAvatar={false}
          isCircular={false}
          isFluid={true}
          label={null}
          placeholderImageUrl={null}
          sizes="a load of sizes"
          srcSet="a load of sources"
        >
          <figure
            className="responsive-image is-fluid"
          >
            <Image
              alt="Image Widget"
              as="img"
              avatar={false}
              fluid={true}
              onLoad={[Function]}
              sizes="a load of sizes"
              src="https://darkpurple.com"
              srcSet="a load of sources"
              title="Image Title"
              ui={true}
            >
              <img
                alt="Image Widget"
                className="ui fluid image"
                onLoad={[Function]}
                sizes="a load of sizes"
                src="https://darkpurple.com"
                srcSet="a load of sources"
                title="Image Title"
              />
            </Image>
          </figure>
        </ResponsiveImage>
        <Header
          activeNavigationItemIndex={1}
          isBackgroundFilled={false}
          logoSizes="a load of logo sizes"
          logoSrc="https://darkgreen.com"
          logoSrcSet="a load of logo src sets"
          logoText="Livingstone Cottage"
          navigationItems={
            Array [
              Object {
                "href": "/",
                "text": "Home",
              },
            ]
          }
          primaryCTA={
            Object {
              "onClick": [Function],
              "text": "Book now",
            }
          }
        >
          <header
            className=""
          >
            <HorizontalGutters
              as={[Function]}
              borderless={true}
              text={true}
            >
              <Container
                as={[Function]}
                borderless={true}
                text={true}
              >
                <Menu
                  borderless={true}
                  className="ui text container"
                >
                  <div
                    className="ui borderless ui text container menu"
                  >
                    <MenuItem
                      href="/"
                      link={true}
                    >
                      <a
                        className="link item"
                        href="/"
                        onClick={[Function]}
                      >
                        <Image
                          alt="Livingstone Cottage"
                          as="img"
                          sizes="a load of logo sizes"
                          src="https://darkgreen.com"
                          srcSet="a load of logo src sets"
                          ui={true}
                        >
                          <img
                            alt="Livingstone Cottage"
                            className="ui image"
                            sizes="a load of logo sizes"
                            src="https://darkgreen.com"
                            srcSet="a load of logo src sets"
                          />
                        </Image>
                      </a>
                    </MenuItem>
                    <ShowOn
                      computer={false}
                      mobile={true}
                      parent={[Function]}
                      parentProps={
                        Object {
                          "position": "right",
                        }
                      }
                      tablet={false}
                      widescreen={false}
                    >
                      <MenuMenu
                        className="show-on-mobile"
                        position="right"
                      >
                        <div
                          className="right menu show-on-mobile"
                        >
                          <MenuItem>
                            <div
                              className="item"
                              onClick={[Function]}
                            >
                              <Modal
                                hasCloseIcon={true}
                                hasRoundedCorners={false}
                                isFullscreen={true}
                                onClose={[Function]}
                                size="tiny"
                                trigger={
                                  <Icon
                                    color={null}
                                    hasBorder={false}
                                    isButton={false}
                                    isCircular={false}
                                    isColorInverted={false}
                                    isDisabled={false}
                                    isLabelLeft={false}
                                    labelText={null}
                                    labelWeight={null}
                                    name="bars"
                                    path={null}
                                    size={null}
                                  />
                                }
                              >
                                <Modal
                                  className=""
                                  closeIcon={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="close"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                  closeOnDimmerClick={true}
                                  closeOnDocumentClick={false}
                                  content={
                                    Array [
                                      <MenuItem
                                        href="/"
                                        link={true}
                                      >
                                        <Image
                                          alt="Livingstone Cottage"
                                          as="img"
                                          sizes="a load of logo sizes"
                                          src="https://darkgreen.com"
                                          srcSet="a load of logo src sets"
                                          ui={true}
                                        />
                                      </MenuItem>,
                                      <Menu
                                        text={true}
                                        vertical={true}
                                      >
                                        <MenuItem
                                          active={false}
                                          href="/"
                                          link={true}
                                        >
                                          Home
                                        </MenuItem>
                                      </Menu>,
                                    ]
                                  }
                                  dimmer="inverted"
                                  eventPool="Modal"
                                  onClose={[Function]}
                                  size="fullscreen"
                                  trigger={
                                    <Icon
                                      color={null}
                                      hasBorder={false}
                                      isButton={false}
                                      isCircular={false}
                                      isColorInverted={false}
                                      isDisabled={false}
                                      isLabelLeft={false}
                                      labelText={null}
                                      labelWeight={null}
                                      name="bars"
                                      path={null}
                                      size={null}
                                    />
                                  }
                                >
                                  <Portal
                                    className="ui inverted page modals dimmer transition visible active"
                                    closeOnDocumentClick={false}
                                    closeOnEscape={true}
                                    closeOnRootNodeClick={true}
                                    eventPool="Modal"
                                    mountNode={<body />}
                                    onClose={[Function]}
                                    onMount={[Function]}
                                    onOpen={[Function]}
                                    onUnmount={[Function]}
                                    openOnTriggerClick={true}
                                    trigger={
                                      <Icon
                                        color={null}
                                        hasBorder={false}
                                        isButton={false}
                                        isCircular={false}
                                        isColorInverted={false}
                                        isDisabled={false}
                                        isLabelLeft={false}
                                        labelText={null}
                                        labelWeight={null}
                                        name="bars"
                                        path={null}
                                        size={null}
                                      />
                                    }
                                  >
                                    <Ref
                                      innerRef={[Function]}
                                    >
                                      <Icon
                                        color={null}
                                        hasBorder={false}
                                        isButton={false}
                                        isCircular={false}
                                        isColorInverted={false}
                                        isDisabled={false}
                                        isLabelLeft={false}
                                        labelText={null}
                                        labelWeight={null}
                                        name="bars"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        path={null}
                                        size={null}
                                      >
                                        <i
                                          className="icon"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                        >
                                          <svg
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M20.5,5.06H3.5a.23.23,0,0,0-.24.23V6.64a.24.24,0,0,0,.24.24h17a.24.24,0,0,0,.24-.24V5.29a.23.23,0,0,0-.24-.23Zm0,6H3.5a.24.24,0,0,0-.24.24v1.34a.24.24,0,0,0,.24.24h17a.24.24,0,0,0,.24-.24V11.33a.24.24,0,0,0-.24-.24Zm0,6H3.5a.24.24,0,0,0-.24.24v1.35a.23.23,0,0,0,.24.23h17a.23.23,0,0,0,.24-.23V17.36a.24.24,0,0,0-.24-.24Z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </i>
                                      </Icon>
                                    </Ref>
                                  </Portal>
                                </Modal>
                              </Modal>
                            </div>
                          </MenuItem>
                        </div>
                      </MenuMenu>
                    </ShowOn>
                    <ShowOn
                      computer={true}
                      mobile={false}
                      parent={[Function]}
                      parentProps={
                        Object {
                          "position": "right",
                        }
                      }
                      tablet={true}
                      widescreen={true}
                    >
                      <MenuMenu
                        className="show-on-tablet show-on-computer show-on-widescreen"
                        position="right"
                      >
                        <div
                          className="right menu show-on-tablet show-on-computer show-on-widescreen"
                        >
                          <MenuItem
                            active={false}
                            href="/"
                            key="Home0"
                            link={true}
                          >
                            <a
                              className="link item"
                              href="/"
                              onClick={[Function]}
                            >
                              Home
                            </a>
                          </MenuItem>
                          <MenuItem
                            className="no-underline"
                            link={true}
                          >
                            <div
                              className="link item no-underline"
                              onClick={[Function]}
                            >
                              <Button
                                hasShadow={false}
                                icon={null}
                                isCompact={false}
                                isDisabled={false}
                                isLoading={false}
                                isPositionedRight={false}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                <Button
                                  as="button"
                                  circular={true}
                                  className=""
                                  compact={false}
                                  disabled={false}
                                  floated="left"
                                  loading={false}
                                  onClick={[Function]}
                                  secondary={false}
                                  size={null}
                                >
                                  <button
                                    className="ui circular left floated button"
                                    onClick={[Function]}
                                    role="button"
                                  >
                                    Book now
                                  </button>
                                </Button>
                              </Button>
                            </div>
                          </MenuItem>
                        </div>
                      </MenuMenu>
                    </ShowOn>
                  </div>
                </Menu>
              </Container>
            </HorizontalGutters>
          </header>
        </Header>
      </div>
    </Segment>
  </FullBleed>
</Hero>
`;
