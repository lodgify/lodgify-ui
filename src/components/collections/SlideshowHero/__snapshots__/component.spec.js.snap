// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SlideshowHero /> by default should render the right structure 1`] = `
<SlideshowHero
  headerProps={
    Object {
      "logoText": "logoText",
      "navigationItems": Array [
        Object {
          "href": "/",
          "text": "Home",
        },
        Object {
          "subItems": Array [
            Object {
              "href": "/la-casa-viva",
              "text": "La Casa Viva",
            },
            Object {
              "href": "/la-casa-muerta",
              "text": "La Casa Muerta",
            },
            Object {
              "href": "/the-white-lodge",
              "text": "The White Lodge",
            },
            Object {
              "href": "/the-black-lodge",
              "text": "The Black Lodge",
            },
          ],
          "text": "All properties",
        },
      ],
    }
  }
  headingText="headingText"
  searchBarProps={Object {}}
  slideshowProps={
    Object {
      "images": Array [
        Object {
          "url": "url",
        },
      ],
    }
  }
>
  <FlexContainer
    alignContent={null}
    alignItems={null}
    className={null}
    flexDirection={null}
    flexWrap={null}
    justifyContent={null}
  >
    <div
      className="flex-container"
      style={
        Object {
          "alignContent": null,
          "alignItems": null,
          "display": "flex",
          "flexDirection": null,
          "flexGrow": "1",
          "flexWrap": null,
          "height": "100%",
          "justifyContent": null,
        }
      }
    >
      <div
        className="slideshow-hero"
      >
        <Header
          activeNavigationItemIndex={null}
          isBackgroundFilled={false}
          logoHref="/"
          logoSize="medium"
          logoSrc={null}
          logoSubText={null}
          logoText="logoText"
          navigationItems={
            Array [
              Object {
                "href": "/",
                "text": "Home",
              },
              Object {
                "subItems": Array [
                  Object {
                    "href": "/la-casa-viva",
                    "text": "La Casa Viva",
                  },
                  Object {
                    "href": "/la-casa-muerta",
                    "text": "La Casa Muerta",
                  },
                  Object {
                    "href": "/the-white-lodge",
                    "text": "The White Lodge",
                  },
                  Object {
                    "href": "/the-black-lodge",
                    "text": "The Black Lodge",
                  },
                ],
                "text": "All properties",
              },
            ]
          }
          primaryCTA={null}
        >
          <header
            className="is-opaque"
          >
            <HorizontalGutters
              as={[Function]}
              borderless={true}
              text={true}
            >
              <Container
                as={[Function]}
                borderless={true}
                text={true}
              >
                <Menu
                  borderless={true}
                  className="ui text container"
                >
                  <div
                    className="ui borderless ui text container menu"
                  >
                    <HeaderLogo
                      logoHref="/"
                      logoSize="medium"
                      logoSrc={null}
                      logoSubText={null}
                      logoText="logoText"
                    >
                      <MenuItem
                        className=""
                        href="/"
                        link={true}
                      >
                        <a
                          className="link item"
                          href="/"
                          onClick={[Function]}
                        >
                          <FlexContainer
                            alignContent={null}
                            alignItems={null}
                            className={null}
                            flexDirection="column"
                            flexWrap={null}
                            justifyContent="center"
                          >
                            <div
                              className="flex-container"
                              style={
                                Object {
                                  "alignContent": null,
                                  "alignItems": null,
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "flexGrow": "1",
                                  "flexWrap": null,
                                  "height": "100%",
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <Heading
                                className="header-title"
                                hasMargin={true}
                                isColorInverted={false}
                                size="small"
                                textAlign={null}
                              >
                                <Header
                                  as="h4"
                                  className="header-title"
                                  inverted={false}
                                  textAlign={null}
                                >
                                  <h4
                                    className="ui header header-title"
                                  >
                                    logoText
                                  </h4>
                                </Header>
                              </Heading>
                            </div>
                          </FlexContainer>
                        </a>
                      </MenuItem>
                    </HeaderLogo>
                    <MenuMenu
                      position="right"
                    >
                      <div
                        className="right menu"
                      >
                        <MenuItem
                          active={false}
                          href="/"
                          key="Home0"
                          link={true}
                        >
                          <a
                            className="link item"
                            href="/"
                            onClick={[Function]}
                          >
                            Home
                          </a>
                        </MenuItem>
                        <Submenu
                          isMenuItem={true}
                          isSearchable={false}
                          isSimple={true}
                          isTriggerUnderlined={false}
                          isTriggeredOnHover={true}
                          items={
                            Array [
                              Object {
                                "href": "/la-casa-viva",
                                "text": "La Casa Viva",
                              },
                              Object {
                                "href": "/la-casa-muerta",
                                "text": "La Casa Muerta",
                              },
                              Object {
                                "href": "/the-white-lodge",
                                "text": "The White Lodge",
                              },
                              Object {
                                "href": "/the-black-lodge",
                                "text": "The Black Lodge",
                              },
                            ]
                          }
                          key="All properties1"
                          name={null}
                          noResultsText="No results"
                          onChange={[Function]}
                          pointing="top right"
                          value={null}
                          willOpenAbove={false}
                        >
                          <Dropdown
                            additionLabel="Add "
                            additionPosition="top"
                            className=""
                            closeOnBlur={true}
                            closeOnEscape={true}
                            deburr={false}
                            icon={
                              <Icon
                                className={null}
                                color={null}
                                hasBorder={false}
                                isButton={false}
                                isCircular={false}
                                isColorInverted={false}
                                isDisabled={false}
                                isLabelLeft={false}
                                labelText={null}
                                labelWeight={null}
                                name="caret down"
                                path={null}
                                size="small"
                              />
                            }
                            item={true}
                            minCharacters={1}
                            name={null}
                            noResultsMessage="No results"
                            onChange={[Function]}
                            openOnFocus={true}
                            options={
                              Array [
                                Object {
                                  "href": "/la-casa-viva",
                                  "key": "La Casa Viva",
                                  "text": "La Casa Viva",
                                },
                                Object {
                                  "href": "/la-casa-muerta",
                                  "key": "La Casa Muerta",
                                  "text": "La Casa Muerta",
                                },
                                Object {
                                  "href": "/the-white-lodge",
                                  "key": "The White Lodge",
                                  "text": "The White Lodge",
                                },
                                Object {
                                  "href": "/the-black-lodge",
                                  "key": "The Black Lodge",
                                  "text": "The Black Lodge",
                                },
                              ]
                            }
                            pointing="top right"
                            renderLabel={[Function]}
                            scrolling={true}
                            search={false}
                            searchInput="text"
                            selectOnBlur={true}
                            selectOnNavigation={true}
                            simple={true}
                            trigger="All properties"
                            upward={false}
                            value={null}
                            wrapSelection={true}
                          >
                            <Ref
                              innerRef={
                                Object {
                                  "current": <div
                                    aria-expanded="false"
                                    class="ui item simple scrolling top right pointing dropdown"
                                    role="listbox"
                                    tabindex="0"
                                  >
                                    All properties
                                    <i
                                      class="icon small"
                                    >
                                      <svg
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M20,8.5l-8,7-8-7Z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </i>
                                    <div
                                      class="menu transition"
                                    >
                                      <a
                                        aria-checked="false"
                                        aria-selected="true"
                                        class="selected item"
                                        href="/la-casa-viva"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          La Casa Viva
                                        </span>
                                      </a>
                                      <a
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        href="/la-casa-muerta"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          La Casa Muerta
                                        </span>
                                      </a>
                                      <a
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        href="/the-white-lodge"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          The White Lodge
                                        </span>
                                      </a>
                                      <a
                                        aria-checked="false"
                                        aria-selected="false"
                                        class="item"
                                        href="/the-black-lodge"
                                        role="option"
                                        style="pointer-events: all;"
                                      >
                                        <span
                                          class="text"
                                        >
                                          The Black Lodge
                                        </span>
                                      </a>
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <RefFindNode
                                innerRef={
                                  Object {
                                    "current": <div
                                      aria-expanded="false"
                                      class="ui item simple scrolling top right pointing dropdown"
                                      role="listbox"
                                      tabindex="0"
                                    >
                                      All properties
                                      <i
                                        class="icon small"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M20,8.5l-8,7-8-7Z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </i>
                                      <div
                                        class="menu transition"
                                      >
                                        <a
                                          aria-checked="false"
                                          aria-selected="true"
                                          class="selected item"
                                          href="/la-casa-viva"
                                          role="option"
                                          style="pointer-events: all;"
                                        >
                                          <span
                                            class="text"
                                          >
                                            La Casa Viva
                                          </span>
                                        </a>
                                        <a
                                          aria-checked="false"
                                          aria-selected="false"
                                          class="item"
                                          href="/la-casa-muerta"
                                          role="option"
                                          style="pointer-events: all;"
                                        >
                                          <span
                                            class="text"
                                          >
                                            La Casa Muerta
                                          </span>
                                        </a>
                                        <a
                                          aria-checked="false"
                                          aria-selected="false"
                                          class="item"
                                          href="/the-white-lodge"
                                          role="option"
                                          style="pointer-events: all;"
                                        >
                                          <span
                                            class="text"
                                          >
                                            The White Lodge
                                          </span>
                                        </a>
                                        <a
                                          aria-checked="false"
                                          aria-selected="false"
                                          class="item"
                                          href="/the-black-lodge"
                                          role="option"
                                          style="pointer-events: all;"
                                        >
                                          <span
                                            class="text"
                                          >
                                            The Black Lodge
                                          </span>
                                        </a>
                                      </div>
                                    </div>,
                                  }
                                }
                              >
                                <div
                                  aria-expanded={false}
                                  className="ui item simple scrolling top right pointing dropdown"
                                  name={null}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  role="listbox"
                                  tabIndex={0}
                                >
                                  All properties
                                  <Icon
                                    className=""
                                    color={null}
                                    hasBorder={false}
                                    isButton={false}
                                    isCircular={false}
                                    isColorInverted={false}
                                    isDisabled={false}
                                    isLabelLeft={false}
                                    labelText={null}
                                    labelWeight={null}
                                    name="caret down"
                                    onClick={[Function]}
                                    path={null}
                                    size="small"
                                  >
                                    <i
                                      className="icon small"
                                      onClick={[Function]}
                                    >
                                      <svg
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M20,8.5l-8,7-8-7Z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </i>
                                  </Icon>
                                  <DropdownMenu>
                                    <div
                                      className="menu transition"
                                    >
                                      <DropdownItem
                                        active={false}
                                        href="/la-casa-viva"
                                        key="La Casa Viva"
                                        onClick={[Function]}
                                        selected={true}
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                        text="La Casa Viva"
                                      >
                                        <a
                                          aria-checked={false}
                                          aria-selected={true}
                                          className="selected item"
                                          href="/la-casa-viva"
                                          onClick={[Function]}
                                          role="option"
                                          style={
                                            Object {
                                              "pointerEvents": "all",
                                            }
                                          }
                                        >
                                          <span
                                            className="text"
                                          >
                                            La Casa Viva
                                          </span>
                                        </a>
                                      </DropdownItem>
                                      <DropdownItem
                                        active={false}
                                        href="/la-casa-muerta"
                                        key="La Casa Muerta"
                                        onClick={[Function]}
                                        selected={false}
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                        text="La Casa Muerta"
                                      >
                                        <a
                                          aria-checked={false}
                                          aria-selected={false}
                                          className="item"
                                          href="/la-casa-muerta"
                                          onClick={[Function]}
                                          role="option"
                                          style={
                                            Object {
                                              "pointerEvents": "all",
                                            }
                                          }
                                        >
                                          <span
                                            className="text"
                                          >
                                            La Casa Muerta
                                          </span>
                                        </a>
                                      </DropdownItem>
                                      <DropdownItem
                                        active={false}
                                        href="/the-white-lodge"
                                        key="The White Lodge"
                                        onClick={[Function]}
                                        selected={false}
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                        text="The White Lodge"
                                      >
                                        <a
                                          aria-checked={false}
                                          aria-selected={false}
                                          className="item"
                                          href="/the-white-lodge"
                                          onClick={[Function]}
                                          role="option"
                                          style={
                                            Object {
                                              "pointerEvents": "all",
                                            }
                                          }
                                        >
                                          <span
                                            className="text"
                                          >
                                            The White Lodge
                                          </span>
                                        </a>
                                      </DropdownItem>
                                      <DropdownItem
                                        active={false}
                                        href="/the-black-lodge"
                                        key="The Black Lodge"
                                        onClick={[Function]}
                                        selected={false}
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                        text="The Black Lodge"
                                      >
                                        <a
                                          aria-checked={false}
                                          aria-selected={false}
                                          className="item"
                                          href="/the-black-lodge"
                                          onClick={[Function]}
                                          role="option"
                                          style={
                                            Object {
                                              "pointerEvents": "all",
                                            }
                                          }
                                        >
                                          <span
                                            className="text"
                                          >
                                            The Black Lodge
                                          </span>
                                        </a>
                                      </DropdownItem>
                                    </div>
                                  </DropdownMenu>
                                </div>
                              </RefFindNode>
                            </Ref>
                          </Dropdown>
                        </Submenu>
                      </div>
                    </MenuMenu>
                  </div>
                </Menu>
              </Container>
            </HorizontalGutters>
          </header>
        </Header>
        <div
          className="slideshow-content-container"
        >
          <Slideshow
            hasShadow={true}
            headingText={null}
            images={
              Array [
                Object {
                  "url": "url",
                },
              ]
            }
            isFluid={true}
            isRounded={true}
            isShowingBulletNavigation={false}
            isShowingIndex={false}
            isShowingThumbnails={false}
            isStretched={false}
          >
            <ImageGallery
              additionalClass="fit-width"
              autoPlay={false}
              disableArrowKeys={false}
              disableSwipe={false}
              disableThumbnailScroll={false}
              flickThreshold={0.4}
              indexSeparator=" / "
              infinite={true}
              isRTL={false}
              items={
                Array [
                  Object {
                    "original": "url",
                    "originalAlt": undefined,
                    "originalTitle": undefined,
                    "sizes": undefined,
                    "srcSet": undefined,
                    "thumbnail": "url",
                    "thumbnailAlt": undefined,
                    "thumbnailLabel": undefined,
                  },
                ]
              }
              lazyLoad={true}
              onImageError={[Function]}
              onSlide={[Function]}
              preventDefaultTouchmoveEvent={false}
              renderFullscreenButton={[Function]}
              renderLeftNav={[Function]}
              renderPlayPauseButton={[Function]}
              renderRightNav={[Function]}
              showBullets={false}
              showFullscreenButton={false}
              showIndex={false}
              showNav={true}
              showPlayButton={false}
              showThumbnails={false}
              slideDuration={450}
              slideInterval={3000}
              startIndex={0}
              stopPropagation={false}
              swipeThreshold={30}
              swipingTransitionDuration={0}
              thumbnailPosition="bottom"
              thumbnails={
                Array [
                  Object {
                    "original": "url",
                    "originalAlt": undefined,
                    "originalTitle": undefined,
                    "sizes": undefined,
                    "srcSet": undefined,
                    "thumbnail": "url",
                    "thumbnailAlt": undefined,
                    "thumbnailLabel": undefined,
                  },
                ]
              }
              useBrowserFullscreen={true}
              useTranslate3D={true}
            >
              <div
                aria-live="polite"
                className="image-gallery fit-width "
              >
                <div
                  className="image-gallery-content"
                >
                  <div
                    className="image-gallery-slide-wrapper bottom "
                  >
                    <div
                      className="image-gallery-slides"
                    >
                      <div
                        className="image-gallery-slide center"
                        key="0"
                        style={
                          Object {
                            "MozTransform": "translate3d(0%, 0, 0)",
                            "OTransform": "translate3d(0%, 0, 0)",
                            "WebkitTransform": "translate3d(0%, 0, 0)",
                            "msTransform": "translate3d(0%, 0, 0)",
                            "transform": "translate3d(0%, 0, 0)",
                          }
                        }
                      >
                        <div
                          className="image-gallery-image"
                        >
                          <img
                            onError={[Function]}
                            src="url"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </ImageGallery>
          </Slideshow>
          <div
            className="content-container"
          >
            <ShowOn
              computer={true}
              mobile={false}
              parent={[Function]}
              parentProps={
                Object {
                  "isColorInverted": true,
                  "size": "huge",
                  "textAlign": "center",
                }
              }
              tablet={true}
              widescreen={true}
            >
              <Heading
                className="show-on-tablet show-on-computer show-on-widescreen"
                hasMargin={true}
                isColorInverted={true}
                size="huge"
                textAlign="center"
              >
                <Header
                  as="h1"
                  className="show-on-tablet show-on-computer show-on-widescreen"
                  inverted={true}
                  textAlign="center"
                >
                  <h1
                    className="ui inverted center aligned header show-on-tablet show-on-computer show-on-widescreen"
                  >
                    headingText
                  </h1>
                </Header>
              </Heading>
            </ShowOn>
            <ShowOn
              computer={false}
              mobile={true}
              parent={[Function]}
              parentProps={
                Object {
                  "isColorInverted": true,
                  "size": "large",
                  "textAlign": "center",
                }
              }
              tablet={false}
              widescreen={false}
            >
              <Heading
                className="show-on-mobile"
                hasMargin={true}
                isColorInverted={true}
                size="large"
                textAlign="center"
              >
                <Header
                  as="h2"
                  className="show-on-mobile"
                  inverted={true}
                  textAlign="center"
                >
                  <h2
                    className="ui inverted center aligned header show-on-mobile"
                  >
                    headingText
                  </h2>
                </Header>
              </Heading>
            </ShowOn>
            <Grid
              areColumnsCentered={true}
              isStackable={false}
            >
              <Grid
                centered={true}
                stackable={false}
              >
                <div
                  className="ui centered grid"
                >
                  <GridRow
                    horizontalAlignContent="center"
                  >
                    <GridRow
                      textAlign="center"
                    >
                      <div
                        className="center aligned row"
                      >
                        <ShowOn
                          computer={true}
                          mobile={false}
                          parent={[Function]}
                          parentProps={
                            Object {
                              "isCalendarIconDisplayed": false,
                              "willLocationDropdownOpenAbove": true,
                            }
                          }
                          tablet={true}
                          widescreen={true}
                        >
                          <SearchBar
                            className="show-on-tablet show-on-computer show-on-widescreen"
                            datesCheckInLabel="Check in"
                            datesCheckOutLabel="Check out"
                            datesInputOnFocusChange={[Function]}
                            getIsDayBlocked={[Function]}
                            guestsInputLabel="Guests"
                            isCalendarIconDisplayed={false}
                            isDisplayedAsModal={false}
                            isFixed={false}
                            isStackable={false}
                            locationInputLabel="Location"
                            locationOptions={null}
                            modalHeadingText="Check our availability"
                            modalSummaryElement={null}
                            onChangeInput={[Function]}
                            onSubmit={[Function]}
                            searchButton={
                              <Button
                                hasShadow={false}
                                icon="search"
                                isCompact={false}
                                isDisabled={false}
                                isFluid={false}
                                isFormSubmit={true}
                                isLoading={false}
                                isOutlined={false}
                                isPositionedRight={false}
                                isRounded={true}
                                isSecondary={false}
                                onClick={[Function]}
                                size={null}
                              >
                                Search
                              </Button>
                            }
                            summaryElement={null}
                            willLocationDropdownOpenAbove={true}
                          >
                            <div
                              className="show-on-tablet show-on-computer show-on-widescreen search-bar"
                            >
                              <Form
                                as="form"
                                onSubmit={[Function]}
                              >
                                <form
                                  className="ui form"
                                  onSubmit={[Function]}
                                >
                                  <SearchFields
                                    className="show-on-tablet show-on-computer show-on-widescreen"
                                    datesCheckInLabel="Check in"
                                    datesCheckOutLabel="Check out"
                                    datesInputOnFocusChange={[Function]}
                                    getIsDayBlocked={[Function]}
                                    guestsInputLabel="Guests"
                                    isCalendarIconDisplayed={false}
                                    isDisplayedAsModal={false}
                                    isFixed={false}
                                    isStackable={false}
                                    locationInputLabel="Location"
                                    locationOptions={null}
                                    modalHeadingText="Check our availability"
                                    modalSummaryElement={null}
                                    onChangeInput={[Function]}
                                    onInputChange={[Function]}
                                    onSubmit={[Function]}
                                    searchButton={
                                      <Button
                                        hasShadow={false}
                                        icon="search"
                                        isCompact={false}
                                        isDisabled={false}
                                        isFluid={false}
                                        isFormSubmit={true}
                                        isLoading={false}
                                        isOutlined={false}
                                        isPositionedRight={false}
                                        isRounded={true}
                                        isSecondary={false}
                                        onClick={[Function]}
                                        size={null}
                                      >
                                        Search
                                      </Button>
                                    }
                                    summaryElement={null}
                                    willLocationDropdownOpenAbove={true}
                                  >
                                    <div
                                      className="inputs-container"
                                    >
                                      <div
                                        className="input-container dates-input-container"
                                      >
                                        <WithResponsive(DateRangePicker)
                                          endDatePlaceholderText="Check out"
                                          getIsDayBlocked={[Function]}
                                          isCalendarIconDisplayed={false}
                                          name="dates"
                                          onChange={[Function]}
                                          onFocusChange={[Function]}
                                          startDatePlaceholderText="Check in"
                                          willOpenAbove={true}
                                        >
                                          <Responsive
                                            as={[Function]}
                                            endDatePlaceholderText="Check out"
                                            getIsDayBlocked={[Function]}
                                            getWidth={[Function]}
                                            isCalendarIconDisplayed={false}
                                            isUserOnMobile={false}
                                            name="dates"
                                            onChange={[Function]}
                                            onFocusChange={[Function]}
                                            onUpdate={[Function]}
                                            startDatePlaceholderText="Check in"
                                            willOpenAbove={true}
                                            windowInnerWidth={1024}
                                          >
                                            <DateRangePicker
                                              displayFormat="DD/MM/YYYY"
                                              endDatePlaceholderText="Check out"
                                              error={false}
                                              getIsDayBlocked={[Function]}
                                              isCalendarIconDisplayed={false}
                                              isLoading={false}
                                              isUserOnMobile={false}
                                              isValid={false}
                                              localeCode="en"
                                              name="dates"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocusChange={[Function]}
                                              startDatePlaceholderText="Check in"
                                              willOpenAbove={true}
                                              windowInnerWidth={1024}
                                            >
                                              <InputController
                                                adaptOnChangeEvent={[Function]}
                                                error={false}
                                                icon={null}
                                                inputOnChangeFunctionName="onDatesChange"
                                                isCompact={false}
                                                isFluid={false}
                                                isFocused={false}
                                                isValid={false}
                                                mapValueToProps={[Function]}
                                                name="dates"
                                                onChange={[Function]}
                                                value={null}
                                              >
                                                <Input
                                                  className=""
                                                  fluid={false}
                                                  iconPosition={null}
                                                  name="dates"
                                                  type="text"
                                                  value={null}
                                                >
                                                  <div
                                                    className="ui input"
                                                  >
                                                    <withStyles(DateRangePicker)
                                                      anchorDirection="left"
                                                      appendToBody={false}
                                                      block={false}
                                                      calendarInfoPosition="bottom"
                                                      customArrowIcon={
                                                        <Icon
                                                          className={null}
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="arrow right"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      customCloseIcon={null}
                                                      customInputIcon={null}
                                                      daySize={52}
                                                      disableScroll={false}
                                                      disabled={false}
                                                      displayFormat="DD/MM/YYYY"
                                                      enableOutsideDays={false}
                                                      endDate={null}
                                                      endDateId="end_date_id_3yjwdjdnk3eipfoo"
                                                      endDatePlaceholderText="Check out"
                                                      firstDayOfWeek={null}
                                                      focusedInput={null}
                                                      hideKeyboardShortcutsPanel={true}
                                                      horizontalMargin={0}
                                                      initialVisibleMonth={null}
                                                      inputIconPosition="before"
                                                      isDayBlocked={[Function]}
                                                      isDayHighlighted={[Function]}
                                                      isOutsideRange={[Function]}
                                                      isRTL={false}
                                                      keepFocusOnInput={false}
                                                      keepOpenOnDateSelect={false}
                                                      key=".0"
                                                      minimumNights={1}
                                                      monthFormat="MMMM YYYY"
                                                      navNext={
                                                        <Icon
                                                          className={null}
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="arrow right"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      navPrev={
                                                        <Icon
                                                          className={null}
                                                          color={null}
                                                          hasBorder={false}
                                                          isButton={false}
                                                          isCircular={false}
                                                          isColorInverted={false}
                                                          isDisabled={false}
                                                          isLabelLeft={false}
                                                          labelText={null}
                                                          labelWeight={null}
                                                          name="arrow left"
                                                          path={null}
                                                          size={null}
                                                        />
                                                      }
                                                      noBorder={false}
                                                      numberOfMonths={2}
                                                      onClose={[Function]}
                                                      onDatesChange={[Function]}
                                                      onFocusChange={[Function]}
                                                      onNextMonthClick={[Function]}
                                                      onPrevMonthClick={[Function]}
                                                      openDirection="up"
                                                      orientation="horizontal"
                                                      phrases={
                                                        Object {
                                                          "calendarLabel": "Calendar",
                                                          "chooseAvailableEndDate": [Function],
                                                          "chooseAvailableStartDate": [Function],
                                                          "clearDates": "Clear Dates",
                                                          "closeDatePicker": "Close",
                                                          "dateIsSelected": [Function],
                                                          "dateIsUnavailable": [Function],
                                                          "enterKey": "Enter key",
                                                          "escape": "Escape key",
                                                          "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                                          "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                                          "homeEnd": "Home and end keys",
                                                          "jumpToNextMonth": "Move forward to switch to the next month.",
                                                          "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                                          "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                                          "keyboardShortcuts": "Keyboard Shortcuts",
                                                          "leftArrowRightArrow": "Right and left arrow keys",
                                                          "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                                          "moveFocusByOneMonth": "Switch months.",
                                                          "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                                          "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                                          "openThisPanel": "Open this panel.",
                                                          "pageUpPageDown": "page up and page down keys",
                                                          "questionMark": "Question mark",
                                                          "returnFocusToInput": "Return to the date input field.",
                                                          "selectFocusedDate": "Select the date in focus.",
                                                          "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                                          "upArrowDownArrow": "up and down arrow keys",
                                                        }
                                                      }
                                                      readOnly={false}
                                                      regular={false}
                                                      renderCalendarInfo={null}
                                                      renderDayContents={null}
                                                      renderMonthElement={null}
                                                      renderMonthText={null}
                                                      reopenPickerOnClearDates={false}
                                                      required={false}
                                                      screenReaderInputMessage=""
                                                      showClearDates={true}
                                                      showDefaultInputIcon={false}
                                                      small={false}
                                                      startDate={null}
                                                      startDateId="start_date_id_3yjwdjdnk3eipfop"
                                                      startDatePlaceholderText="Check in"
                                                      verticalHeight={null}
                                                      verticalSpacing={22}
                                                      weekDayFormat="dd"
                                                      withFullScreenPortal={false}
                                                      withPortal={false}
                                                    >
                                                      <DateRangePicker
                                                        anchorDirection="left"
                                                        appendToBody={false}
                                                        block={false}
                                                        calendarInfoPosition="bottom"
                                                        css={[Function]}
                                                        customArrowIcon={
                                                          <Icon
                                                            className={null}
                                                            color={null}
                                                            hasBorder={false}
                                                            isButton={false}
                                                            isCircular={false}
                                                            isColorInverted={false}
                                                            isDisabled={false}
                                                            isLabelLeft={false}
                                                            labelText={null}
                                                            labelWeight={null}
                                                            name="arrow right"
                                                            path={null}
                                                            size={null}
                                                          />
                                                        }
                                                        customCloseIcon={null}
                                                        customInputIcon={null}
                                                        daySize={52}
                                                        disableScroll={false}
                                                        disabled={false}
                                                        displayFormat="DD/MM/YYYY"
                                                        enableOutsideDays={false}
                                                        endDate={null}
                                                        endDateId="end_date_id_3yjwdjdnk3eipfoo"
                                                        endDatePlaceholderText="Check out"
                                                        firstDayOfWeek={null}
                                                        focusedInput={null}
                                                        hideKeyboardShortcutsPanel={true}
                                                        horizontalMargin={0}
                                                        initialVisibleMonth={null}
                                                        inputIconPosition="before"
                                                        isDayBlocked={[Function]}
                                                        isDayHighlighted={[Function]}
                                                        isOutsideRange={[Function]}
                                                        isRTL={false}
                                                        keepFocusOnInput={false}
                                                        keepOpenOnDateSelect={false}
                                                        minimumNights={1}
                                                        monthFormat="MMMM YYYY"
                                                        navNext={
                                                          <Icon
                                                            className={null}
                                                            color={null}
                                                            hasBorder={false}
                                                            isButton={false}
                                                            isCircular={false}
                                                            isColorInverted={false}
                                                            isDisabled={false}
                                                            isLabelLeft={false}
                                                            labelText={null}
                                                            labelWeight={null}
                                                            name="arrow right"
                                                            path={null}
                                                            size={null}
                                                          />
                                                        }
                                                        navPrev={
                                                          <Icon
                                                            className={null}
                                                            color={null}
                                                            hasBorder={false}
                                                            isButton={false}
                                                            isCircular={false}
                                                            isColorInverted={false}
                                                            isDisabled={false}
                                                            isLabelLeft={false}
                                                            labelText={null}
                                                            labelWeight={null}
                                                            name="arrow left"
                                                            path={null}
                                                            size={null}
                                                          />
                                                        }
                                                        noBorder={false}
                                                        numberOfMonths={2}
                                                        onClose={[Function]}
                                                        onDatesChange={[Function]}
                                                        onFocusChange={[Function]}
                                                        onNextMonthClick={[Function]}
                                                        onPrevMonthClick={[Function]}
                                                        openDirection="up"
                                                        orientation="horizontal"
                                                        phrases={
                                                          Object {
                                                            "calendarLabel": "Calendar",
                                                            "chooseAvailableEndDate": [Function],
                                                            "chooseAvailableStartDate": [Function],
                                                            "clearDates": "Clear Dates",
                                                            "closeDatePicker": "Close",
                                                            "dateIsSelected": [Function],
                                                            "dateIsUnavailable": [Function],
                                                            "enterKey": "Enter key",
                                                            "escape": "Escape key",
                                                            "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                                            "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                                            "homeEnd": "Home and end keys",
                                                            "jumpToNextMonth": "Move forward to switch to the next month.",
                                                            "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                                            "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                                            "keyboardShortcuts": "Keyboard Shortcuts",
                                                            "leftArrowRightArrow": "Right and left arrow keys",
                                                            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                                            "moveFocusByOneMonth": "Switch months.",
                                                            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                                            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                                            "openThisPanel": "Open this panel.",
                                                            "pageUpPageDown": "page up and page down keys",
                                                            "questionMark": "Question mark",
                                                            "returnFocusToInput": "Return to the date input field.",
                                                            "selectFocusedDate": "Select the date in focus.",
                                                            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                                            "upArrowDownArrow": "up and down arrow keys",
                                                          }
                                                        }
                                                        readOnly={false}
                                                        regular={false}
                                                        renderCalendarInfo={null}
                                                        renderDayContents={null}
                                                        renderMonthElement={null}
                                                        renderMonthText={null}
                                                        reopenPickerOnClearDates={false}
                                                        required={false}
                                                        screenReaderInputMessage=""
                                                        showClearDates={true}
                                                        showDefaultInputIcon={false}
                                                        small={false}
                                                        startDate={null}
                                                        startDateId="start_date_id_3yjwdjdnk3eipfop"
                                                        startDatePlaceholderText="Check in"
                                                        styles={
                                                          Object {
                                                            "DateRangePicker": "DateRangePicker",
                                                            "DateRangePicker__block": "DateRangePicker__block",
                                                            "DateRangePicker_closeButton": "DateRangePicker_closeButton",
                                                            "DateRangePicker_closeButton_svg": "DateRangePicker_closeButton_svg",
                                                            "DateRangePicker_picker": "DateRangePicker_picker",
                                                            "DateRangePicker_picker__directionLeft": "DateRangePicker_picker__directionLeft",
                                                            "DateRangePicker_picker__directionRight": "DateRangePicker_picker__directionRight",
                                                            "DateRangePicker_picker__fullScreenPortal": "DateRangePicker_picker__fullScreenPortal",
                                                            "DateRangePicker_picker__portal": "DateRangePicker_picker__portal",
                                                            "DateRangePicker_picker__rtl": "DateRangePicker_picker__rtl",
                                                          }
                                                        }
                                                        theme={
                                                          Object {
                                                            "reactDates": Object {
                                                              "border": Object {
                                                                "input": Object {
                                                                  "border": 0,
                                                                  "borderBottom": "2px solid transparent",
                                                                  "borderBottomFocused": "2px solid #008489",
                                                                  "borderFocused": 0,
                                                                  "borderLeft": 0,
                                                                  "borderLeftFocused": 0,
                                                                  "borderRadius": 0,
                                                                  "borderRight": 0,
                                                                  "borderRightFocused": 0,
                                                                  "borderTop": 0,
                                                                  "borderTopFocused": 0,
                                                                  "outlineFocused": 0,
                                                                },
                                                                "pickerInput": Object {
                                                                  "borderRadius": 2,
                                                                  "borderStyle": "solid",
                                                                  "borderWidth": 1,
                                                                },
                                                              },
                                                              "color": Object {
                                                                "background": "#fff",
                                                                "backgroundDark": "#f2f2f2",
                                                                "backgroundFocused": "#fff",
                                                                "blocked_calendar": Object {
                                                                  "backgroundColor": "#cacccd",
                                                                  "backgroundColor_active": "#cacccd",
                                                                  "backgroundColor_hover": "#cacccd",
                                                                  "borderColor": "#cacccd",
                                                                  "borderColor_active": "#cacccd",
                                                                  "borderColor_hover": "#cacccd",
                                                                  "color": "#82888a",
                                                                  "color_active": "#82888a",
                                                                  "color_hover": "#82888a",
                                                                },
                                                                "blocked_out_of_range": Object {
                                                                  "backgroundColor": "#fff",
                                                                  "backgroundColor_active": "#fff",
                                                                  "backgroundColor_hover": "#fff",
                                                                  "borderColor": "#e4e7e7",
                                                                  "borderColor_active": "#e4e7e7",
                                                                  "borderColor_hover": "#e4e7e7",
                                                                  "color": "#cacccd",
                                                                  "color_active": "#cacccd",
                                                                  "color_hover": "#cacccd",
                                                                },
                                                                "border": "rgb(219, 219, 219)",
                                                                "core": Object {
                                                                  "border": "#dbdbdb",
                                                                  "borderBright": "#f4f5f5",
                                                                  "borderLight": "#e4e7e7",
                                                                  "borderLighter": "#eceeee",
                                                                  "borderMedium": "#c4c4c4",
                                                                  "gray": "#484848",
                                                                  "grayLight": "#82888a",
                                                                  "grayLighter": "#cacccd",
                                                                  "grayLightest": "#f2f2f2",
                                                                  "primary": "#00a699",
                                                                  "primaryShade_1": "#33dacd",
                                                                  "primaryShade_2": "#66e2da",
                                                                  "primaryShade_3": "#80e8e0",
                                                                  "primaryShade_4": "#b2f1ec",
                                                                  "primary_dark": "#008489",
                                                                  "secondary": "#007a87",
                                                                  "white": "#fff",
                                                                  "yellow": "#ffe8bc",
                                                                  "yellow_dark": "#ffce71",
                                                                },
                                                                "disabled": "#f2f2f2",
                                                                "highlighted": Object {
                                                                  "backgroundColor": "#ffe8bc",
                                                                  "backgroundColor_active": "#ffce71",
                                                                  "backgroundColor_hover": "#ffce71",
                                                                  "color": "#484848",
                                                                  "color_active": "#484848",
                                                                  "color_hover": "#484848",
                                                                },
                                                                "hoveredSpan": Object {
                                                                  "backgroundColor": "#b2f1ec",
                                                                  "backgroundColor_active": "#80e8e0",
                                                                  "backgroundColor_hover": "#b2f1ec",
                                                                  "borderColor": "#80e8e0",
                                                                  "borderColor_active": "#80e8e0",
                                                                  "borderColor_hover": "#80e8e0",
                                                                  "color": "#007a87",
                                                                  "color_active": "#007a87",
                                                                  "color_hover": "#007a87",
                                                                },
                                                                "minimumNights": Object {
                                                                  "backgroundColor": "#fff",
                                                                  "backgroundColor_active": "#fff",
                                                                  "backgroundColor_hover": "#fff",
                                                                  "borderColor": "#eceeee",
                                                                  "color": "#cacccd",
                                                                  "color_active": "#cacccd",
                                                                  "color_hover": "#cacccd",
                                                                },
                                                                "outside": Object {
                                                                  "backgroundColor": "#fff",
                                                                  "backgroundColor_active": "#fff",
                                                                  "backgroundColor_hover": "#fff",
                                                                  "color": "#484848",
                                                                  "color_active": "#484848",
                                                                  "color_hover": "#484848",
                                                                },
                                                                "placeholderText": "#757575",
                                                                "selected": Object {
                                                                  "backgroundColor": "#00a699",
                                                                  "backgroundColor_active": "#00a699",
                                                                  "backgroundColor_hover": "#00a699",
                                                                  "borderColor": "#00a699",
                                                                  "borderColor_active": "#00a699",
                                                                  "borderColor_hover": "#00a699",
                                                                  "color": "#fff",
                                                                  "color_active": "#fff",
                                                                  "color_hover": "#fff",
                                                                },
                                                                "selectedSpan": Object {
                                                                  "backgroundColor": "#66e2da",
                                                                  "backgroundColor_active": "#33dacd",
                                                                  "backgroundColor_hover": "#33dacd",
                                                                  "borderColor": "#33dacd",
                                                                  "borderColor_active": "#00a699",
                                                                  "borderColor_hover": "#00a699",
                                                                  "color": "#fff",
                                                                  "color_active": "#fff",
                                                                  "color_hover": "#fff",
                                                                },
                                                                "text": "#484848",
                                                                "textDisabled": "#dbdbdb",
                                                                "textFocused": "#007a87",
                                                              },
                                                              "font": Object {
                                                                "captionSize": 18,
                                                                "input": Object {
                                                                  "letterSpacing_small": "0.2px",
                                                                  "lineHeight": "24px",
                                                                  "lineHeight_small": "18px",
                                                                  "size": 19,
                                                                  "size_small": 15,
                                                                  "styleDisabled": "italic",
                                                                },
                                                                "size": 14,
                                                              },
                                                              "noScrollBarOnVerticalScrollable": false,
                                                              "sizing": Object {
                                                                "arrowWidth": 24,
                                                                "inputWidth": 130,
                                                                "inputWidth_small": 97,
                                                              },
                                                              "spacing": Object {
                                                                "captionPaddingBottom": 37,
                                                                "captionPaddingTop": 22,
                                                                "dayPickerHorizontalPadding": 9,
                                                                "displayTextPaddingBottom": 9,
                                                                "displayTextPaddingBottom_small": 5,
                                                                "displayTextPaddingHorizontal": undefined,
                                                                "displayTextPaddingHorizontal_small": undefined,
                                                                "displayTextPaddingLeft": 11,
                                                                "displayTextPaddingLeft_small": 7,
                                                                "displayTextPaddingRight": 11,
                                                                "displayTextPaddingRight_small": 7,
                                                                "displayTextPaddingTop": 11,
                                                                "displayTextPaddingTop_small": 7,
                                                                "displayTextPaddingVertical": undefined,
                                                                "displayTextPaddingVertical_small": undefined,
                                                                "inputPadding": 0,
                                                              },
                                                              "zIndex": 0,
                                                            },
                                                          }
                                                        }
                                                        verticalHeight={null}
                                                        verticalSpacing={22}
                                                        weekDayFormat="dd"
                                                        withFullScreenPortal={false}
                                                        withPortal={false}
                                                      >
                                                        <div
                                                          className="DateRangePicker DateRangePicker_1"
                                                        >
                                                          <OutsideClickHandler
                                                            disabled={false}
                                                            display="block"
                                                            onOutsideClick={[Function]}
                                                            useCapture={true}
                                                          >
                                                            <div>
                                                              <DateRangePickerInputController
                                                                block={false}
                                                                customArrowIcon={
                                                                  <Icon
                                                                    className={null}
                                                                    color={null}
                                                                    hasBorder={false}
                                                                    isButton={false}
                                                                    isCircular={false}
                                                                    isColorInverted={false}
                                                                    isDisabled={false}
                                                                    isLabelLeft={false}
                                                                    labelText={null}
                                                                    labelWeight={null}
                                                                    name="arrow right"
                                                                    path={null}
                                                                    size={null}
                                                                  />
                                                                }
                                                                customCloseIcon={null}
                                                                customInputIcon={null}
                                                                disabled={false}
                                                                displayFormat="DD/MM/YYYY"
                                                                endDate={null}
                                                                endDateId="end_date_id_3yjwdjdnk3eipfoo"
                                                                endDatePlaceholderText="Check out"
                                                                inputIconPosition="before"
                                                                isEndDateFocused={false}
                                                                isFocused={false}
                                                                isOutsideRange={[Function]}
                                                                isRTL={false}
                                                                isStartDateFocused={false}
                                                                keepOpenOnDateSelect={false}
                                                                minimumNights={1}
                                                                noBorder={false}
                                                                onClose={[Function]}
                                                                onDatesChange={[Function]}
                                                                onFocusChange={[Function]}
                                                                onKeyDownArrowDown={[Function]}
                                                                onKeyDownQuestionMark={[Function]}
                                                                openDirection="up"
                                                                phrases={
                                                                  Object {
                                                                    "calendarLabel": "Calendar",
                                                                    "chooseAvailableEndDate": [Function],
                                                                    "chooseAvailableStartDate": [Function],
                                                                    "clearDates": "Clear Dates",
                                                                    "closeDatePicker": "Close",
                                                                    "dateIsSelected": [Function],
                                                                    "dateIsUnavailable": [Function],
                                                                    "enterKey": "Enter key",
                                                                    "escape": "Escape key",
                                                                    "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                                                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                                                    "homeEnd": "Home and end keys",
                                                                    "jumpToNextMonth": "Move forward to switch to the next month.",
                                                                    "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                                                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                                                    "keyboardShortcuts": "Keyboard Shortcuts",
                                                                    "leftArrowRightArrow": "Right and left arrow keys",
                                                                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                                                    "moveFocusByOneMonth": "Switch months.",
                                                                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                                                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                                                    "openThisPanel": "Open this panel.",
                                                                    "pageUpPageDown": "page up and page down keys",
                                                                    "questionMark": "Question mark",
                                                                    "returnFocusToInput": "Return to the date input field.",
                                                                    "selectFocusedDate": "Select the date in focus.",
                                                                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                                                    "upArrowDownArrow": "up and down arrow keys",
                                                                  }
                                                                }
                                                                readOnly={false}
                                                                regular={false}
                                                                reopenPickerOnClearDates={false}
                                                                required={false}
                                                                screenReaderMessage=""
                                                                showCaret={true}
                                                                showClearDates={true}
                                                                showDefaultInputIcon={false}
                                                                small={false}
                                                                startDate={null}
                                                                startDateId="start_date_id_3yjwdjdnk3eipfop"
                                                                startDatePlaceholderText="Check in"
                                                                verticalSpacing={22}
                                                                withFullScreenPortal={false}
                                                              >
                                                                <withStyles(DateRangePickerInput)
                                                                  block={false}
                                                                  customArrowIcon={
                                                                    <Icon
                                                                      className={null}
                                                                      color={null}
                                                                      hasBorder={false}
                                                                      isButton={false}
                                                                      isCircular={false}
                                                                      isColorInverted={false}
                                                                      isDisabled={false}
                                                                      isLabelLeft={false}
                                                                      labelText={null}
                                                                      labelWeight={null}
                                                                      name="arrow right"
                                                                      path={null}
                                                                      size={null}
                                                                    />
                                                                  }
                                                                  customCloseIcon={null}
                                                                  customInputIcon={null}
                                                                  disabled={false}
                                                                  endDate={null}
                                                                  endDateId="end_date_id_3yjwdjdnk3eipfoo"
                                                                  endDatePlaceholderText="Check out"
                                                                  inputIconPosition="before"
                                                                  isEndDateFocused={false}
                                                                  isFocused={false}
                                                                  isRTL={false}
                                                                  isStartDateFocused={false}
                                                                  noBorder={false}
                                                                  onClearDates={[Function]}
                                                                  onEndDateChange={[Function]}
                                                                  onEndDateFocus={[Function]}
                                                                  onEndDateTab={[Function]}
                                                                  onKeyDownArrowDown={[Function]}
                                                                  onKeyDownQuestionMark={[Function]}
                                                                  onStartDateChange={[Function]}
                                                                  onStartDateFocus={[Function]}
                                                                  onStartDateShiftTab={[Function]}
                                                                  openDirection="up"
                                                                  phrases={
                                                                    Object {
                                                                      "calendarLabel": "Calendar",
                                                                      "chooseAvailableEndDate": [Function],
                                                                      "chooseAvailableStartDate": [Function],
                                                                      "clearDates": "Clear Dates",
                                                                      "closeDatePicker": "Close",
                                                                      "dateIsSelected": [Function],
                                                                      "dateIsUnavailable": [Function],
                                                                      "enterKey": "Enter key",
                                                                      "escape": "Escape key",
                                                                      "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                                                      "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                                                      "homeEnd": "Home and end keys",
                                                                      "jumpToNextMonth": "Move forward to switch to the next month.",
                                                                      "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                                                      "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                                                      "keyboardShortcuts": "Keyboard Shortcuts",
                                                                      "leftArrowRightArrow": "Right and left arrow keys",
                                                                      "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                                                      "moveFocusByOneMonth": "Switch months.",
                                                                      "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                                                      "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                                                      "openThisPanel": "Open this panel.",
                                                                      "pageUpPageDown": "page up and page down keys",
                                                                      "questionMark": "Question mark",
                                                                      "returnFocusToInput": "Return to the date input field.",
                                                                      "selectFocusedDate": "Select the date in focus.",
                                                                      "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                                                      "upArrowDownArrow": "up and down arrow keys",
                                                                    }
                                                                  }
                                                                  readOnly={false}
                                                                  regular={false}
                                                                  required={false}
                                                                  screenReaderMessage=""
                                                                  showCaret={true}
                                                                  showClearDates={true}
                                                                  showDefaultInputIcon={false}
                                                                  small={false}
                                                                  startDate={null}
                                                                  startDateId="start_date_id_3yjwdjdnk3eipfop"
                                                                  startDatePlaceholderText="Check in"
                                                                  verticalSpacing={22}
                                                                >
                                                                  <DateRangePickerInput
                                                                    block={false}
                                                                    css={[Function]}
                                                                    customArrowIcon={
                                                                      <Icon
                                                                        className={null}
                                                                        color={null}
                                                                        hasBorder={false}
                                                                        isButton={false}
                                                                        isCircular={false}
                                                                        isColorInverted={false}
                                                                        isDisabled={false}
                                                                        isLabelLeft={false}
                                                                        labelText={null}
                                                                        labelWeight={null}
                                                                        name="arrow right"
                                                                        path={null}
                                                                        size={null}
                                                                      />
                                                                    }
                                                                    customCloseIcon={null}
                                                                    customInputIcon={null}
                                                                    disabled={false}
                                                                    endDate={null}
                                                                    endDateId="end_date_id_3yjwdjdnk3eipfoo"
                                                                    endDatePlaceholderText="Check out"
                                                                    inputIconPosition="before"
                                                                    isEndDateFocused={false}
                                                                    isFocused={false}
                                                                    isRTL={false}
                                                                    isStartDateFocused={false}
                                                                    noBorder={false}
                                                                    onClearDates={[Function]}
                                                                    onEndDateChange={[Function]}
                                                                    onEndDateFocus={[Function]}
                                                                    onEndDateTab={[Function]}
                                                                    onKeyDownArrowDown={[Function]}
                                                                    onKeyDownQuestionMark={[Function]}
                                                                    onStartDateChange={[Function]}
                                                                    onStartDateFocus={[Function]}
                                                                    onStartDateShiftTab={[Function]}
                                                                    openDirection="up"
                                                                    phrases={
                                                                      Object {
                                                                        "calendarLabel": "Calendar",
                                                                        "chooseAvailableEndDate": [Function],
                                                                        "chooseAvailableStartDate": [Function],
                                                                        "clearDates": "Clear Dates",
                                                                        "closeDatePicker": "Close",
                                                                        "dateIsSelected": [Function],
                                                                        "dateIsUnavailable": [Function],
                                                                        "enterKey": "Enter key",
                                                                        "escape": "Escape key",
                                                                        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                                                                        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
                                                                        "homeEnd": "Home and end keys",
                                                                        "jumpToNextMonth": "Move forward to switch to the next month.",
                                                                        "jumpToPrevMonth": "Move backward to switch to the previous month.",
                                                                        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                                                                        "keyboardShortcuts": "Keyboard Shortcuts",
                                                                        "leftArrowRightArrow": "Right and left arrow keys",
                                                                        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
                                                                        "moveFocusByOneMonth": "Switch months.",
                                                                        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
                                                                        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
                                                                        "openThisPanel": "Open this panel.",
                                                                        "pageUpPageDown": "page up and page down keys",
                                                                        "questionMark": "Question mark",
                                                                        "returnFocusToInput": "Return to the date input field.",
                                                                        "selectFocusedDate": "Select the date in focus.",
                                                                        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
                                                                        "upArrowDownArrow": "up and down arrow keys",
                                                                      }
                                                                    }
                                                                    readOnly={false}
                                                                    regular={false}
                                                                    required={false}
                                                                    screenReaderMessage=""
                                                                    showCaret={true}
                                                                    showClearDates={true}
                                                                    showDefaultInputIcon={false}
                                                                    small={false}
                                                                    startDate={null}
                                                                    startDateId="start_date_id_3yjwdjdnk3eipfop"
                                                                    startDatePlaceholderText="Check in"
                                                                    styles={
                                                                      Object {
                                                                        "DateRangePickerInput": "DateRangePickerInput",
                                                                        "DateRangePickerInput__block": "DateRangePickerInput__block",
                                                                        "DateRangePickerInput__disabled": "DateRangePickerInput__disabled",
                                                                        "DateRangePickerInput__rtl": "DateRangePickerInput__rtl",
                                                                        "DateRangePickerInput__showClearDates": "DateRangePickerInput__showClearDates",
                                                                        "DateRangePickerInput__withBorder": "DateRangePickerInput__withBorder",
                                                                        "DateRangePickerInput_arrow": "DateRangePickerInput_arrow",
                                                                        "DateRangePickerInput_arrow_svg": "DateRangePickerInput_arrow_svg",
                                                                        "DateRangePickerInput_calendarIcon": "DateRangePickerInput_calendarIcon",
                                                                        "DateRangePickerInput_calendarIcon_svg": "DateRangePickerInput_calendarIcon_svg",
                                                                        "DateRangePickerInput_clearDates": "DateRangePickerInput_clearDates",
                                                                        "DateRangePickerInput_clearDates__hide": "DateRangePickerInput_clearDates__hide",
                                                                        "DateRangePickerInput_clearDates__small": "DateRangePickerInput_clearDates__small",
                                                                        "DateRangePickerInput_clearDates_default": "DateRangePickerInput_clearDates_default",
                                                                        "DateRangePickerInput_clearDates_svg": "DateRangePickerInput_clearDates_svg",
                                                                        "DateRangePickerInput_clearDates_svg__small": "DateRangePickerInput_clearDates_svg__small",
                                                                      }
                                                                    }
                                                                    theme={
                                                                      Object {
                                                                        "reactDates": Object {
                                                                          "border": Object {
                                                                            "input": Object {
                                                                              "border": 0,
                                                                              "borderBottom": "2px solid transparent",
                                                                              "borderBottomFocused": "2px solid #008489",
                                                                              "borderFocused": 0,
                                                                              "borderLeft": 0,
                                                                              "borderLeftFocused": 0,
                                                                              "borderRadius": 0,
                                                                              "borderRight": 0,
                                                                              "borderRightFocused": 0,
                                                                              "borderTop": 0,
                                                                              "borderTopFocused": 0,
                                                                              "outlineFocused": 0,
                                                                            },
                                                                            "pickerInput": Object {
                                                                              "borderRadius": 2,
                                                                              "borderStyle": "solid",
                                                                              "borderWidth": 1,
                                                                            },
                                                                          },
                                                                          "color": Object {
                                                                            "background": "#fff",
                                                                            "backgroundDark": "#f2f2f2",
                                                                            "backgroundFocused": "#fff",
                                                                            "blocked_calendar": Object {
                                                                              "backgroundColor": "#cacccd",
                                                                              "backgroundColor_active": "#cacccd",
                                                                              "backgroundColor_hover": "#cacccd",
                                                                              "borderColor": "#cacccd",
                                                                              "borderColor_active": "#cacccd",
                                                                              "borderColor_hover": "#cacccd",
                                                                              "color": "#82888a",
                                                                              "color_active": "#82888a",
                                                                              "color_hover": "#82888a",
                                                                            },
                                                                            "blocked_out_of_range": Object {
                                                                              "backgroundColor": "#fff",
                                                                              "backgroundColor_active": "#fff",
                                                                              "backgroundColor_hover": "#fff",
                                                                              "borderColor": "#e4e7e7",
                                                                              "borderColor_active": "#e4e7e7",
                                                                              "borderColor_hover": "#e4e7e7",
                                                                              "color": "#cacccd",
                                                                              "color_active": "#cacccd",
                                                                              "color_hover": "#cacccd",
                                                                            },
                                                                            "border": "rgb(219, 219, 219)",
                                                                            "core": Object {
                                                                              "border": "#dbdbdb",
                                                                              "borderBright": "#f4f5f5",
                                                                              "borderLight": "#e4e7e7",
                                                                              "borderLighter": "#eceeee",
                                                                              "borderMedium": "#c4c4c4",
                                                                              "gray": "#484848",
                                                                              "grayLight": "#82888a",
                                                                              "grayLighter": "#cacccd",
                                                                              "grayLightest": "#f2f2f2",
                                                                              "primary": "#00a699",
                                                                              "primaryShade_1": "#33dacd",
                                                                              "primaryShade_2": "#66e2da",
                                                                              "primaryShade_3": "#80e8e0",
                                                                              "primaryShade_4": "#b2f1ec",
                                                                              "primary_dark": "#008489",
                                                                              "secondary": "#007a87",
                                                                              "white": "#fff",
                                                                              "yellow": "#ffe8bc",
                                                                              "yellow_dark": "#ffce71",
                                                                            },
                                                                            "disabled": "#f2f2f2",
                                                                            "highlighted": Object {
                                                                              "backgroundColor": "#ffe8bc",
                                                                              "backgroundColor_active": "#ffce71",
                                                                              "backgroundColor_hover": "#ffce71",
                                                                              "color": "#484848",
                                                                              "color_active": "#484848",
                                                                              "color_hover": "#484848",
                                                                            },
                                                                            "hoveredSpan": Object {
                                                                              "backgroundColor": "#b2f1ec",
                                                                              "backgroundColor_active": "#80e8e0",
                                                                              "backgroundColor_hover": "#b2f1ec",
                                                                              "borderColor": "#80e8e0",
                                                                              "borderColor_active": "#80e8e0",
                                                                              "borderColor_hover": "#80e8e0",
                                                                              "color": "#007a87",
                                                                              "color_active": "#007a87",
                                                                              "color_hover": "#007a87",
                                                                            },
                                                                            "minimumNights": Object {
                                                                              "backgroundColor": "#fff",
                                                                              "backgroundColor_active": "#fff",
                                                                              "backgroundColor_hover": "#fff",
                                                                              "borderColor": "#eceeee",
                                                                              "color": "#cacccd",
                                                                              "color_active": "#cacccd",
                                                                              "color_hover": "#cacccd",
                                                                            },
                                                                            "outside": Object {
                                                                              "backgroundColor": "#fff",
                                                                              "backgroundColor_active": "#fff",
                                                                              "backgroundColor_hover": "#fff",
                                                                              "color": "#484848",
                                                                              "color_active": "#484848",
                                                                              "color_hover": "#484848",
                                                                            },
                                                                            "placeholderText": "#757575",
                                                                            "selected": Object {
                                                                              "backgroundColor": "#00a699",
                                                                              "backgroundColor_active": "#00a699",
                                                                              "backgroundColor_hover": "#00a699",
                                                                              "borderColor": "#00a699",
                                                                              "borderColor_active": "#00a699",
                                                                              "borderColor_hover": "#00a699",
                                                                              "color": "#fff",
                                                                              "color_active": "#fff",
                                                                              "color_hover": "#fff",
                                                                            },
                                                                            "selectedSpan": Object {
                                                                              "backgroundColor": "#66e2da",
                                                                              "backgroundColor_active": "#33dacd",
                                                                              "backgroundColor_hover": "#33dacd",
                                                                              "borderColor": "#33dacd",
                                                                              "borderColor_active": "#00a699",
                                                                              "borderColor_hover": "#00a699",
                                                                              "color": "#fff",
                                                                              "color_active": "#fff",
                                                                              "color_hover": "#fff",
                                                                            },
                                                                            "text": "#484848",
                                                                            "textDisabled": "#dbdbdb",
                                                                            "textFocused": "#007a87",
                                                                          },
                                                                          "font": Object {
                                                                            "captionSize": 18,
                                                                            "input": Object {
                                                                              "letterSpacing_small": "0.2px",
                                                                              "lineHeight": "24px",
                                                                              "lineHeight_small": "18px",
                                                                              "size": 19,
                                                                              "size_small": 15,
                                                                              "styleDisabled": "italic",
                                                                            },
                                                                            "size": 14,
                                                                          },
                                                                          "noScrollBarOnVerticalScrollable": false,
                                                                          "sizing": Object {
                                                                            "arrowWidth": 24,
                                                                            "inputWidth": 130,
                                                                            "inputWidth_small": 97,
                                                                          },
                                                                          "spacing": Object {
                                                                            "captionPaddingBottom": 37,
                                                                            "captionPaddingTop": 22,
                                                                            "dayPickerHorizontalPadding": 9,
                                                                            "displayTextPaddingBottom": 9,
                                                                            "displayTextPaddingBottom_small": 5,
                                                                            "displayTextPaddingHorizontal": undefined,
                                                                            "displayTextPaddingHorizontal_small": undefined,
                                                                            "displayTextPaddingLeft": 11,
                                                                            "displayTextPaddingLeft_small": 7,
                                                                            "displayTextPaddingRight": 11,
                                                                            "displayTextPaddingRight_small": 7,
                                                                            "displayTextPaddingTop": 11,
                                                                            "displayTextPaddingTop_small": 7,
                                                                            "displayTextPaddingVertical": undefined,
                                                                            "displayTextPaddingVertical_small": undefined,
                                                                            "inputPadding": 0,
                                                                          },
                                                                          "zIndex": 0,
                                                                        },
                                                                      }
                                                                    }
                                                                    verticalSpacing={22}
                                                                  >
                                                                    <div
                                                                      className="DateRangePickerInput DateRangePickerInput_1 DateRangePickerInput__withBorder DateRangePickerInput__withBorder_2 DateRangePickerInput__showClearDates DateRangePickerInput__showClearDates_3"
                                                                    >
                                                                      <withStyles(DateInput)
                                                                        block={false}
                                                                        disabled={false}
                                                                        displayValue={null}
                                                                        focused={false}
                                                                        id="start_date_id_3yjwdjdnk3eipfop"
                                                                        isFocused={false}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDownArrowDown={[Function]}
                                                                        onKeyDownQuestionMark={[Function]}
                                                                        onKeyDownShiftTab={[Function]}
                                                                        onKeyDownTab={[Function]}
                                                                        openDirection="up"
                                                                        placeholder="Check in"
                                                                        readOnly={false}
                                                                        regular={false}
                                                                        required={false}
                                                                        screenReaderMessage="Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                                                        showCaret={true}
                                                                        small={false}
                                                                        verticalSpacing={22}
                                                                      >
                                                                        <DateInput
                                                                          block={false}
                                                                          css={[Function]}
                                                                          disabled={false}
                                                                          displayValue={null}
                                                                          focused={false}
                                                                          id="start_date_id_3yjwdjdnk3eipfop"
                                                                          isFocused={false}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDownArrowDown={[Function]}
                                                                          onKeyDownQuestionMark={[Function]}
                                                                          onKeyDownShiftTab={[Function]}
                                                                          onKeyDownTab={[Function]}
                                                                          openDirection="up"
                                                                          placeholder="Check in"
                                                                          readOnly={false}
                                                                          regular={false}
                                                                          required={false}
                                                                          screenReaderMessage="Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                                                          showCaret={true}
                                                                          small={false}
                                                                          styles={
                                                                            Object {
                                                                              "DateInput": "DateInput",
                                                                              "DateInput__block": "DateInput__block",
                                                                              "DateInput__disabled": "DateInput__disabled",
                                                                              "DateInput__small": "DateInput__small",
                                                                              "DateInput_fang": "DateInput_fang",
                                                                              "DateInput_fangShape": "DateInput_fangShape",
                                                                              "DateInput_fangStroke": "DateInput_fangStroke",
                                                                              "DateInput_input": "DateInput_input",
                                                                              "DateInput_input__disabled": "DateInput_input__disabled",
                                                                              "DateInput_input__focused": "DateInput_input__focused",
                                                                              "DateInput_input__readOnly": "DateInput_input__readOnly",
                                                                              "DateInput_input__regular": "DateInput_input__regular",
                                                                              "DateInput_input__small": "DateInput_input__small",
                                                                              "DateInput_screenReaderMessage": "DateInput_screenReaderMessage",
                                                                            }
                                                                          }
                                                                          theme={
                                                                            Object {
                                                                              "reactDates": Object {
                                                                                "border": Object {
                                                                                  "input": Object {
                                                                                    "border": 0,
                                                                                    "borderBottom": "2px solid transparent",
                                                                                    "borderBottomFocused": "2px solid #008489",
                                                                                    "borderFocused": 0,
                                                                                    "borderLeft": 0,
                                                                                    "borderLeftFocused": 0,
                                                                                    "borderRadius": 0,
                                                                                    "borderRight": 0,
                                                                                    "borderRightFocused": 0,
                                                                                    "borderTop": 0,
                                                                                    "borderTopFocused": 0,
                                                                                    "outlineFocused": 0,
                                                                                  },
                                                                                  "pickerInput": Object {
                                                                                    "borderRadius": 2,
                                                                                    "borderStyle": "solid",
                                                                                    "borderWidth": 1,
                                                                                  },
                                                                                },
                                                                                "color": Object {
                                                                                  "background": "#fff",
                                                                                  "backgroundDark": "#f2f2f2",
                                                                                  "backgroundFocused": "#fff",
                                                                                  "blocked_calendar": Object {
                                                                                    "backgroundColor": "#cacccd",
                                                                                    "backgroundColor_active": "#cacccd",
                                                                                    "backgroundColor_hover": "#cacccd",
                                                                                    "borderColor": "#cacccd",
                                                                                    "borderColor_active": "#cacccd",
                                                                                    "borderColor_hover": "#cacccd",
                                                                                    "color": "#82888a",
                                                                                    "color_active": "#82888a",
                                                                                    "color_hover": "#82888a",
                                                                                  },
                                                                                  "blocked_out_of_range": Object {
                                                                                    "backgroundColor": "#fff",
                                                                                    "backgroundColor_active": "#fff",
                                                                                    "backgroundColor_hover": "#fff",
                                                                                    "borderColor": "#e4e7e7",
                                                                                    "borderColor_active": "#e4e7e7",
                                                                                    "borderColor_hover": "#e4e7e7",
                                                                                    "color": "#cacccd",
                                                                                    "color_active": "#cacccd",
                                                                                    "color_hover": "#cacccd",
                                                                                  },
                                                                                  "border": "rgb(219, 219, 219)",
                                                                                  "core": Object {
                                                                                    "border": "#dbdbdb",
                                                                                    "borderBright": "#f4f5f5",
                                                                                    "borderLight": "#e4e7e7",
                                                                                    "borderLighter": "#eceeee",
                                                                                    "borderMedium": "#c4c4c4",
                                                                                    "gray": "#484848",
                                                                                    "grayLight": "#82888a",
                                                                                    "grayLighter": "#cacccd",
                                                                                    "grayLightest": "#f2f2f2",
                                                                                    "primary": "#00a699",
                                                                                    "primaryShade_1": "#33dacd",
                                                                                    "primaryShade_2": "#66e2da",
                                                                                    "primaryShade_3": "#80e8e0",
                                                                                    "primaryShade_4": "#b2f1ec",
                                                                                    "primary_dark": "#008489",
                                                                                    "secondary": "#007a87",
                                                                                    "white": "#fff",
                                                                                    "yellow": "#ffe8bc",
                                                                                    "yellow_dark": "#ffce71",
                                                                                  },
                                                                                  "disabled": "#f2f2f2",
                                                                                  "highlighted": Object {
                                                                                    "backgroundColor": "#ffe8bc",
                                                                                    "backgroundColor_active": "#ffce71",
                                                                                    "backgroundColor_hover": "#ffce71",
                                                                                    "color": "#484848",
                                                                                    "color_active": "#484848",
                                                                                    "color_hover": "#484848",
                                                                                  },
                                                                                  "hoveredSpan": Object {
                                                                                    "backgroundColor": "#b2f1ec",
                                                                                    "backgroundColor_active": "#80e8e0",
                                                                                    "backgroundColor_hover": "#b2f1ec",
                                                                                    "borderColor": "#80e8e0",
                                                                                    "borderColor_active": "#80e8e0",
                                                                                    "borderColor_hover": "#80e8e0",
                                                                                    "color": "#007a87",
                                                                                    "color_active": "#007a87",
                                                                                    "color_hover": "#007a87",
                                                                                  },
                                                                                  "minimumNights": Object {
                                                                                    "backgroundColor": "#fff",
                                                                                    "backgroundColor_active": "#fff",
                                                                                    "backgroundColor_hover": "#fff",
                                                                                    "borderColor": "#eceeee",
                                                                                    "color": "#cacccd",
                                                                                    "color_active": "#cacccd",
                                                                                    "color_hover": "#cacccd",
                                                                                  },
                                                                                  "outside": Object {
                                                                                    "backgroundColor": "#fff",
                                                                                    "backgroundColor_active": "#fff",
                                                                                    "backgroundColor_hover": "#fff",
                                                                                    "color": "#484848",
                                                                                    "color_active": "#484848",
                                                                                    "color_hover": "#484848",
                                                                                  },
                                                                                  "placeholderText": "#757575",
                                                                                  "selected": Object {
                                                                                    "backgroundColor": "#00a699",
                                                                                    "backgroundColor_active": "#00a699",
                                                                                    "backgroundColor_hover": "#00a699",
                                                                                    "borderColor": "#00a699",
                                                                                    "borderColor_active": "#00a699",
                                                                                    "borderColor_hover": "#00a699",
                                                                                    "color": "#fff",
                                                                                    "color_active": "#fff",
                                                                                    "color_hover": "#fff",
                                                                                  },
                                                                                  "selectedSpan": Object {
                                                                                    "backgroundColor": "#66e2da",
                                                                                    "backgroundColor_active": "#33dacd",
                                                                                    "backgroundColor_hover": "#33dacd",
                                                                                    "borderColor": "#33dacd",
                                                                                    "borderColor_active": "#00a699",
                                                                                    "borderColor_hover": "#00a699",
                                                                                    "color": "#fff",
                                                                                    "color_active": "#fff",
                                                                                    "color_hover": "#fff",
                                                                                  },
                                                                                  "text": "#484848",
                                                                                  "textDisabled": "#dbdbdb",
                                                                                  "textFocused": "#007a87",
                                                                                },
                                                                                "font": Object {
                                                                                  "captionSize": 18,
                                                                                  "input": Object {
                                                                                    "letterSpacing_small": "0.2px",
                                                                                    "lineHeight": "24px",
                                                                                    "lineHeight_small": "18px",
                                                                                    "size": 19,
                                                                                    "size_small": 15,
                                                                                    "styleDisabled": "italic",
                                                                                  },
                                                                                  "size": 14,
                                                                                },
                                                                                "noScrollBarOnVerticalScrollable": false,
                                                                                "sizing": Object {
                                                                                  "arrowWidth": 24,
                                                                                  "inputWidth": 130,
                                                                                  "inputWidth_small": 97,
                                                                                },
                                                                                "spacing": Object {
                                                                                  "captionPaddingBottom": 37,
                                                                                  "captionPaddingTop": 22,
                                                                                  "dayPickerHorizontalPadding": 9,
                                                                                  "displayTextPaddingBottom": 9,
                                                                                  "displayTextPaddingBottom_small": 5,
                                                                                  "displayTextPaddingHorizontal": undefined,
                                                                                  "displayTextPaddingHorizontal_small": undefined,
                                                                                  "displayTextPaddingLeft": 11,
                                                                                  "displayTextPaddingLeft_small": 7,
                                                                                  "displayTextPaddingRight": 11,
                                                                                  "displayTextPaddingRight_small": 7,
                                                                                  "displayTextPaddingTop": 11,
                                                                                  "displayTextPaddingTop_small": 7,
                                                                                  "displayTextPaddingVertical": undefined,
                                                                                  "displayTextPaddingVertical_small": undefined,
                                                                                  "inputPadding": 0,
                                                                                },
                                                                                "zIndex": 0,
                                                                              },
                                                                            }
                                                                          }
                                                                          verticalSpacing={22}
                                                                        >
                                                                          <div
                                                                            className="DateInput DateInput_1"
                                                                          >
                                                                            <input
                                                                              aria-describedby="DateInput__screen-reader-message-start_date_id_3yjwdjdnk3eipfop"
                                                                              aria-label="Check in"
                                                                              autoComplete="off"
                                                                              className="DateInput_input DateInput_input_1"
                                                                              disabled={false}
                                                                              id="start_date_id_3yjwdjdnk3eipfop"
                                                                              name="start_date_id_3yjwdjdnk3eipfop"
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              placeholder="Check in"
                                                                              readOnly={false}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                            <p
                                                                              className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                                                                              id="DateInput__screen-reader-message-start_date_id_3yjwdjdnk3eipfop"
                                                                            >
                                                                              Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
                                                                            </p>
                                                                          </div>
                                                                        </DateInput>
                                                                      </withStyles(DateInput)>
                                                                      <div
                                                                        aria-hidden="true"
                                                                        className="DateRangePickerInput_arrow DateRangePickerInput_arrow_1"
                                                                        role="presentation"
                                                                      >
                                                                        <Icon
                                                                          className={null}
                                                                          color={null}
                                                                          hasBorder={false}
                                                                          isButton={false}
                                                                          isCircular={false}
                                                                          isColorInverted={false}
                                                                          isDisabled={false}
                                                                          isLabelLeft={false}
                                                                          labelText={null}
                                                                          labelWeight={null}
                                                                          name="arrow right"
                                                                          path={null}
                                                                          size={null}
                                                                        >
                                                                          <i
                                                                            className="icon"
                                                                          >
                                                                            <svg
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M19.49,12a.48.48,0,0,1-.13.39l-4.5,4.5a.51.51,0,0,1-.7,0,.51.51,0,0,1-.15-.36.5.5,0,0,1,.15-.35l3.64-3.65H5a.5.5,0,0,1-.5-.5V12a.5.5,0,0,1,.5-.5H17.8L14.16,7.82A.5.5,0,0,1,14,7.47a.51.51,0,0,1,.15-.36.5.5,0,0,1,.7,0l4.5,4.5A.48.48,0,0,1,19.49,12Z"
                                                                                fill="currentColor"
                                                                              />
                                                                            </svg>
                                                                          </i>
                                                                        </Icon>
                                                                      </div>
                                                                      <withStyles(DateInput)
                                                                        block={false}
                                                                        disabled={false}
                                                                        displayValue={null}
                                                                        focused={false}
                                                                        id="end_date_id_3yjwdjdnk3eipfoo"
                                                                        isFocused={false}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDownArrowDown={[Function]}
                                                                        onKeyDownQuestionMark={[Function]}
                                                                        onKeyDownShiftTab={[Function]}
                                                                        onKeyDownTab={[Function]}
                                                                        openDirection="up"
                                                                        placeholder="Check out"
                                                                        readOnly={false}
                                                                        regular={false}
                                                                        required={false}
                                                                        screenReaderMessage="Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                                                        showCaret={true}
                                                                        small={false}
                                                                        verticalSpacing={22}
                                                                      >
                                                                        <DateInput
                                                                          block={false}
                                                                          css={[Function]}
                                                                          disabled={false}
                                                                          displayValue={null}
                                                                          focused={false}
                                                                          id="end_date_id_3yjwdjdnk3eipfoo"
                                                                          isFocused={false}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDownArrowDown={[Function]}
                                                                          onKeyDownQuestionMark={[Function]}
                                                                          onKeyDownShiftTab={[Function]}
                                                                          onKeyDownTab={[Function]}
                                                                          openDirection="up"
                                                                          placeholder="Check out"
                                                                          readOnly={false}
                                                                          regular={false}
                                                                          required={false}
                                                                          screenReaderMessage="Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates."
                                                                          showCaret={true}
                                                                          small={false}
                                                                          styles={
                                                                            Object {
                                                                              "DateInput": "DateInput",
                                                                              "DateInput__block": "DateInput__block",
                                                                              "DateInput__disabled": "DateInput__disabled",
                                                                              "DateInput__small": "DateInput__small",
                                                                              "DateInput_fang": "DateInput_fang",
                                                                              "DateInput_fangShape": "DateInput_fangShape",
                                                                              "DateInput_fangStroke": "DateInput_fangStroke",
                                                                              "DateInput_input": "DateInput_input",
                                                                              "DateInput_input__disabled": "DateInput_input__disabled",
                                                                              "DateInput_input__focused": "DateInput_input__focused",
                                                                              "DateInput_input__readOnly": "DateInput_input__readOnly",
                                                                              "DateInput_input__regular": "DateInput_input__regular",
                                                                              "DateInput_input__small": "DateInput_input__small",
                                                                              "DateInput_screenReaderMessage": "DateInput_screenReaderMessage",
                                                                            }
                                                                          }
                                                                          theme={
                                                                            Object {
                                                                              "reactDates": Object {
                                                                                "border": Object {
                                                                                  "input": Object {
                                                                                    "border": 0,
                                                                                    "borderBottom": "2px solid transparent",
                                                                                    "borderBottomFocused": "2px solid #008489",
                                                                                    "borderFocused": 0,
                                                                                    "borderLeft": 0,
                                                                                    "borderLeftFocused": 0,
                                                                                    "borderRadius": 0,
                                                                                    "borderRight": 0,
                                                                                    "borderRightFocused": 0,
                                                                                    "borderTop": 0,
                                                                                    "borderTopFocused": 0,
                                                                                    "outlineFocused": 0,
                                                                                  },
                                                                                  "pickerInput": Object {
                                                                                    "borderRadius": 2,
                                                                                    "borderStyle": "solid",
                                                                                    "borderWidth": 1,
                                                                                  },
                                                                                },
                                                                                "color": Object {
                                                                                  "background": "#fff",
                                                                                  "backgroundDark": "#f2f2f2",
                                                                                  "backgroundFocused": "#fff",
                                                                                  "blocked_calendar": Object {
                                                                                    "backgroundColor": "#cacccd",
                                                                                    "backgroundColor_active": "#cacccd",
                                                                                    "backgroundColor_hover": "#cacccd",
                                                                                    "borderColor": "#cacccd",
                                                                                    "borderColor_active": "#cacccd",
                                                                                    "borderColor_hover": "#cacccd",
                                                                                    "color": "#82888a",
                                                                                    "color_active": "#82888a",
                                                                                    "color_hover": "#82888a",
                                                                                  },
                                                                                  "blocked_out_of_range": Object {
                                                                                    "backgroundColor": "#fff",
                                                                                    "backgroundColor_active": "#fff",
                                                                                    "backgroundColor_hover": "#fff",
                                                                                    "borderColor": "#e4e7e7",
                                                                                    "borderColor_active": "#e4e7e7",
                                                                                    "borderColor_hover": "#e4e7e7",
                                                                                    "color": "#cacccd",
                                                                                    "color_active": "#cacccd",
                                                                                    "color_hover": "#cacccd",
                                                                                  },
                                                                                  "border": "rgb(219, 219, 219)",
                                                                                  "core": Object {
                                                                                    "border": "#dbdbdb",
                                                                                    "borderBright": "#f4f5f5",
                                                                                    "borderLight": "#e4e7e7",
                                                                                    "borderLighter": "#eceeee",
                                                                                    "borderMedium": "#c4c4c4",
                                                                                    "gray": "#484848",
                                                                                    "grayLight": "#82888a",
                                                                                    "grayLighter": "#cacccd",
                                                                                    "grayLightest": "#f2f2f2",
                                                                                    "primary": "#00a699",
                                                                                    "primaryShade_1": "#33dacd",
                                                                                    "primaryShade_2": "#66e2da",
                                                                                    "primaryShade_3": "#80e8e0",
                                                                                    "primaryShade_4": "#b2f1ec",
                                                                                    "primary_dark": "#008489",
                                                                                    "secondary": "#007a87",
                                                                                    "white": "#fff",
                                                                                    "yellow": "#ffe8bc",
                                                                                    "yellow_dark": "#ffce71",
                                                                                  },
                                                                                  "disabled": "#f2f2f2",
                                                                                  "highlighted": Object {
                                                                                    "backgroundColor": "#ffe8bc",
                                                                                    "backgroundColor_active": "#ffce71",
                                                                                    "backgroundColor_hover": "#ffce71",
                                                                                    "color": "#484848",
                                                                                    "color_active": "#484848",
                                                                                    "color_hover": "#484848",
                                                                                  },
                                                                                  "hoveredSpan": Object {
                                                                                    "backgroundColor": "#b2f1ec",
                                                                                    "backgroundColor_active": "#80e8e0",
                                                                                    "backgroundColor_hover": "#b2f1ec",
                                                                                    "borderColor": "#80e8e0",
                                                                                    "borderColor_active": "#80e8e0",
                                                                                    "borderColor_hover": "#80e8e0",
                                                                                    "color": "#007a87",
                                                                                    "color_active": "#007a87",
                                                                                    "color_hover": "#007a87",
                                                                                  },
                                                                                  "minimumNights": Object {
                                                                                    "backgroundColor": "#fff",
                                                                                    "backgroundColor_active": "#fff",
                                                                                    "backgroundColor_hover": "#fff",
                                                                                    "borderColor": "#eceeee",
                                                                                    "color": "#cacccd",
                                                                                    "color_active": "#cacccd",
                                                                                    "color_hover": "#cacccd",
                                                                                  },
                                                                                  "outside": Object {
                                                                                    "backgroundColor": "#fff",
                                                                                    "backgroundColor_active": "#fff",
                                                                                    "backgroundColor_hover": "#fff",
                                                                                    "color": "#484848",
                                                                                    "color_active": "#484848",
                                                                                    "color_hover": "#484848",
                                                                                  },
                                                                                  "placeholderText": "#757575",
                                                                                  "selected": Object {
                                                                                    "backgroundColor": "#00a699",
                                                                                    "backgroundColor_active": "#00a699",
                                                                                    "backgroundColor_hover": "#00a699",
                                                                                    "borderColor": "#00a699",
                                                                                    "borderColor_active": "#00a699",
                                                                                    "borderColor_hover": "#00a699",
                                                                                    "color": "#fff",
                                                                                    "color_active": "#fff",
                                                                                    "color_hover": "#fff",
                                                                                  },
                                                                                  "selectedSpan": Object {
                                                                                    "backgroundColor": "#66e2da",
                                                                                    "backgroundColor_active": "#33dacd",
                                                                                    "backgroundColor_hover": "#33dacd",
                                                                                    "borderColor": "#33dacd",
                                                                                    "borderColor_active": "#00a699",
                                                                                    "borderColor_hover": "#00a699",
                                                                                    "color": "#fff",
                                                                                    "color_active": "#fff",
                                                                                    "color_hover": "#fff",
                                                                                  },
                                                                                  "text": "#484848",
                                                                                  "textDisabled": "#dbdbdb",
                                                                                  "textFocused": "#007a87",
                                                                                },
                                                                                "font": Object {
                                                                                  "captionSize": 18,
                                                                                  "input": Object {
                                                                                    "letterSpacing_small": "0.2px",
                                                                                    "lineHeight": "24px",
                                                                                    "lineHeight_small": "18px",
                                                                                    "size": 19,
                                                                                    "size_small": 15,
                                                                                    "styleDisabled": "italic",
                                                                                  },
                                                                                  "size": 14,
                                                                                },
                                                                                "noScrollBarOnVerticalScrollable": false,
                                                                                "sizing": Object {
                                                                                  "arrowWidth": 24,
                                                                                  "inputWidth": 130,
                                                                                  "inputWidth_small": 97,
                                                                                },
                                                                                "spacing": Object {
                                                                                  "captionPaddingBottom": 37,
                                                                                  "captionPaddingTop": 22,
                                                                                  "dayPickerHorizontalPadding": 9,
                                                                                  "displayTextPaddingBottom": 9,
                                                                                  "displayTextPaddingBottom_small": 5,
                                                                                  "displayTextPaddingHorizontal": undefined,
                                                                                  "displayTextPaddingHorizontal_small": undefined,
                                                                                  "displayTextPaddingLeft": 11,
                                                                                  "displayTextPaddingLeft_small": 7,
                                                                                  "displayTextPaddingRight": 11,
                                                                                  "displayTextPaddingRight_small": 7,
                                                                                  "displayTextPaddingTop": 11,
                                                                                  "displayTextPaddingTop_small": 7,
                                                                                  "displayTextPaddingVertical": undefined,
                                                                                  "displayTextPaddingVertical_small": undefined,
                                                                                  "inputPadding": 0,
                                                                                },
                                                                                "zIndex": 0,
                                                                              },
                                                                            }
                                                                          }
                                                                          verticalSpacing={22}
                                                                        >
                                                                          <div
                                                                            className="DateInput DateInput_1"
                                                                          >
                                                                            <input
                                                                              aria-describedby="DateInput__screen-reader-message-end_date_id_3yjwdjdnk3eipfoo"
                                                                              aria-label="Check out"
                                                                              autoComplete="off"
                                                                              className="DateInput_input DateInput_input_1"
                                                                              disabled={false}
                                                                              id="end_date_id_3yjwdjdnk3eipfoo"
                                                                              name="end_date_id_3yjwdjdnk3eipfoo"
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              placeholder="Check out"
                                                                              readOnly={false}
                                                                              required={false}
                                                                              type="text"
                                                                              value=""
                                                                            />
                                                                            <p
                                                                              className="DateInput_screenReaderMessage DateInput_screenReaderMessage_1"
                                                                              id="DateInput__screen-reader-message-end_date_id_3yjwdjdnk3eipfoo"
                                                                            >
                                                                              Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.
                                                                            </p>
                                                                          </div>
                                                                        </DateInput>
                                                                      </withStyles(DateInput)>
                                                                      <button
                                                                        aria-label="Clear Dates"
                                                                        className="DateRangePickerInput_clearDates DateRangePickerInput_clearDates_1 DateRangePickerInput_clearDates_default DateRangePickerInput_clearDates_default_2 DateRangePickerInput_clearDates__hide DateRangePickerInput_clearDates__hide_3"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        <CloseButton
                                                                          className="DateRangePickerInput_clearDates_svg DateRangePickerInput_clearDates_svg_1"
                                                                          viewBox="0 0 12 12"
                                                                        >
                                                                          <svg
                                                                            className="DateRangePickerInput_clearDates_svg DateRangePickerInput_clearDates_svg_1"
                                                                            viewBox="0 0 12 12"
                                                                          >
                                                                            <path
                                                                              d="M11.53.47a.75.75 0 0 0-1.061 0l-4.47 4.47L1.529.47A.75.75 0 1 0 .468 1.531l4.47 4.47-4.47 4.47a.75.75 0 1 0 1.061 1.061l4.47-4.47 4.47 4.47a.75.75 0 1 0 1.061-1.061l-4.47-4.47 4.47-4.47a.75.75 0 0 0 0-1.061z"
                                                                              fillRule="evenodd"
                                                                            />
                                                                          </svg>
                                                                        </CloseButton>
                                                                      </button>
                                                                    </div>
                                                                  </DateRangePickerInput>
                                                                </withStyles(DateRangePickerInput)>
                                                              </DateRangePickerInputController>
                                                            </div>
                                                          </OutsideClickHandler>
                                                        </div>
                                                      </DateRangePicker>
                                                    </withStyles(DateRangePicker)>
                                                  </div>
                                                </Input>
                                              </InputController>
                                              <div />
                                            </DateRangePicker>
                                          </Responsive>
                                        </WithResponsive(DateRangePicker)>
                                      </div>
                                      <div
                                        className="input-container guests-input-container"
                                      >
                                        <CounterDropdown
                                          counterName="guests"
                                          dropdownLabel="Guests"
                                          onChange={[Function]}
                                          willOpenAbove={false}
                                        >
                                          <Popup
                                            className="counter-dropdown"
                                            content={
                                              <FlexContainer
                                                alignContent={null}
                                                alignItems={null}
                                                className={null}
                                                flexDirection="row"
                                                flexWrap={null}
                                                justifyContent="space-between"
                                              >
                                                <Counter
                                                  min={0}
                                                  name="guests"
                                                  onChange={[Function]}
                                                  renderValue={[Function]}
                                                  value={0}
                                                />
                                              </FlexContainer>
                                            }
                                            disabled={false}
                                            eventsEnabled={true}
                                            offset={0}
                                            on="click"
                                            onClose={[Function]}
                                            onOpen={[Function]}
                                            open={false}
                                            pinned={false}
                                            position="bottom left"
                                            text="Guests"
                                            trigger={
                                              <div
                                                className="dropdown-container"
                                                role="button"
                                              >
                                                <div
                                                  className="ui selection dropdown counter-dropdown-trigger"
                                                >
                                                  Guests
                                                  <Icon
                                                    className={null}
                                                    color={null}
                                                    hasBorder={false}
                                                    isButton={false}
                                                    isCircular={false}
                                                    isColorInverted={false}
                                                    isDisabled={false}
                                                    isLabelLeft={false}
                                                    labelText={null}
                                                    labelWeight={null}
                                                    name="caret down"
                                                    path={null}
                                                    size={null}
                                                  />
                                                </div>
                                              </div>
                                            }
                                          >
                                            <Portal
                                              closeOnDocumentClick={true}
                                              closeOnEscape={true}
                                              closeOnTriggerClick={true}
                                              eventPool="default"
                                              onClose={[Function]}
                                              onMount={[Function]}
                                              onOpen={[Function]}
                                              onUnmount={[Function]}
                                              open={false}
                                              openOnTriggerClick={true}
                                              trigger={
                                                <div
                                                  className="dropdown-container"
                                                  role="button"
                                                >
                                                  <div
                                                    className="ui selection dropdown counter-dropdown-trigger"
                                                  >
                                                    Guests
                                                    <Icon
                                                      className={null}
                                                      color={null}
                                                      hasBorder={false}
                                                      isButton={false}
                                                      isCircular={false}
                                                      isColorInverted={false}
                                                      isDisabled={false}
                                                      isLabelLeft={false}
                                                      labelText={null}
                                                      labelWeight={null}
                                                      name="caret down"
                                                      path={null}
                                                      size={null}
                                                    />
                                                  </div>
                                                </div>
                                              }
                                              triggerRef={
                                                Object {
                                                  "current": <div
                                                    class="dropdown-container"
                                                    role="button"
                                                  >
                                                    <div
                                                      class="ui selection dropdown counter-dropdown-trigger"
                                                    >
                                                      Guests
                                                      <i
                                                        class="icon"
                                                      >
                                                        <svg
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M20,8.5l-8,7-8-7Z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </i>
                                                    </div>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Ref
                                                innerRef={[Function]}
                                              >
                                                <RefFindNode
                                                  innerRef={[Function]}
                                                >
                                                  <div
                                                    className="dropdown-container"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                    role="button"
                                                  >
                                                    <div
                                                      className="ui selection dropdown counter-dropdown-trigger"
                                                    >
                                                      Guests
                                                      <Icon
                                                        className={null}
                                                        color={null}
                                                        hasBorder={false}
                                                        isButton={false}
                                                        isCircular={false}
                                                        isColorInverted={false}
                                                        isDisabled={false}
                                                        isLabelLeft={false}
                                                        labelText={null}
                                                        labelWeight={null}
                                                        name="caret down"
                                                        path={null}
                                                        size={null}
                                                      >
                                                        <i
                                                          className="icon"
                                                        >
                                                          <svg
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20,8.5l-8,7-8-7Z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </i>
                                                      </Icon>
                                                    </div>
                                                  </div>
                                                </RefFindNode>
                                              </Ref>
                                            </Portal>
                                          </Popup>
                                        </CounterDropdown>
                                      </div>
                                      <div
                                        className="button-container"
                                      >
                                        <Button
                                          hasShadow={false}
                                          icon="search"
                                          isCompact={false}
                                          isDisabled={false}
                                          isFluid={false}
                                          isFormSubmit={true}
                                          isLoading={false}
                                          isOutlined={false}
                                          isPositionedRight={false}
                                          isRounded={true}
                                          isSecondary={false}
                                          onClick={[Function]}
                                          size={null}
                                        >
                                          <Button
                                            as="button"
                                            basic={false}
                                            circular={true}
                                            className=""
                                            compact={false}
                                            disabled={false}
                                            floated="left"
                                            fluid={false}
                                            loading={false}
                                            onClick={[Function]}
                                            secondary={false}
                                            size={null}
                                            type="submit"
                                          >
                                            <Ref
                                              innerRef={
                                                Object {
                                                  "current": <button
                                                    class="ui circular left floated button"
                                                    type="submit"
                                                  >
                                                    <i
                                                      class="icon"
                                                    >
                                                      <svg
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </i>
                                                    Search
                                                  </button>,
                                                }
                                              }
                                            >
                                              <RefFindNode
                                                innerRef={
                                                  Object {
                                                    "current": <button
                                                      class="ui circular left floated button"
                                                      type="submit"
                                                    >
                                                      <i
                                                        class="icon"
                                                      >
                                                        <svg
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </i>
                                                      Search
                                                    </button>,
                                                  }
                                                }
                                              >
                                                <button
                                                  className="ui circular left floated button"
                                                  onClick={[Function]}
                                                  type="submit"
                                                >
                                                  <Icon
                                                    className={null}
                                                    color={null}
                                                    hasBorder={false}
                                                    isButton={false}
                                                    isCircular={false}
                                                    isColorInverted={false}
                                                    isDisabled={false}
                                                    isLabelLeft={false}
                                                    labelText={null}
                                                    labelWeight={null}
                                                    name="search"
                                                    path={null}
                                                    size={null}
                                                  >
                                                    <i
                                                      className="icon"
                                                    >
                                                      <svg
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </i>
                                                  </Icon>
                                                  Search
                                                </button>
                                              </RefFindNode>
                                            </Ref>
                                          </Button>
                                        </Button>
                                      </div>
                                    </div>
                                  </SearchFields>
                                </form>
                              </Form>
                            </div>
                          </SearchBar>
                        </ShowOn>
                        <ShowOn
                          computer={false}
                          mobile={true}
                          parent="div"
                          parentProps={Object {}}
                          tablet={false}
                          widescreen={false}
                        >
                          <div
                            className="show-on-mobile"
                          >
                            <SearchBar
                              className={null}
                              datesCheckInLabel="Check in"
                              datesCheckOutLabel="Check out"
                              datesInputOnFocusChange={[Function]}
                              getIsDayBlocked={[Function]}
                              guestsInputLabel="Guests"
                              isCalendarIconDisplayed={false}
                              isDisplayedAsModal={true}
                              isFixed={false}
                              isStackable={false}
                              locationInputLabel="Location"
                              locationOptions={null}
                              modalHeadingText="Check our availability"
                              modalSummaryElement={null}
                              onChangeInput={[Function]}
                              onSubmit={[Function]}
                              searchButton={
                                <Button
                                  hasShadow={false}
                                  icon="search"
                                  isCompact={false}
                                  isDisabled={false}
                                  isFluid={false}
                                  isFormSubmit={true}
                                  isLoading={false}
                                  isOutlined={false}
                                  isPositionedRight={false}
                                  isRounded={true}
                                  isSecondary={false}
                                  onClick={[Function]}
                                  size={null}
                                >
                                  Search
                                </Button>
                              }
                              summaryElement={null}
                              willLocationDropdownOpenAbove={false}
                            >
                              <SearchModal
                                className={null}
                                datesCheckInLabel="Check in"
                                datesCheckOutLabel="Check out"
                                datesInputOnFocusChange={[Function]}
                                getIsDayBlocked={[Function]}
                                guestsInputLabel="Guests"
                                isCalendarIconDisplayed={false}
                                isDisplayedAsModal={true}
                                isFixed={false}
                                isModalOpen={false}
                                isStackable={false}
                                locationInputLabel="Location"
                                locationOptions={null}
                                modalHeadingText="Check our availability"
                                modalSummaryElement={null}
                                onChangeInput={[Function]}
                                onInputChange={[Function]}
                                onSubmit={[Function]}
                                searchButton={
                                  <Button
                                    hasShadow={false}
                                    icon="search"
                                    isCompact={false}
                                    isDisabled={false}
                                    isFluid={false}
                                    isFormSubmit={true}
                                    isLoading={false}
                                    isOutlined={false}
                                    isPositionedRight={false}
                                    isRounded={true}
                                    isSecondary={false}
                                    onClick={[Function]}
                                    size={null}
                                  >
                                    Search
                                  </Button>
                                }
                                summaryElement={null}
                                willLocationDropdownOpenAbove={false}
                              >
                                <Modal
                                  hasCloseIcon={true}
                                  hasPadding={true}
                                  hasRoundedCorners={false}
                                  header={
                                    <Heading
                                      className={null}
                                      hasMargin={true}
                                      isColorInverted={false}
                                      size="small"
                                      textAlign={null}
                                    >
                                      Check our availability
                                    </Heading>
                                  }
                                  isDark={false}
                                  isFullscreen={true}
                                  isOpen={false}
                                  onClose={[Function]}
                                  size="tiny"
                                  trigger={
                                    <div
                                      data-test-id="search-bar-search-modal-trigger"
                                      onClick={[Function]}
                                    >
                                      <Button
                                        hasShadow={false}
                                        icon="search"
                                        isCompact={false}
                                        isDisabled={false}
                                        isFluid={false}
                                        isFormSubmit={true}
                                        isLoading={false}
                                        isOutlined={false}
                                        isPositionedRight={false}
                                        isRounded={true}
                                        isSecondary={false}
                                        onClick={[Function]}
                                        size={null}
                                      >
                                        Search
                                      </Button>
                                    </div>
                                  }
                                >
                                  <Modal
                                    centered={true}
                                    className="has-padding"
                                    closeIcon={
                                      <Icon
                                        className={null}
                                        color={null}
                                        hasBorder={false}
                                        isButton={false}
                                        isCircular={false}
                                        isColorInverted={false}
                                        isDisabled={false}
                                        isLabelLeft={false}
                                        labelText={null}
                                        labelWeight={null}
                                        name="close"
                                        path={null}
                                        size={null}
                                      />
                                    }
                                    closeOnDimmerClick={true}
                                    closeOnDocumentClick={false}
                                    dimmer="inverted"
                                    eventPool="Modal"
                                    onClose={[Function]}
                                    open={false}
                                    size="fullscreen"
                                    trigger={
                                      <div
                                        data-test-id="search-bar-search-modal-trigger"
                                        onClick={[Function]}
                                      >
                                        <Button
                                          hasShadow={false}
                                          icon="search"
                                          isCompact={false}
                                          isDisabled={false}
                                          isFluid={false}
                                          isFormSubmit={true}
                                          isLoading={false}
                                          isOutlined={false}
                                          isPositionedRight={false}
                                          isRounded={true}
                                          isSecondary={false}
                                          onClick={[Function]}
                                          size={null}
                                        >
                                          Search
                                        </Button>
                                      </div>
                                    }
                                  >
                                    <Portal
                                      closeOnDocumentClick={false}
                                      closeOnEscape={true}
                                      eventPool="Modal"
                                      mountNode={<body />}
                                      onClose={[Function]}
                                      onMount={[Function]}
                                      onOpen={[Function]}
                                      onUnmount={[Function]}
                                      open={false}
                                      openOnTriggerClick={true}
                                      trigger={
                                        <div
                                          data-test-id="search-bar-search-modal-trigger"
                                          onClick={[Function]}
                                        >
                                          <Button
                                            hasShadow={false}
                                            icon="search"
                                            isCompact={false}
                                            isDisabled={false}
                                            isFluid={false}
                                            isFormSubmit={true}
                                            isLoading={false}
                                            isOutlined={false}
                                            isPositionedRight={false}
                                            isRounded={true}
                                            isSecondary={false}
                                            onClick={[Function]}
                                            size={null}
                                          >
                                            Search
                                          </Button>
                                        </div>
                                      }
                                    >
                                      <Ref
                                        innerRef={[Function]}
                                      >
                                        <RefFindNode
                                          innerRef={[Function]}
                                        >
                                          <div
                                            data-test-id="search-bar-search-modal-trigger"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                          >
                                            <Button
                                              hasShadow={false}
                                              icon="search"
                                              isCompact={false}
                                              isDisabled={false}
                                              isFluid={false}
                                              isFormSubmit={true}
                                              isLoading={false}
                                              isOutlined={false}
                                              isPositionedRight={false}
                                              isRounded={true}
                                              isSecondary={false}
                                              onClick={[Function]}
                                              size={null}
                                            >
                                              <Button
                                                as="button"
                                                basic={false}
                                                circular={true}
                                                className=""
                                                compact={false}
                                                disabled={false}
                                                floated="left"
                                                fluid={false}
                                                loading={false}
                                                onClick={[Function]}
                                                secondary={false}
                                                size={null}
                                                type="submit"
                                              >
                                                <Ref
                                                  innerRef={
                                                    Object {
                                                      "current": <button
                                                        class="ui circular left floated button"
                                                        type="submit"
                                                      >
                                                        <i
                                                          class="icon"
                                                        >
                                                          <svg
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </i>
                                                        Search
                                                      </button>,
                                                    }
                                                  }
                                                >
                                                  <RefFindNode
                                                    innerRef={
                                                      Object {
                                                        "current": <button
                                                          class="ui circular left floated button"
                                                          type="submit"
                                                        >
                                                          <i
                                                            class="icon"
                                                          >
                                                            <svg
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </i>
                                                          Search
                                                        </button>,
                                                      }
                                                    }
                                                  >
                                                    <button
                                                      className="ui circular left floated button"
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <Icon
                                                        className={null}
                                                        color={null}
                                                        hasBorder={false}
                                                        isButton={false}
                                                        isCircular={false}
                                                        isColorInverted={false}
                                                        isDisabled={false}
                                                        isLabelLeft={false}
                                                        labelText={null}
                                                        labelWeight={null}
                                                        name="search"
                                                        path={null}
                                                        size={null}
                                                      >
                                                        <i
                                                          className="icon"
                                                        >
                                                          <svg
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20.22,4.14a6.38,6.38,0,0,0-9.75,8.2l-1.8,1.74a1.77,1.77,0,0,0-2,.31l-4.14,4a1.77,1.77,0,0,0,0,2.49l.37.39a1.77,1.77,0,0,0,2.5,0l4.15-4a1.79,1.79,0,0,0,.38-2l1.8-1.73a6.39,6.39,0,0,0,8.54-9.46ZM8.69,16.48l-4.15,4a.6.6,0,0,1-.85,0l-.37-.38a.62.62,0,0,1,0-.86l4.15-4a.61.61,0,0,1,.84,0l.2.2.19.21A.61.61,0,0,1,8.69,16.48Zm2.13-3.67h0L11,13Zm.41.41L11,13l.2.18Zm8-.88a5.23,5.23,0,1,1,.13-7.4A5.24,5.24,0,0,1,19.25,12.34Z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </i>
                                                      </Icon>
                                                      Search
                                                    </button>
                                                  </RefFindNode>
                                                </Ref>
                                              </Button>
                                            </Button>
                                          </div>
                                        </RefFindNode>
                                      </Ref>
                                    </Portal>
                                  </Modal>
                                </Modal>
                              </SearchModal>
                            </SearchBar>
                          </div>
                        </ShowOn>
                      </div>
                    </GridRow>
                  </GridRow>
                </div>
              </Grid>
            </Grid>
          </div>
        </div>
      </div>
    </div>
  </FlexContainer>
</SlideshowHero>
`;
