// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getHiddenMenuMarkup should render the right structure 1`] = `
Array [
  <MenuItem
    className="no-underline"
    link={true}
  >
    <div
      className="link item no-underline"
      onClick={[Function]}
    >
      <Button
        hasShadow={false}
        icon={null}
        isCompact={false}
        isDisabled={false}
        isLoading={false}
        isPositionedRight={false}
        isRounded={true}
        isSecondary={false}
        onClick={[Function]}
        size={null}
      >
        <Button
          as="button"
          circular={true}
          className=""
          compact={false}
          disabled={false}
          floated="left"
          loading={false}
          onClick={[Function]}
          secondary={false}
          size={null}
        >
          <button
            className="ui circular left floated button"
            onClick={[Function]}
            role="button"
          >
            some Elisabeth
          </button>
        </Button>
      </Button>
    </div>
  </MenuItem>,
  <MenuItem
    className="no-underline"
  >
    <div
      className="item no-underline"
      onClick={[Function]}
    >
      <Modal
        hasCloseIcon={true}
        hasPadding={false}
        hasRoundedCorners={false}
        header={
          <MenuItem
            link={true}
          >
            <Image
              alt="someLogoText"
              as="img"
              sizes="someLogoSizes"
              src="someLogoSrc"
              srcSet="someLogoSrcSet"
              ui={true}
            />
          </MenuItem>
        }
        isFullscreen={true}
        onClose={[Function]}
        size="tiny"
        trigger={
          <Icon
            color={null}
            hasBorder={false}
            isButton={false}
            isCircular={false}
            isColorInverted={false}
            isDisabled={false}
            isLabelLeft={false}
            labelText={null}
            labelWeight={null}
            name="bars"
            path={null}
            size={null}
          />
        }
      >
        <Modal
          className=""
          closeIcon={
            <Icon
              color={null}
              hasBorder={false}
              isButton={false}
              isCircular={false}
              isColorInverted={false}
              isDisabled={false}
              isLabelLeft={false}
              labelText={null}
              labelWeight={null}
              name="close"
              path={null}
              size={null}
            />
          }
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer="inverted"
          eventPool="Modal"
          onClose={[Function]}
          size="fullscreen"
          trigger={
            <Icon
              color={null}
              hasBorder={false}
              isButton={false}
              isCircular={false}
              isColorInverted={false}
              isDisabled={false}
              isLabelLeft={false}
              labelText={null}
              labelWeight={null}
              name="bars"
              path={null}
              size={null}
            />
          }
        >
          <Portal
            className="ui inverted page modals dimmer transition visible active"
            closeOnDocumentClick={false}
            closeOnEscape={true}
            closeOnRootNodeClick={true}
            eventPool="Modal"
            mountNode={<body />}
            onClose={[Function]}
            onMount={[Function]}
            onOpen={[Function]}
            onUnmount={[Function]}
            openOnTriggerClick={true}
            trigger={
              <Icon
                color={null}
                hasBorder={false}
                isButton={false}
                isCircular={false}
                isColorInverted={false}
                isDisabled={false}
                isLabelLeft={false}
                labelText={null}
                labelWeight={null}
                name="bars"
                path={null}
                size={null}
              />
            }
          >
            <Ref
              innerRef={[Function]}
            >
              <Icon
                color={null}
                hasBorder={false}
                isButton={false}
                isCircular={false}
                isColorInverted={false}
                isDisabled={false}
                isLabelLeft={false}
                labelText={null}
                labelWeight={null}
                name="bars"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                path={null}
                size={null}
              >
                <i
                  className="icon"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <svg
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20.5,5.06H3.5a.23.23,0,0,0-.24.23V6.64a.24.24,0,0,0,.24.24h17a.24.24,0,0,0,.24-.24V5.29a.23.23,0,0,0-.24-.23Zm0,6H3.5a.24.24,0,0,0-.24.24v1.34a.24.24,0,0,0,.24.24h17a.24.24,0,0,0,.24-.24V11.33a.24.24,0,0,0-.24-.24Zm0,6H3.5a.24.24,0,0,0-.24.24v1.35a.23.23,0,0,0,.24.23h17a.23.23,0,0,0,.24-.23V17.36a.24.24,0,0,0-.24-.24Z"
                      fill="currentColor"
                    />
                  </svg>
                </i>
              </Icon>
            </Ref>
          </Portal>
        </Modal>
      </Modal>
    </div>
  </MenuItem>,
]
`;
