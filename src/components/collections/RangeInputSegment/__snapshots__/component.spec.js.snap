// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RangeInputSegment /> should return the right structure 1`] = `
<RangeInputSegment
  description="ðŸˆº"
  domain={
    Array [
      0,
      100,
    ]
  }
  heading="ðŸˆµ"
  isShowingTrackOutsideLeft={true}
  isShowingTrackOutsideRight={false}
  name=""
  onChange={[Function]}
  range={Object {}}
  renderValue={[Function]}
  step={1}
>
  <Segment
    className="is-input-segment"
    vertical={true}
  >
    <div
      className="ui vertical segment is-input-segment"
    >
      <FlexContainer
        alignContent={null}
        alignItems="baseline"
        className={null}
        flexDirection="column"
        flexWrap={null}
        justifyContent="space-between"
      >
        <div
          className="flex-container"
          style={
            Object {
              "alignContent": null,
              "alignItems": "baseline",
              "display": "flex",
              "flexDirection": "column",
              "flexGrow": "1",
              "flexWrap": null,
              "height": "100%",
              "justifyContent": "space-between",
            }
          }
        >
          <Heading
            className={null}
            hasMargin={true}
            isColorInverted={false}
            size="medium"
            textAlign={null}
          >
            <Header
              as="h3"
              className=""
              inverted={false}
              textAlign={null}
            >
              <h3
                className="ui header"
              >
                ðŸˆµ
              </h3>
            </Header>
          </Heading>
          <Paragraph
            isCompact={false}
            size="medium"
            weight={null}
          >
            <p
              className=""
            >
              ðŸˆº
            </p>
          </Paragraph>
          <Divider
            className=""
            hasLine={false}
            size="small"
          >
            <Divider
              className="is-size-small"
              hidden={true}
              section={false}
            >
              <div
                className="ui hidden divider is-size-small"
              />
            </Divider>
          </Divider>
          <Range
            domain={
              Array [
                0,
                100,
              ]
            }
            isShowingTrackOutsideLeft={true}
            isShowingTrackOutsideRight={false}
            name=""
            onChange={[Function]}
            range={Object {}}
            renderValue={[Function]}
            step={1}
          >
            <Slider
              className="ui range"
              component="div"
              disabled={false}
              domain={
                Array [
                  0,
                  100,
                ]
              }
              flatten={false}
              mode={2}
              onChange={[Function]}
              onSlideEnd={[Function]}
              onSlideStart={[Function]}
              onUpdate={[Function]}
              reversed={false}
              rootProps={Object {}}
              rootStyle={Object {}}
              step={1}
              values={
                Array [
                  0,
                ]
              }
              vertical={false}
              warnOnChanges={false}
            >
              <div
                className="ui range"
                style={Object {}}
              >
                <Rail
                  activeHandleID={null}
                  emitKeyboard={[Function]}
                  emitMouse={[Function]}
                  emitTouch={[Function]}
                  getEventData={[Function]}
                  handles={
                    Array [
                      Object {
                        "id": "$$-0",
                        "percent": 0,
                        "value": 0,
                      },
                    ]
                  }
                  key=".0"
                  scale={
                    LinearScale {
                      "domain": Array [
                        0,
                        100,
                      ],
                      "interpolator": [Function],
                      "range": Array [
                        0,
                        100,
                      ],
                    }
                  }
                >
                  <div
                    className="rail"
                    onMouseDown={[Function]}
                    onTouchStart={[Function]}
                  />
                </Rail>
                <div
                  key=".1"
                />
                <Tracks
                  activeHandleID={null}
                  emitKeyboard={[Function]}
                  emitMouse={[Function]}
                  emitTouch={[Function]}
                  getEventData={[Function]}
                  handles={
                    Array [
                      Object {
                        "id": "$$-0",
                        "percent": 0,
                        "value": 0,
                      },
                    ]
                  }
                  key=".2"
                  left={true}
                  right={false}
                  scale={
                    LinearScale {
                      "domain": Array [
                        0,
                        100,
                      ],
                      "interpolator": [Function],
                      "range": Array [
                        0,
                        100,
                      ],
                    }
                  }
                >
                  <div
                    className="track"
                    key="0"
                    onMouseDown={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "left": "0%",
                        "width": "0%",
                      }
                    }
                  />
                </Tracks>
                <Handles
                  activeHandleID={null}
                  emitKeyboard={[Function]}
                  emitMouse={[Function]}
                  emitTouch={[Function]}
                  getEventData={[Function]}
                  handles={
                    Array [
                      Object {
                        "id": "$$-0",
                        "percent": 0,
                        "value": 0,
                      },
                    ]
                  }
                  key=".3"
                  scale={
                    LinearScale {
                      "domain": Array [
                        0,
                        100,
                      ],
                      "interpolator": [Function],
                      "range": Array [
                        0,
                        100,
                      ],
                    }
                  }
                >
                  <div
                    className="handle-clickable-area"
                    key="0"
                    onKeyDown={[Function]}
                    onMouseDown={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "left": "calc(0% - 10px)",
                      }
                    }
                  >
                    <div
                      className="handle"
                    />
                    <Label
                      pointing="below"
                    >
                      <div
                        className="ui pointing below label"
                        onClick={[Function]}
                      >
                        0
                      </div>
                    </Label>
                  </div>
                </Handles>
              </div>
            </Slider>
          </Range>
        </div>
      </FlexContainer>
    </div>
  </Segment>
</RangeInputSegment>
`;
