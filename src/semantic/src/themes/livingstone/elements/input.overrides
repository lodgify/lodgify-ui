// input

.ui.input {
  max-width: @inputMaxWidth;
  width: @inputWidth;
}

.ui.input input,
.ui.input textarea {
  margin-top: @inputMarginTop;
  width: @inputWidth;
}

.ui.input textarea {
  background: @background;
  border: @border;
  font-family: @inputFont;
  outline: none;
  padding: @padding;
}

.ui.input textarea:focus  {
  border-color: @focusBorderColor;
  background: @focusBackground;
  color: @focusColor;
}

.ui.input:hover:not(.error):not(.valid):not(.dirty) input:not(:focus),
.ui.input:hover:not(.error):not(.valid):not(.dirty) textarea:not(:focus) {
  background: @focusedInputBackground;
  border-color: @hoveredInputBorderColor;
}

.ui.input.dirty:not(.error):not(.valid) input,
.ui.input.dirty:not(.error):not(.valid) textarea {
  background: @focusedInputBackground;
  border-color: @focusedFormBorderColor;
}

// error

.ui.input.error textarea {
  background: @errorBackground;
  border-color: @errorBorder;
}

.ui.input.error .ui.pointing.below.label {
  font-weight: @errorMessageFontWeight;
  padding: @errorMessagePadding;
  position: absolute;
  right: @errorMessageRightPosition;
  top: (@inputMarginTop + @errorMessageTopPosition);
}

.ui.input.error .ui.pointing.below.label:before {
  left: unset;
  right: 6px;
}

// valid

.ui.input.valid input,
.ui.input.valid textarea {
  background: @focusedInputBackground;
  border-color: @validBorderColor;
}

.ui.input i.big.green.checkmark.icon {
  position: absolute;
  right: @inputHorizontalPadding;
  top: (@inputMarginTop + @validIconPositionTop);
  z-index: @inputIconZIndex;
}


// label

.ui.input label {
  color: @labelColor;
  cursor: text;
  left: @inputHorizontalPadding;
  position: absolute;
  top: (@inputMarginTop + @inputVerticalPadding);
  transition: transform @defaultDuration, font-size @defaultDuration;
}

.ui.input input:focus + label,
.ui.input textarea:focus + label,
.ui.input.dirty > label {
  color: @labelFocusColor;
  font-size: @labelFocusFontSize;
  transform: translate(-(@inputMarginTop), -(@labelFocusXTranslate));
}


/*-------------------
       Phone input
--------------------*/

div.react-phone-number-input {
  width: 100%;

  input.rrui__input-field {
    margin-top: @inputMarginTop !important;  
    color: red;
    height: @phoneInputHeight; /*overwrite a rule for .rrui__input*/
  }

  .rrui__select__arrow {
    border-width: @phoneInputArrowBorder;
    margin: @phoneInputArrowMargin;
  }

  button.rrui__button-reset,
  button.rrui__select__button {
    border: none;
  }

  .rrui__select--collapsed,
  .rrui__select--expanded {
    position: absolute;
    z-index: @inputIconZIndex + 1;
  }

  .rrui__select--collapsed {
    left: @10px;
    top: (@inputMarginTop + @validIconPositionTop);
    & + input {
      padding-left: @55px !important;
    }
  }

  .rrui__select--expanded {
    top: -(@phoneInputHeight);
    width: 100%;

    ul {
      margin-left: @18px;
      width: 100%;
    }
  }
}
